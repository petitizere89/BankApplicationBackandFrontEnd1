2021-06-29 11:17:47 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 11:17:47 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-06-29 11:17:47 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-06-29 11:17:48 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-06-29 11:17:48 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-06-29 11:17:48 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-06-29 11:17:48 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-06-29 11:17:48 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-06-29 11:17:48 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-06-29 11:17:48 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-06-29 11:17:48 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-06-29 11:17:48 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-06-29 11:17:48 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-06-29 11:17:48 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-06-29 11:17:48 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7bc10d84
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7bc10d84
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7bc10d84
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73ff4fae
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2611b9a3
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f446bef
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@458342d3
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@458342d3
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@458342d3
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@36676c1a
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@36676c1a
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@36676c1a
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@293d0107
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@293d0107
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@293d0107
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@55e8ec2f
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@55e8ec2f
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e8ec2f
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@4c51bb7
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@4c51bb7
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c51bb7
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7d3430a7
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7d3430a7
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7d3430a7
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5536379e
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5536379e
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5536379e
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b491fee
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b491fee
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58e6d4b8
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58e6d4b8
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@51850751
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@51850751
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@e260766
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7c56e013
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@34a1d21f
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@34a1d21f
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@2cb3d0f7
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2cb3d0f7
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@4ae33a11
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4ae33a11
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a3591c5
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a3591c5
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@482d776b
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@482d776b
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7a7471ce
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7a7471ce
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63648ee9
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63648ee9
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@24faea88
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@24faea88
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76ba13c
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76ba13c
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@7e242b4d
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7e242b4d
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1536602f
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1536602f
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@c7a975a
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@c7a975a
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@c7a975a
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3c0fae6c
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6326d182
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6326d182
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6326d182
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e809b79
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@55795845
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@55795845
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@6175619b
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6175619b
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2cf92cc7
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2cf92cc7
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@5d465e4b
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5d465e4b
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@78aea4b9
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@78aea4b9
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4215838f
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@3e2943ab
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3e2943ab
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@3e2943ab
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c9399a4
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c9399a4
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c9399a4
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@172ca72b
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5e8f9e2d
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@60fa3495
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@60fa3495
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@60fa3495
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5fcacc0
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5fcacc0
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5fcacc0
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@6865c751
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@5b6813df
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@35fe2125
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@35fe2125
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60b71e8f
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@5fd62371
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5fd62371
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@1568159
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1568159
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@f9879ac
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@224b4d61
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3f23a3a0
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@72ccd81a
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72ccd81a
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5d25e6bb
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ce5a68e
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@9d157ff
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f162cc0
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5df417a7
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7c041b41
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f69d591
2021-06-29 11:17:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@61078690
2021-06-29 11:17:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-06-29 11:17:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-06-29 11:17:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 11:17:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 11:17:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-06-29 11:17:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-06-29 11:17:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-06-29 11:17:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 11:17:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-06-29 11:17:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-06-29 11:17:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-06-29 11:17:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-06-29 11:17:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 11:17:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-06-29 11:17:48 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-06-29 11:17:48 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-29 11:17:48 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, user=social}
2021-06-29 11:17:48 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-06-29 11:17:48 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-06-29 11:17:48 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-06-29 11:17:48 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-06-29 11:17:48 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.0 JDBC4 (build 801)
      major : 9
      minor : 0
2021-06-29 11:17:48 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
2021-06-29 11:17:48 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-06-29 11:17:48 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-06-29 11:18:05 DEBUG DefaultSchemaNameResolver:53 - Unable to use Java 1.7 Connection#getSchema
2021-06-29 11:18:05 DEBUG JdbcEnvironmentImpl:314 - Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.PostgreSQL10Dialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:311)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:175)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:39)
	at SocialHubDriver.main(SocialHubDriver.java:30)
2021-06-29 11:18:05 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-06-29 11:18:05 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@25b865b5
2021-06-29 11:18:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@25b865b5
2021-06-29 11:18:05 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@78aea4b9
2021-06-29 11:18:05 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6df7988f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27b22f74]
2021-06-29 11:18:05 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-06-29 11:18:05 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 11:18:06 DEBUG EntityBinder:430 - Import with entity name User
2021-06-29 11:18:06 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-06-29 11:18:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-06-29 11:18:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-06-29 11:18:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-06-29 11:18:06 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-06-29 11:18:06 DEBUG PropertyBinder:266 - Building property id
2021-06-29 11:18:06 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 11:18:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-06-29 11:18:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-06-29 11:18:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-06-29 11:18:06 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-06-29 11:18:06 DEBUG PropertyBinder:266 - Building property email
2021-06-29 11:18:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-06-29 11:18:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-06-29 11:18:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-06-29 11:18:06 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-06-29 11:18:06 DEBUG PropertyBinder:266 - Building property firstName
2021-06-29 11:18:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-06-29 11:18:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-06-29 11:18:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-06-29 11:18:06 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-06-29 11:18:06 DEBUG PropertyBinder:266 - Building property lastName
2021-06-29 11:18:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-06-29 11:18:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-06-29 11:18:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-06-29 11:18:06 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-06-29 11:18:06 DEBUG PropertyBinder:266 - Building property password
2021-06-29 11:18:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:18:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-06-29 11:18:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 11:18:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 11:18:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 11:18:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 11:18:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:18:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:18:06 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-06-29 11:18:06 DEBUG PropertyBinder:266 - Building property posts
2021-06-29 11:18:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-06-29 11:18:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-06-29 11:18:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-06-29 11:18:06 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-06-29 11:18:06 DEBUG PropertyBinder:266 - Building property username
2021-06-29 11:18:06 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-06-29 11:18:06 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 11:18:06 DEBUG EntityBinder:430 - Import with entity name Post
2021-06-29 11:18:06 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-06-29 11:18:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-06-29 11:18:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-06-29 11:18:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-06-29 11:18:06 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-06-29 11:18:06 DEBUG PropertyBinder:266 - Building property postId
2021-06-29 11:18:06 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 11:18:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-06-29 11:18:06 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-06-29 11:18:06 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-06-29 11:18:06 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-06-29 11:18:06 DEBUG PropertyBinder:266 - Building property postContent
2021-06-29 11:18:06 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 11:18:06 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-06-29 11:18:06 DEBUG PropertyBinder:266 - Building property user
2021-06-29 11:18:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-06-29 11:18:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-06-29 11:18:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-06-29 11:18:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-06-29 11:18:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-06-29 11:18:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-06-29 11:18:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-06-29 11:18:06 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-06-29 11:18:06 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-06-29 11:18:06 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-06-29 11:18:06 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-06-29 11:18:06 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-06-29 11:18:06 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-06-29 11:18:06 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-06-29 11:18:06 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-06-29 11:18:06 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 11:18:06 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 11:18:06 DEBUG SessionFactoryImpl:196 - Building session factory
2021-06-29 11:18:06 DEBUG Settings:70 - SessionFactory name : null
2021-06-29 11:18:06 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-06-29 11:18:06 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-06-29 11:18:06 DEBUG Settings:74 - Statistics: disabled
2021-06-29 11:18:06 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-06-29 11:18:06 DEBUG Settings:77 - Default entity-mode: pojo
2021-06-29 11:18:06 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-06-29 11:18:06 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-06-29 11:18:06 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-06-29 11:18:06 DEBUG Settings:82 - Default batch fetch size: -1
2021-06-29 11:18:06 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-06-29 11:18:06 DEBUG Settings:84 - Default null ordering: NONE
2021-06-29 11:18:06 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-06-29 11:18:06 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-06-29 11:18:06 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-06-29 11:18:06 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-06-29 11:18:06 DEBUG Settings:92 - Query language substitutions: {}
2021-06-29 11:18:06 DEBUG Settings:93 - Named query checking : enabled
2021-06-29 11:18:06 DEBUG Settings:95 - Second-level cache: disabled
2021-06-29 11:18:06 DEBUG Settings:96 - Second-level query cache: disabled
2021-06-29 11:18:06 DEBUG Settings:97 - Second-level query cache factory: null
2021-06-29 11:18:06 DEBUG Settings:98 - Second-level cache region prefix: null
2021-06-29 11:18:06 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-06-29 11:18:06 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-06-29 11:18:06 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-06-29 11:18:06 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-06-29 11:18:06 DEBUG Settings:104 - JDBC batch size: 15
2021-06-29 11:18:06 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-06-29 11:18:06 DEBUG Settings:106 - Scrollable result sets: enabled
2021-06-29 11:18:06 DEBUG Settings:107 - Wrap result sets: disabled
2021-06-29 11:18:06 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): disabled
2021-06-29 11:18:06 DEBUG Settings:109 - JDBC result set fetch size: null
2021-06-29 11:18:06 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-06-29 11:18:06 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-06-29 11:18:06 DEBUG Settings:113 - JPA compliance - query : 
2021-06-29 11:18:06 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-06-29 11:18:06 DEBUG Settings:115 - JPA compliance - lists : 
2021-06-29 11:18:06 DEBUG Settings:116 - JPA compliance - transactions : 
2021-06-29 11:18:06 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-06-29 11:18:06 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\Documents\Revtature\SocialHubWeek4\target\classes;C:\Program Files\apache-tomcat-9.0.43\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.43\lib\ecj-4.18.jar;C:\Program Files\apache-tomcat-9.0.43\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.43\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin, sun.java.command=SocialHubDriver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=15.0.1, user.dir=D:\Documents\Revtature\SocialHubWeek4, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5524b72f, java.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Java\jdk1.8.0_281;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\WorldPainter;C:\Program Files\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\OpenSSL-Win64\bin\;C:\Program Files\apache-maven-3.6.3\bin;C:\Program Files\nodejs\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Java\jdk1.8.0_281\bin;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\MongoDB;C:\Program Files\apache-maven-3.6.3\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Users\Ethan\AppData\Local\GitHubDesktop\bin;C:\Program Files\sts-4.9.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=59.0}
2021-06-29 11:18:06 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-06-29 11:18:06 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-06-29 11:18:06 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-06-29 11:18:06 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-06-29 11:18:06 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-06-29 11:18:06 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-06-29 11:18:06 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-06-29 11:18:06 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-06-29 11:18:06 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-06-29 11:18:06 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-06-29 11:18:06 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-06-29 11:18:06 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-06-29 11:18:06 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-06-29 11:18:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:18:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:18:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:18:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:18:06 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-06-29 11:18:06 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-06-29 11:18:06 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6df7988f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4364712f]
2021-06-29 11:18:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:18:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:18:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:18:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:18:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:18:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:18:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:18:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:18:06 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-06-29 11:18:06 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-06-29 11:18:06 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-06-29 11:18:06 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-06-29 11:18:06 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-06-29 11:18:06 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-06-29 11:18:06 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-06-29 11:18:06 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_0_, post_.user_id as user_id3_0_ from posts post_ where post_.post_id=?
2021-06-29 11:18:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-06-29 11:18:06 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-06-29 11:18:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-06-29 11:18:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a401749]
2021-06-29 11:18:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:18:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:18:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61874b9d]
2021-06-29 11:18:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:18:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:18:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:1>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}

2021-06-29 11:18:06 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_0_0_, post0_.content as content2_0_0_, post0_.user_id as user_id3_0_0_ from posts post0_ where post0_.post_id=?
2021-06-29 11:18:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36790bec]
2021-06-29 11:18:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:18:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:18:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e3d7dd]
2021-06-29 11:18:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:18:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:18:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:1>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}

2021-06-29 11:18:06 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_0_0_, post0_.content as content2_0_0_, post0_.user_id as user_id3_0_0_ from posts post0_ where post0_.post_id=?
2021-06-29 11:18:06 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_0_1_, post0_.content as content2_0_1_, post0_.user_id as user_id3_0_1_, user1_.user_id as user_id1_1_0_, user1_.email as email2_1_0_, user1_.first_name as first_na3_1_0_, user1_.last_name as last_nam4_1_0_, user1_.password as password5_1_0_, user1_.username as username6_1_0_ from posts post0_ left outer join users user1_ on post0_.user_id=user1_.user_id where post0_.post_id=?
2021-06-29 11:18:06 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_0_1_, post0_.content as content2_0_1_, post0_.user_id as user_id3_0_1_, user1_.user_id as user_id1_1_0_, user1_.email as email2_1_0_, user1_.first_name as first_na3_1_0_, user1_.last_name as last_nam4_1_0_, user1_.password as password5_1_0_, user1_.username as username6_1_0_ from posts post0_ left outer join users user1_ on post0_.user_id=user1_.user_id where post0_.post_id=?
2021-06-29 11:18:06 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-06-29 11:18:06 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-06-29 11:18:06 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.password as password5_1_, user_.username as username6_1_ from users user_ where user_.user_id=?
2021-06-29 11:18:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 11:18:06 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-06-29 11:18:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-06-29 11:18:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@494c8f29]
2021-06-29 11:18:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 11:18:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 11:18:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 11:18:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 11:18:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 11:18:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7792d851]
2021-06-29 11:18:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5eb5da12]
2021-06-29 11:18:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 11:18:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:18:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:18:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:1>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}

2021-06-29 11:18:06 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.password as password5_1_0_, user0_.username as username6_1_0_ from users user0_ where user0_.user_id=?
2021-06-29 11:18:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f486211]
2021-06-29 11:18:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 11:18:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 11:18:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 11:18:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 11:18:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 11:18:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a479fda]
2021-06-29 11:18:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8a6631b]
2021-06-29 11:18:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 11:18:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:18:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:18:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:1>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}

2021-06-29 11:18:06 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.password as password5_1_0_, user0_.username as username6_1_0_ from users user0_ where user0_.user_id=?
2021-06-29 11:18:06 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.password as password5_1_1_, user0_.username as username6_1_1_, posts1_.user_id as user_id3_0_3_, posts1_.post_id as post_id1_0_3_, posts1_.post_id as post_id1_0_0_, posts1_.content as content2_0_0_, posts1_.user_id as user_id3_0_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 11:18:06 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.password as password5_1_1_, user0_.username as username6_1_1_, posts1_.user_id as user_id3_0_3_, posts1_.post_id as post_id1_0_3_, posts1_.post_id as post_id1_0_0_, posts1_.content as content2_0_0_, posts1_.user_id as user_id3_0_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 11:18:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10244722]
2021-06-29 11:18:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61615b4a]
2021-06-29 11:18:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:18:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:18:06 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-06-29 11:18:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:18:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:18:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_0_1_}

2021-06-29 11:18:06 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_0_0_, posts0_.post_id as post_id1_0_0_, posts0_.post_id as post_id1_0_1_, posts0_.content as content2_0_1_, posts0_.user_id as user_id3_0_1_ from posts posts0_ where posts0_.user_id=?
2021-06-29 11:18:06 DEBUG SQL:94 - alter table if exists posts drop constraint if exists FK5lidm6cqbc7u4xhqpxm898qme
2021-06-29 11:18:06 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@78b7f805] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 11:18:06 DEBUG SqlExceptionHelper:223 - SQL Warning
NOTICE: relation "posts" does not exist, skipping
	at org.postgresql.core.v3.QueryExecutorImpl.receiveNoticeResponse(QueryExecutorImpl.java:2112)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1859)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:500)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:374)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:366)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:39)
	at SocialHubDriver.main(SocialHubDriver.java:30)
2021-06-29 11:18:06 WARN  SqlExceptionHelper:230 - SQL Warning Code: 0, SQLState: 00000
2021-06-29 11:18:06 WARN  SqlExceptionHelper:231 - relation "posts" does not exist, skipping
2021-06-29 11:18:06 DEBUG SQL:94 - drop table if exists posts cascade
2021-06-29 11:18:06 DEBUG SqlExceptionHelper:223 - SQL Warning
NOTICE: table "posts" does not exist, skipping
	at org.postgresql.core.v3.QueryExecutorImpl.receiveNoticeResponse(QueryExecutorImpl.java:2112)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1859)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:500)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:374)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:366)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:241)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:39)
	at SocialHubDriver.main(SocialHubDriver.java:30)
2021-06-29 11:18:06 WARN  SqlExceptionHelper:230 - SQL Warning Code: 0, SQLState: 00000
2021-06-29 11:18:06 WARN  SqlExceptionHelper:231 - table "posts" does not exist, skipping
2021-06-29 11:18:06 DEBUG SQL:94 - drop table if exists users cascade
2021-06-29 11:18:06 DEBUG SqlExceptionHelper:223 - SQL Warning
NOTICE: table "users" does not exist, skipping
	at org.postgresql.core.v3.QueryExecutorImpl.receiveNoticeResponse(QueryExecutorImpl.java:2112)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1859)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:500)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:374)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:366)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:241)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:39)
	at SocialHubDriver.main(SocialHubDriver.java:30)
2021-06-29 11:18:06 WARN  SqlExceptionHelper:230 - SQL Warning Code: 0, SQLState: 00000
2021-06-29 11:18:06 WARN  SqlExceptionHelper:231 - table "users" does not exist, skipping
2021-06-29 11:18:06 DEBUG SQL:94 - drop sequence if exists hibernate_sequence
2021-06-29 11:18:06 DEBUG SqlExceptionHelper:223 - SQL Warning
NOTICE: sequence "hibernate_sequence" does not exist, skipping
	at org.postgresql.core.v3.QueryExecutorImpl.receiveNoticeResponse(QueryExecutorImpl.java:2112)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1859)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:500)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:374)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:366)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:249)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:462)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:708)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:39)
	at SocialHubDriver.main(SocialHubDriver.java:30)
2021-06-29 11:18:06 WARN  SqlExceptionHelper:230 - SQL Warning Code: 0, SQLState: 00000
2021-06-29 11:18:06 WARN  SqlExceptionHelper:231 - sequence "hibernate_sequence" does not exist, skipping
2021-06-29 11:18:06 DEBUG SQL:94 - create sequence hibernate_sequence start 1 increment 1
2021-06-29 11:18:06 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7f0b93b4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 11:18:07 DEBUG SQL:94 - create table posts (post_id int4 not null, content varchar(255), user_id int4, primary key (post_id))
2021-06-29 11:18:07 DEBUG SQL:94 - create table users (user_id int4 not null, email varchar(255) not null, first_name varchar(255) not null, last_name varchar(255) not null, password varchar(255) not null, username varchar(255) not null, primary key (user_id))
2021-06-29 11:18:07 DEBUG SQL:94 - alter table if exists users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
2021-06-29 11:18:07 DEBUG SQL:94 - alter table if exists users add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username)
2021-06-29 11:18:07 DEBUG SQL:94 - alter table if exists posts add constraint FK5lidm6cqbc7u4xhqpxm898qme foreign key (user_id) references users
2021-06-29 11:18:07 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-06-29 11:18:07 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-06-29 11:18:07 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 11:18:07 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 11:18:07 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-06-29 11:18:07 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-06-29 11:18:07 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@235c997d
2021-06-29 11:18:07 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 3834f7b7-c041-4669-a72b-c8c908318d32 (<unnamed>)
2021-06-29 11:18:07 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-06-29 11:18:07 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-06-29 11:18:07 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-06-29 11:18:07 DEBUG TransactionImpl:84 - begin
2021-06-29 11:18:07 DEBUG SQL:94 - select nextval ('hibernate_sequence')
2021-06-29 11:18:07 DEBUG SequenceStructure:101 - Sequence value obtained: 1
2021-06-29 11:18:07 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-06-29 11:18:07 DEBUG AbstractSaveEventListener:132 - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2021-06-29 11:18:07 DEBUG TransactionImpl:101 - committing
2021-06-29 11:18:07 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-06-29 11:18:07 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-06-29 11:18:07 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [<unreferenced>] (initialized)
2021-06-29 11:18:07 DEBUG AbstractFlushingEventListener:115 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2021-06-29 11:18:07 DEBUG AbstractFlushingEventListener:122 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2021-06-29 11:18:07 DEBUG EntityPrinter:110 - Listing entities:
2021-06-29 11:18:07 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, id=1, posts=[], email=rick@email.com, username=RickSanchez8820}
2021-06-29 11:18:07 DEBUG SQL:94 - insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 11:18:07 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:18:07 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:18:07 WARN  deprecation:1914 - HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead
2021-06-29 11:23:28 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 11:23:28 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-06-29 11:23:28 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-06-29 11:23:28 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-06-29 11:23:29 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-06-29 11:23:29 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-06-29 11:23:29 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-06-29 11:23:29 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-06-29 11:23:29 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-06-29 11:23:29 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-06-29 11:23:29 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-06-29 11:23:29 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-06-29 11:23:29 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-06-29 11:23:29 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-06-29 11:23:29 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5ed731d0
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@5ed731d0
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5ed731d0
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4b3c354a
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@b968a76
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b5894c8
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@61bcd567
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@61bcd567
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@61bcd567
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@51e8e6e6
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@51e8e6e6
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@51e8e6e6
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@7fc44dec
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@7fc44dec
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7fc44dec
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@74cadd41
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@74cadd41
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@74cadd41
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@878452d
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@878452d
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@878452d
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@6b54655f
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@6b54655f
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6b54655f
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@71984c3
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@71984c3
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@71984c3
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1bc715b8
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1bc715b8
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@63192798
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@63192798
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@5ef0d29e
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@5ef0d29e
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@64df9a61
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34a97744
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@16f7b4af
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@16f7b4af
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@6f0ca692
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6f0ca692
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@6722db6e
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6722db6e
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6d0b5baf
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6d0b5baf
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@186978a6
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@186978a6
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5bf22f18
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5bf22f18
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@741b3bc3
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@741b3bc3
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6d366c9b
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6d366c9b
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@61526469
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@61526469
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@d5ae57e
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@d5ae57e
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@43b4fe19
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@43b4fe19
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@235f4c10
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@235f4c10
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@235f4c10
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@757d6814
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@4fad94a7
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4fad94a7
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4fad94a7
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@77192705
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@5dbe30be
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5dbe30be
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@7fd4acee
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7fd4acee
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@76c7beb3
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@76c7beb3
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@5f2f577
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5f2f577
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@117e0fe5
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@117e0fe5
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4b85880b
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@6ffab045
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@6ffab045
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@6ffab045
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5ac86ba5
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5ac86ba5
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5ac86ba5
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@2d10e0b1
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@71e5f61d
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6a62689d
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6a62689d
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6a62689d
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@69c79f09
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@69c79f09
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@69c79f09
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@6d1d4d7
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@6a988392
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@2cf23c81
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2cf23c81
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@34645867
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@46e8a539
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@46e8a539
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@6b5966e1
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6b5966e1
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6f80fafe
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5f4d427e
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@674c583e
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@2f94c4db
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2f94c4db
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@64bc21ac
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@493dfb8e
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5d25e6bb
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@ce5a68e
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@9d157ff
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2f162cc0
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5df417a7
2021-06-29 11:23:29 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7c041b41
2021-06-29 11:23:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-06-29 11:23:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-06-29 11:23:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 11:23:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 11:23:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-06-29 11:23:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-06-29 11:23:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-06-29 11:23:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 11:23:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-06-29 11:23:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-06-29 11:23:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-06-29 11:23:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-06-29 11:23:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 11:23:29 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-06-29 11:23:29 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-06-29 11:25:56 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 11:25:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-06-29 11:25:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-06-29 11:25:56 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-06-29 11:25:56 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-06-29 11:25:56 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-06-29 11:25:56 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-06-29 11:25:56 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-06-29 11:25:56 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-06-29 11:25:56 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-06-29 11:25:56 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-06-29 11:25:56 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-06-29 11:25:56 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-06-29 11:25:56 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-06-29 11:25:56 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7bc10d84
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7bc10d84
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7bc10d84
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73ff4fae
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2611b9a3
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f446bef
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@458342d3
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@458342d3
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@458342d3
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@36676c1a
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@36676c1a
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@36676c1a
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@293d0107
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@293d0107
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@293d0107
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@55e8ec2f
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@55e8ec2f
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e8ec2f
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@4c51bb7
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@4c51bb7
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c51bb7
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7d3430a7
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7d3430a7
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7d3430a7
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5536379e
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5536379e
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5536379e
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b491fee
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b491fee
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58e6d4b8
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58e6d4b8
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@51850751
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@51850751
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@e260766
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7c56e013
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@34a1d21f
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@34a1d21f
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@2cb3d0f7
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2cb3d0f7
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@4ae33a11
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4ae33a11
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a3591c5
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a3591c5
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@482d776b
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@482d776b
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7a7471ce
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7a7471ce
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63648ee9
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63648ee9
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@24faea88
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@24faea88
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76ba13c
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76ba13c
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@7e242b4d
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7e242b4d
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1536602f
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1536602f
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@c7a975a
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@c7a975a
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@c7a975a
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3c0fae6c
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6326d182
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6326d182
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6326d182
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e809b79
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@55795845
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@55795845
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@6175619b
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6175619b
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2cf92cc7
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2cf92cc7
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@5d465e4b
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5d465e4b
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@78aea4b9
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@78aea4b9
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4215838f
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@3e2943ab
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3e2943ab
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@3e2943ab
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c9399a4
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c9399a4
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c9399a4
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@172ca72b
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5e8f9e2d
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@60fa3495
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@60fa3495
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@60fa3495
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5fcacc0
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5fcacc0
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5fcacc0
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@6865c751
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@5b6813df
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@35fe2125
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@35fe2125
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60b71e8f
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@5fd62371
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5fd62371
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@1568159
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1568159
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@f9879ac
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@224b4d61
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3f23a3a0
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@72ccd81a
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72ccd81a
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5d25e6bb
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ce5a68e
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@9d157ff
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f162cc0
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5df417a7
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7c041b41
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f69d591
2021-06-29 11:25:56 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@61078690
2021-06-29 11:25:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-06-29 11:25:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-06-29 11:25:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 11:25:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 11:25:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-06-29 11:25:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-06-29 11:25:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-06-29 11:25:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 11:25:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-06-29 11:25:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-06-29 11:25:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-06-29 11:25:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-06-29 11:25:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 11:25:56 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-06-29 11:25:56 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-06-29 11:25:56 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-29 11:25:56 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, user=social}
2021-06-29 11:25:56 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-06-29 11:25:56 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-06-29 11:25:56 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-06-29 11:25:56 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-06-29 11:25:56 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.0 JDBC4 (build 801)
      major : 9
      minor : 0
2021-06-29 11:25:56 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
2021-06-29 11:25:56 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-06-29 11:25:56 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-06-29 11:26:14 DEBUG DefaultSchemaNameResolver:53 - Unable to use Java 1.7 Connection#getSchema
2021-06-29 11:26:14 DEBUG JdbcEnvironmentImpl:314 - Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.PostgreSQL10Dialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:311)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:175)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:39)
	at SocialHubDriver.main(SocialHubDriver.java:30)
2021-06-29 11:26:14 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-06-29 11:26:14 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6edc4161
2021-06-29 11:26:14 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6edc4161
2021-06-29 11:26:14 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@78aea4b9
2021-06-29 11:26:14 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@703feacd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7051777c]
2021-06-29 11:26:14 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-06-29 11:26:14 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 11:26:14 DEBUG EntityBinder:430 - Import with entity name User
2021-06-29 11:26:15 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-06-29 11:26:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-06-29 11:26:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-06-29 11:26:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-06-29 11:26:15 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-06-29 11:26:15 DEBUG PropertyBinder:266 - Building property id
2021-06-29 11:26:15 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 11:26:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-06-29 11:26:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-06-29 11:26:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-06-29 11:26:15 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-06-29 11:26:15 DEBUG PropertyBinder:266 - Building property email
2021-06-29 11:26:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-06-29 11:26:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-06-29 11:26:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-06-29 11:26:15 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-06-29 11:26:15 DEBUG PropertyBinder:266 - Building property firstName
2021-06-29 11:26:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-06-29 11:26:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-06-29 11:26:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-06-29 11:26:15 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-06-29 11:26:15 DEBUG PropertyBinder:266 - Building property lastName
2021-06-29 11:26:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-06-29 11:26:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-06-29 11:26:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-06-29 11:26:15 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-06-29 11:26:15 DEBUG PropertyBinder:266 - Building property password
2021-06-29 11:26:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:26:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-06-29 11:26:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 11:26:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 11:26:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 11:26:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 11:26:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:26:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:26:15 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-06-29 11:26:15 DEBUG PropertyBinder:266 - Building property posts
2021-06-29 11:26:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-06-29 11:26:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-06-29 11:26:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-06-29 11:26:15 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-06-29 11:26:15 DEBUG PropertyBinder:266 - Building property username
2021-06-29 11:26:15 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-06-29 11:26:15 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 11:26:15 DEBUG EntityBinder:430 - Import with entity name Post
2021-06-29 11:26:15 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-06-29 11:26:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-06-29 11:26:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-06-29 11:26:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-06-29 11:26:15 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-06-29 11:26:15 DEBUG PropertyBinder:266 - Building property postId
2021-06-29 11:26:15 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 11:26:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-06-29 11:26:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-06-29 11:26:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-06-29 11:26:15 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-06-29 11:26:15 DEBUG PropertyBinder:266 - Building property postContent
2021-06-29 11:26:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 11:26:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-06-29 11:26:15 DEBUG PropertyBinder:266 - Building property user
2021-06-29 11:26:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-06-29 11:26:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-06-29 11:26:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-06-29 11:26:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-06-29 11:26:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-06-29 11:26:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-06-29 11:26:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-06-29 11:26:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-06-29 11:26:15 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-06-29 11:26:15 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-06-29 11:26:15 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-06-29 11:26:15 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-06-29 11:26:15 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-06-29 11:26:15 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-06-29 11:26:15 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-06-29 11:26:15 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 11:26:15 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 11:26:15 DEBUG SessionFactoryImpl:196 - Building session factory
2021-06-29 11:26:15 DEBUG Settings:70 - SessionFactory name : null
2021-06-29 11:26:15 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-06-29 11:26:15 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-06-29 11:26:15 DEBUG Settings:74 - Statistics: disabled
2021-06-29 11:26:15 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-06-29 11:26:15 DEBUG Settings:77 - Default entity-mode: pojo
2021-06-29 11:26:15 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-06-29 11:26:15 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-06-29 11:26:15 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-06-29 11:26:15 DEBUG Settings:82 - Default batch fetch size: -1
2021-06-29 11:26:15 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-06-29 11:26:15 DEBUG Settings:84 - Default null ordering: NONE
2021-06-29 11:26:15 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-06-29 11:26:15 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-06-29 11:26:15 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-06-29 11:26:15 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-06-29 11:26:15 DEBUG Settings:92 - Query language substitutions: {}
2021-06-29 11:26:15 DEBUG Settings:93 - Named query checking : enabled
2021-06-29 11:26:15 DEBUG Settings:95 - Second-level cache: disabled
2021-06-29 11:26:15 DEBUG Settings:96 - Second-level query cache: disabled
2021-06-29 11:26:15 DEBUG Settings:97 - Second-level query cache factory: null
2021-06-29 11:26:15 DEBUG Settings:98 - Second-level cache region prefix: null
2021-06-29 11:26:15 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-06-29 11:26:15 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-06-29 11:26:15 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-06-29 11:26:15 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-06-29 11:26:15 DEBUG Settings:104 - JDBC batch size: 15
2021-06-29 11:26:15 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-06-29 11:26:15 DEBUG Settings:106 - Scrollable result sets: enabled
2021-06-29 11:26:15 DEBUG Settings:107 - Wrap result sets: disabled
2021-06-29 11:26:15 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): disabled
2021-06-29 11:26:15 DEBUG Settings:109 - JDBC result set fetch size: null
2021-06-29 11:26:15 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-06-29 11:26:15 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-06-29 11:26:15 DEBUG Settings:113 - JPA compliance - query : 
2021-06-29 11:26:15 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-06-29 11:26:15 DEBUG Settings:115 - JPA compliance - lists : 
2021-06-29 11:26:15 DEBUG Settings:116 - JPA compliance - transactions : 
2021-06-29 11:26:15 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-06-29 11:26:15 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\Documents\Revtature\SocialHubWeek4\target\classes;C:\Program Files\apache-tomcat-9.0.43\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.43\lib\ecj-4.18.jar;C:\Program Files\apache-tomcat-9.0.43\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.43\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin, sun.java.command=SocialHubDriver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=15.0.1, user.dir=D:\Documents\Revtature\SocialHubWeek4, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1846579f, java.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Java\jdk1.8.0_281;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\WorldPainter;C:\Program Files\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\OpenSSL-Win64\bin\;C:\Program Files\apache-maven-3.6.3\bin;C:\Program Files\nodejs\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Java\jdk1.8.0_281\bin;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\MongoDB;C:\Program Files\apache-maven-3.6.3\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Users\Ethan\AppData\Local\GitHubDesktop\bin;C:\Program Files\sts-4.9.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=59.0}
2021-06-29 11:26:15 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-06-29 11:26:15 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-06-29 11:26:15 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-06-29 11:26:15 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-06-29 11:26:15 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-06-29 11:26:15 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-06-29 11:26:15 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-06-29 11:26:15 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-06-29 11:26:15 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-06-29 11:26:15 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-06-29 11:26:15 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-06-29 11:26:15 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-06-29 11:26:15 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-06-29 11:26:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:26:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:26:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:26:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:26:15 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-06-29 11:26:15 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-06-29 11:26:15 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@703feacd] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@59bbe88a]
2021-06-29 11:26:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:26:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:26:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:26:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:26:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:26:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:26:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:26:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:26:15 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-06-29 11:26:15 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-06-29 11:26:15 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-06-29 11:26:15 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-06-29 11:26:15 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-06-29 11:26:15 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-06-29 11:26:15 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-06-29 11:26:15 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_0_, post_.user_id as user_id3_0_ from posts post_ where post_.post_id=?
2021-06-29 11:26:15 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-06-29 11:26:15 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-06-29 11:26:15 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-06-29 11:26:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@839df62]
2021-06-29 11:26:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:26:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:26:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b2e5c0d]
2021-06-29 11:26:15 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:26:15 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:26:15 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:1>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}

2021-06-29 11:26:15 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_0_0_, post0_.content as content2_0_0_, post0_.user_id as user_id3_0_0_ from posts post0_ where post0_.post_id=?
2021-06-29 11:26:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f7eee96]
2021-06-29 11:26:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:26:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:26:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f0d09c]
2021-06-29 11:26:15 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:26:15 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:26:15 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:1>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}

2021-06-29 11:26:15 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_0_0_, post0_.content as content2_0_0_, post0_.user_id as user_id3_0_0_ from posts post0_ where post0_.post_id=?
2021-06-29 11:26:15 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_0_1_, post0_.content as content2_0_1_, post0_.user_id as user_id3_0_1_, user1_.user_id as user_id1_1_0_, user1_.email as email2_1_0_, user1_.first_name as first_na3_1_0_, user1_.last_name as last_nam4_1_0_, user1_.password as password5_1_0_, user1_.username as username6_1_0_ from posts post0_ left outer join users user1_ on post0_.user_id=user1_.user_id where post0_.post_id=?
2021-06-29 11:26:15 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_0_1_, post0_.content as content2_0_1_, post0_.user_id as user_id3_0_1_, user1_.user_id as user_id1_1_0_, user1_.email as email2_1_0_, user1_.first_name as first_na3_1_0_, user1_.last_name as last_nam4_1_0_, user1_.password as password5_1_0_, user1_.username as username6_1_0_ from posts post0_ left outer join users user1_ on post0_.user_id=user1_.user_id where post0_.post_id=?
2021-06-29 11:26:15 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-06-29 11:26:15 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-06-29 11:26:15 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.password as password5_1_, user_.username as username6_1_ from users user_ where user_.user_id=?
2021-06-29 11:26:15 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 11:26:15 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-06-29 11:26:15 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-06-29 11:26:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cc65c2]
2021-06-29 11:26:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 11:26:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 11:26:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 11:26:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 11:26:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 11:26:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5eb5da12]
2021-06-29 11:26:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6418e39e]
2021-06-29 11:26:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 11:26:15 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:26:15 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:26:15 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:1>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}

2021-06-29 11:26:15 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.password as password5_1_0_, user0_.username as username6_1_0_ from users user0_ where user0_.user_id=?
2021-06-29 11:26:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2accaec2]
2021-06-29 11:26:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 11:26:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 11:26:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 11:26:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 11:26:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 11:26:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@83bb0f]
2021-06-29 11:26:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a94b55]
2021-06-29 11:26:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 11:26:15 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:26:15 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:26:15 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:1>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}

2021-06-29 11:26:15 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.password as password5_1_0_, user0_.username as username6_1_0_ from users user0_ where user0_.user_id=?
2021-06-29 11:26:15 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.password as password5_1_1_, user0_.username as username6_1_1_, posts1_.user_id as user_id3_0_3_, posts1_.post_id as post_id1_0_3_, posts1_.post_id as post_id1_0_0_, posts1_.content as content2_0_0_, posts1_.user_id as user_id3_0_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 11:26:15 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.password as password5_1_1_, user0_.username as username6_1_1_, posts1_.user_id as user_id3_0_3_, posts1_.post_id as post_id1_0_3_, posts1_.post_id as post_id1_0_0_, posts1_.content as content2_0_0_, posts1_.user_id as user_id3_0_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 11:26:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14168e1]
2021-06-29 11:26:15 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16a5c7e4]
2021-06-29 11:26:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:26:15 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:26:15 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-06-29 11:26:15 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:26:15 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:26:15 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_0_1_}

2021-06-29 11:26:15 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_0_0_, posts0_.post_id as post_id1_0_0_, posts0_.post_id as post_id1_0_1_, posts0_.content as content2_0_1_, posts0_.user_id as user_id3_0_1_ from posts posts0_ where posts0_.user_id=?
2021-06-29 11:26:15 DEBUG SQL:94 - alter table if exists posts drop constraint if exists FK5lidm6cqbc7u4xhqpxm898qme
2021-06-29 11:26:15 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@12d2ddde] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 11:26:15 DEBUG SQL:94 - drop table if exists posts cascade
2021-06-29 11:26:15 DEBUG SQL:94 - drop table if exists users cascade
2021-06-29 11:26:15 DEBUG SQL:94 - drop sequence if exists hibernate_sequence
2021-06-29 11:26:15 DEBUG SQL:94 - create sequence hibernate_sequence start 1 increment 1
2021-06-29 11:26:15 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7f0b93b4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 11:26:15 DEBUG SQL:94 - create table posts (post_id int4 not null, content varchar(255), user_id int4, primary key (post_id))
2021-06-29 11:26:15 DEBUG SQL:94 - create table users (user_id int4 not null, email varchar(255) not null, first_name varchar(255) not null, last_name varchar(255) not null, password varchar(255) not null, username varchar(255) not null, primary key (user_id))
2021-06-29 11:26:15 DEBUG SQL:94 - alter table if exists users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
2021-06-29 11:26:16 DEBUG SQL:94 - alter table if exists users add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username)
2021-06-29 11:26:16 DEBUG SQL:94 - alter table if exists posts add constraint FK5lidm6cqbc7u4xhqpxm898qme foreign key (user_id) references users
2021-06-29 11:26:16 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-06-29 11:26:16 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-06-29 11:26:16 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 11:26:16 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 11:26:16 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-06-29 11:26:16 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-06-29 11:26:16 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@235c997d
2021-06-29 11:26:16 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 5171569c-aa64-4ce9-988f-8a15da026bae (<unnamed>)
2021-06-29 11:26:16 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-06-29 11:26:16 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-06-29 11:26:16 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-06-29 11:26:16 DEBUG TransactionImpl:84 - begin
2021-06-29 11:26:16 DEBUG SQL:94 - select nextval ('hibernate_sequence')
2021-06-29 11:26:16 DEBUG SequenceStructure:101 - Sequence value obtained: 1
2021-06-29 11:26:16 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-06-29 11:26:16 DEBUG AbstractSaveEventListener:132 - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2021-06-29 11:26:16 DEBUG TransactionImpl:101 - committing
2021-06-29 11:26:16 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-06-29 11:26:16 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-06-29 11:26:16 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [<unreferenced>] (initialized)
2021-06-29 11:26:16 DEBUG AbstractFlushingEventListener:115 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2021-06-29 11:26:16 DEBUG AbstractFlushingEventListener:122 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2021-06-29 11:26:16 DEBUG EntityPrinter:110 - Listing entities:
2021-06-29 11:26:16 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, id=1, posts=[], email=rick@email.com, username=RickSanchez4821}
2021-06-29 11:26:16 DEBUG SQL:94 - insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 11:26:16 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:26:16 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:26:16 WARN  deprecation:1914 - HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead
2021-06-29 11:31:02 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 11:31:02 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-06-29 11:31:02 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-06-29 11:31:02 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-06-29 11:31:02 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-06-29 11:31:02 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-06-29 11:31:02 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-06-29 11:31:02 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-06-29 11:31:02 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-06-29 11:31:02 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-06-29 11:31:02 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-06-29 11:31:02 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-06-29 11:31:02 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-06-29 11:31:02 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-06-29 11:31:02 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@60d1a32f
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@60d1a32f
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@60d1a32f
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@a8e6492
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2e11485
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@5974109
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@4fbda97b
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@4fbda97b
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4fbda97b
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@354fc8f0
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@354fc8f0
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@354fc8f0
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@1fdfafd2
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@1fdfafd2
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1fdfafd2
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@40499e4f
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@40499e4f
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@40499e4f
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@14c01636
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@14c01636
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@14c01636
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@609640d5
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@609640d5
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@609640d5
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@556d0826
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@556d0826
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@556d0826
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@16ecee1
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@16ecee1
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@41925502
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@41925502
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@13c3c1e1
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@13c3c1e1
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@36546a22
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@2c88b9fc
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@3d484181
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3d484181
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@11eadcba
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@11eadcba
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@4baf352a
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4baf352a
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dbe250d
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2dbe250d
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@56ace400
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@56ace400
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@339bf286
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@339bf286
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@40e10ff8
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@40e10ff8
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@a5b0b86
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@a5b0b86
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4763c727
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4763c727
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@36676c1a
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@36676c1a
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@2692b61e
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2692b61e
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@6d24ffa1
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6d24ffa1
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6d24ffa1
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@426b6a74
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@7d3430a7
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7d3430a7
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7d3430a7
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@71984c3
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@1bc715b8
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1bc715b8
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@63192798
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@63192798
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@5ef0d29e
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5ef0d29e
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@2c3dec30
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@2c3dec30
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6731787b
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6731787b
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@58bf8650
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@44e3760b
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@44e3760b
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@44e3760b
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@24bdb479
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@24bdb479
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@24bdb479
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@533377b
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@1ce61929
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@39dcf4b0
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@39dcf4b0
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@39dcf4b0
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4c6daf0
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4c6daf0
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4c6daf0
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@2488b073
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@7db82169
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@18245eb0
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@18245eb0
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@72a85671
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@2a3591c5
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2a3591c5
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@297ea53a
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@297ea53a
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7a7471ce
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@675d8c96
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@24faea88
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@7e985ce9
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7e985ce9
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@d5ae57e
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68759011
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7e242b4d
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@305f031
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@592e843a
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1d1f7216
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@423e4cbb
2021-06-29 11:31:02 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6e16b8b5
2021-06-29 11:31:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-06-29 11:31:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-06-29 11:31:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 11:31:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 11:31:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-06-29 11:31:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-06-29 11:31:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-06-29 11:31:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 11:31:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-06-29 11:31:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-06-29 11:31:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-06-29 11:31:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-06-29 11:31:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 11:31:02 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-06-29 11:31:02 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-06-29 11:31:02 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-29 11:31:02 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, user=social}
2021-06-29 11:31:02 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-06-29 11:31:02 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-06-29 11:31:02 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-06-29 11:31:02 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-06-29 11:31:02 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.0 JDBC4 (build 801)
      major : 9
      minor : 0
2021-06-29 11:31:02 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
2021-06-29 11:31:02 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-06-29 11:31:02 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-06-29 11:31:21 DEBUG DefaultSchemaNameResolver:53 - Unable to use Java 1.7 Connection#getSchema
2021-06-29 11:31:21 DEBUG JdbcEnvironmentImpl:314 - Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.PostgreSQL10Dialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:311)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:175)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:39)
	at SocialHubDriver.main(SocialHubDriver.java:30)
2021-06-29 11:31:21 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-06-29 11:31:21 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@1ee29c84
2021-06-29 11:31:21 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@1ee29c84
2021-06-29 11:31:21 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6731787b
2021-06-29 11:31:21 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ad5923a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4463d9d3]
2021-06-29 11:31:22 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-06-29 11:31:22 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 11:31:22 DEBUG EntityBinder:430 - Import with entity name User
2021-06-29 11:31:22 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-06-29 11:31:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-06-29 11:31:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-06-29 11:31:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-06-29 11:31:22 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-06-29 11:31:22 DEBUG PropertyBinder:266 - Building property id
2021-06-29 11:31:22 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 11:31:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-06-29 11:31:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-06-29 11:31:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-06-29 11:31:22 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-06-29 11:31:22 DEBUG PropertyBinder:266 - Building property email
2021-06-29 11:31:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-06-29 11:31:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-06-29 11:31:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-06-29 11:31:22 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-06-29 11:31:22 DEBUG PropertyBinder:266 - Building property firstName
2021-06-29 11:31:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-06-29 11:31:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-06-29 11:31:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-06-29 11:31:22 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-06-29 11:31:22 DEBUG PropertyBinder:266 - Building property lastName
2021-06-29 11:31:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-06-29 11:31:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-06-29 11:31:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-06-29 11:31:22 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-06-29 11:31:22 DEBUG PropertyBinder:266 - Building property password
2021-06-29 11:31:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:31:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-06-29 11:31:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 11:31:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 11:31:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 11:31:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 11:31:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:31:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:31:22 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-06-29 11:31:22 DEBUG PropertyBinder:266 - Building property posts
2021-06-29 11:31:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-06-29 11:31:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-06-29 11:31:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-06-29 11:31:22 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-06-29 11:31:22 DEBUG PropertyBinder:266 - Building property username
2021-06-29 11:31:22 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-06-29 11:31:22 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 11:31:22 DEBUG EntityBinder:430 - Import with entity name Post
2021-06-29 11:31:22 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-06-29 11:31:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-06-29 11:31:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-06-29 11:31:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-06-29 11:31:22 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-06-29 11:31:22 DEBUG PropertyBinder:266 - Building property postId
2021-06-29 11:31:22 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 11:31:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-06-29 11:31:22 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-06-29 11:31:22 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-06-29 11:31:22 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-06-29 11:31:22 DEBUG PropertyBinder:266 - Building property postContent
2021-06-29 11:31:22 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 11:31:22 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-06-29 11:31:22 DEBUG PropertyBinder:266 - Building property user
2021-06-29 11:31:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-06-29 11:31:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-06-29 11:31:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-06-29 11:31:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-06-29 11:31:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-06-29 11:31:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-06-29 11:31:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-06-29 11:31:22 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-06-29 11:31:22 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-06-29 11:31:22 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-06-29 11:31:22 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-06-29 11:31:22 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-06-29 11:31:22 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-06-29 11:31:22 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-06-29 11:31:22 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-06-29 11:31:22 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 11:31:22 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 11:31:22 DEBUG SessionFactoryImpl:196 - Building session factory
2021-06-29 11:31:22 DEBUG Settings:70 - SessionFactory name : null
2021-06-29 11:31:22 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-06-29 11:31:22 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-06-29 11:31:22 DEBUG Settings:74 - Statistics: disabled
2021-06-29 11:31:22 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-06-29 11:31:22 DEBUG Settings:77 - Default entity-mode: pojo
2021-06-29 11:31:22 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-06-29 11:31:22 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-06-29 11:31:22 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-06-29 11:31:22 DEBUG Settings:82 - Default batch fetch size: -1
2021-06-29 11:31:22 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-06-29 11:31:22 DEBUG Settings:84 - Default null ordering: NONE
2021-06-29 11:31:22 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-06-29 11:31:22 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-06-29 11:31:22 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-06-29 11:31:22 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-06-29 11:31:22 DEBUG Settings:92 - Query language substitutions: {}
2021-06-29 11:31:22 DEBUG Settings:93 - Named query checking : enabled
2021-06-29 11:31:22 DEBUG Settings:95 - Second-level cache: disabled
2021-06-29 11:31:22 DEBUG Settings:96 - Second-level query cache: disabled
2021-06-29 11:31:22 DEBUG Settings:97 - Second-level query cache factory: null
2021-06-29 11:31:22 DEBUG Settings:98 - Second-level cache region prefix: null
2021-06-29 11:31:22 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-06-29 11:31:22 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-06-29 11:31:22 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-06-29 11:31:22 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-06-29 11:31:22 DEBUG Settings:104 - JDBC batch size: 15
2021-06-29 11:31:22 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-06-29 11:31:22 DEBUG Settings:106 - Scrollable result sets: enabled
2021-06-29 11:31:22 DEBUG Settings:107 - Wrap result sets: disabled
2021-06-29 11:31:22 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): disabled
2021-06-29 11:31:22 DEBUG Settings:109 - JDBC result set fetch size: null
2021-06-29 11:31:22 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-06-29 11:31:22 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-06-29 11:31:22 DEBUG Settings:113 - JPA compliance - query : 
2021-06-29 11:31:22 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-06-29 11:31:22 DEBUG Settings:115 - JPA compliance - lists : 
2021-06-29 11:31:22 DEBUG Settings:116 - JPA compliance - transactions : 
2021-06-29 11:31:22 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-06-29 11:31:22 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\Documents\Revtature\SocialHubWeek4\target\classes;C:\Program Files\apache-tomcat-9.0.43\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.43\lib\ecj-4.18.jar;C:\Program Files\apache-tomcat-9.0.43\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.43\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin, sun.java.command=SocialHubDriver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=15.0.1, user.dir=D:\Documents\Revtature\SocialHubWeek4, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7d5508e0, java.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Java\jdk1.8.0_281;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\WorldPainter;C:\Program Files\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\OpenSSL-Win64\bin\;C:\Program Files\apache-maven-3.6.3\bin;C:\Program Files\nodejs\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Java\jdk1.8.0_281\bin;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\MongoDB;C:\Program Files\apache-maven-3.6.3\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Users\Ethan\AppData\Local\GitHubDesktop\bin;C:\Program Files\sts-4.9.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=59.0}
2021-06-29 11:31:22 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-06-29 11:31:22 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-06-29 11:31:22 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-06-29 11:31:22 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-06-29 11:31:22 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-06-29 11:31:22 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-06-29 11:31:22 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-06-29 11:31:22 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-06-29 11:31:22 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-06-29 11:31:22 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-06-29 11:31:22 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-06-29 11:31:22 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-06-29 11:31:22 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-06-29 11:31:22 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:31:22 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:31:22 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:31:22 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:31:22 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-06-29 11:31:22 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-06-29 11:31:22 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6ad5923a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@885e7ff]
2021-06-29 11:31:22 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:31:22 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:31:22 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:31:22 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:31:22 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:31:22 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:31:22 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:31:22 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:31:22 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-06-29 11:31:22 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-06-29 11:31:22 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-06-29 11:31:22 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-06-29 11:31:22 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-06-29 11:31:22 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-06-29 11:31:22 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-06-29 11:31:22 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_0_, post_.user_id as user_id3_0_ from posts post_ where post_.post_id=?
2021-06-29 11:31:22 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-06-29 11:31:22 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-06-29 11:31:22 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-06-29 11:31:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b2ccba5]
2021-06-29 11:31:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:31:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:31:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@297c9a9b]
2021-06-29 11:31:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:31:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:31:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:1>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}

2021-06-29 11:31:22 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_0_0_, post0_.content as content2_0_0_, post0_.user_id as user_id3_0_0_ from posts post0_ where post0_.post_id=?
2021-06-29 11:31:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@164642a4]
2021-06-29 11:31:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:31:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:31:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50b0afd7]
2021-06-29 11:31:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:31:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:31:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:1>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}

2021-06-29 11:31:22 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_0_0_, post0_.content as content2_0_0_, post0_.user_id as user_id3_0_0_ from posts post0_ where post0_.post_id=?
2021-06-29 11:31:22 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_0_1_, post0_.content as content2_0_1_, post0_.user_id as user_id3_0_1_, user1_.user_id as user_id1_1_0_, user1_.email as email2_1_0_, user1_.first_name as first_na3_1_0_, user1_.last_name as last_nam4_1_0_, user1_.password as password5_1_0_, user1_.username as username6_1_0_ from posts post0_ left outer join users user1_ on post0_.user_id=user1_.user_id where post0_.post_id=?
2021-06-29 11:31:22 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_0_1_, post0_.content as content2_0_1_, post0_.user_id as user_id3_0_1_, user1_.user_id as user_id1_1_0_, user1_.email as email2_1_0_, user1_.first_name as first_na3_1_0_, user1_.last_name as last_nam4_1_0_, user1_.password as password5_1_0_, user1_.username as username6_1_0_ from posts post0_ left outer join users user1_ on post0_.user_id=user1_.user_id where post0_.post_id=?
2021-06-29 11:31:22 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-06-29 11:31:22 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-06-29 11:31:22 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.password as password5_1_, user_.username as username6_1_ from users user_ where user_.user_id=?
2021-06-29 11:31:22 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 11:31:22 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-06-29 11:31:22 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-06-29 11:31:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3728a578]
2021-06-29 11:31:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 11:31:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 11:31:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 11:31:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 11:31:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 11:31:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d88f893]
2021-06-29 11:31:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c93b51e]
2021-06-29 11:31:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 11:31:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:31:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:31:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:1>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}

2021-06-29 11:31:22 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.password as password5_1_0_, user0_.username as username6_1_0_ from users user0_ where user0_.user_id=?
2021-06-29 11:31:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@420cd102]
2021-06-29 11:31:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 11:31:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 11:31:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 11:31:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 11:31:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 11:31:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12e12ac9]
2021-06-29 11:31:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e230fc6]
2021-06-29 11:31:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 11:31:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:31:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:31:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:1>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}

2021-06-29 11:31:22 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.password as password5_1_0_, user0_.username as username6_1_0_ from users user0_ where user0_.user_id=?
2021-06-29 11:31:22 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.password as password5_1_1_, user0_.username as username6_1_1_, posts1_.user_id as user_id3_0_3_, posts1_.post_id as post_id1_0_3_, posts1_.post_id as post_id1_0_0_, posts1_.content as content2_0_0_, posts1_.user_id as user_id3_0_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 11:31:22 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.password as password5_1_1_, user0_.username as username6_1_1_, posts1_.user_id as user_id3_0_3_, posts1_.post_id as post_id1_0_3_, posts1_.post_id as post_id1_0_0_, posts1_.content as content2_0_0_, posts1_.user_id as user_id3_0_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 11:31:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4978777f]
2021-06-29 11:31:22 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bc6935c]
2021-06-29 11:31:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:31:22 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:31:22 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-06-29 11:31:22 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:31:22 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:31:22 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_0_1_}

2021-06-29 11:31:22 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_0_0_, posts0_.post_id as post_id1_0_0_, posts0_.post_id as post_id1_0_1_, posts0_.content as content2_0_1_, posts0_.user_id as user_id3_0_1_ from posts posts0_ where posts0_.user_id=?
2021-06-29 11:31:22 DEBUG SQL:94 - alter table if exists posts drop constraint if exists FK5lidm6cqbc7u4xhqpxm898qme
2021-06-29 11:31:22 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7f79edee] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 11:31:22 DEBUG SQL:94 - drop table if exists posts cascade
2021-06-29 11:31:22 DEBUG SQL:94 - drop table if exists users cascade
2021-06-29 11:31:22 DEBUG SQL:94 - drop sequence if exists hibernate_sequence
2021-06-29 11:31:22 DEBUG SQL:94 - create sequence hibernate_sequence start 1 increment 1
2021-06-29 11:31:22 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3d40a3b4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 11:31:22 DEBUG SQL:94 - create table posts (post_id int4 not null, content varchar(255), user_id int4, primary key (post_id))
2021-06-29 11:31:22 DEBUG SQL:94 - create table users (user_id int4 not null, email varchar(255) not null, first_name varchar(255) not null, last_name varchar(255) not null, password varchar(255) not null, username varchar(255) not null, primary key (user_id))
2021-06-29 11:31:22 DEBUG SQL:94 - alter table if exists users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
2021-06-29 11:31:23 DEBUG SQL:94 - alter table if exists users add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username)
2021-06-29 11:31:23 DEBUG SQL:94 - alter table if exists posts add constraint FK5lidm6cqbc7u4xhqpxm898qme foreign key (user_id) references users
2021-06-29 11:31:23 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-06-29 11:31:23 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-06-29 11:31:23 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 11:31:23 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 11:31:23 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-06-29 11:31:23 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-06-29 11:31:23 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@766a52f5
2021-06-29 11:31:23 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 296791ad-69a7-4ac4-a7f5-56dee98c76a5 (<unnamed>)
2021-06-29 11:31:23 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-06-29 11:31:23 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-06-29 11:31:23 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-06-29 11:31:23 DEBUG TransactionImpl:84 - begin
2021-06-29 11:31:23 DEBUG SQL:94 - select nextval ('hibernate_sequence')
2021-06-29 11:31:23 DEBUG SequenceStructure:101 - Sequence value obtained: 1
2021-06-29 11:31:23 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-06-29 11:31:23 DEBUG AbstractSaveEventListener:132 - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2021-06-29 11:31:23 DEBUG TransactionImpl:101 - committing
2021-06-29 11:31:23 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-06-29 11:31:23 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-06-29 11:31:23 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [<unreferenced>] (initialized)
2021-06-29 11:31:23 DEBUG AbstractFlushingEventListener:115 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2021-06-29 11:31:23 DEBUG AbstractFlushingEventListener:122 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2021-06-29 11:31:23 DEBUG EntityPrinter:110 - Listing entities:
2021-06-29 11:31:23 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, id=1, posts=[], email=rick@email.com, username=RickSanchez1793}
2021-06-29 11:31:23 DEBUG SQL:94 - insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 11:31:23 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:31:23 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:31:23 WARN  deprecation:1914 - HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead
2021-06-29 11:35:19 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 11:35:19 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-06-29 11:35:19 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-06-29 11:35:19 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-06-29 11:35:19 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-06-29 11:35:19 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-06-29 11:35:19 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-06-29 11:35:19 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-06-29 11:35:19 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-06-29 11:35:19 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-06-29 11:35:19 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-06-29 11:35:19 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-06-29 11:35:19 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-06-29 11:35:19 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-06-29 11:35:19 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7bc10d84
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7bc10d84
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7bc10d84
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73ff4fae
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2611b9a3
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f446bef
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@458342d3
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@458342d3
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@458342d3
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@36676c1a
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@36676c1a
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@36676c1a
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@293d0107
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@293d0107
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@293d0107
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@55e8ec2f
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@55e8ec2f
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e8ec2f
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@4c51bb7
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@4c51bb7
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c51bb7
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7d3430a7
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7d3430a7
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7d3430a7
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5536379e
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5536379e
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5536379e
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b491fee
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b491fee
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58e6d4b8
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58e6d4b8
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@51850751
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@51850751
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@e260766
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7c56e013
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@34a1d21f
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@34a1d21f
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@2cb3d0f7
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2cb3d0f7
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@4ae33a11
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4ae33a11
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a3591c5
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a3591c5
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@482d776b
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@482d776b
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7a7471ce
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7a7471ce
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63648ee9
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63648ee9
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@24faea88
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@24faea88
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76ba13c
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76ba13c
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@7e242b4d
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7e242b4d
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1536602f
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1536602f
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@c7a975a
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@c7a975a
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@c7a975a
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3c0fae6c
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6326d182
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6326d182
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6326d182
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e809b79
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@55795845
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@55795845
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@6175619b
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6175619b
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2cf92cc7
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2cf92cc7
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@5d465e4b
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5d465e4b
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@78aea4b9
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@78aea4b9
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4215838f
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@3e2943ab
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3e2943ab
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@3e2943ab
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c9399a4
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c9399a4
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c9399a4
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@172ca72b
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5e8f9e2d
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@60fa3495
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@60fa3495
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@60fa3495
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5fcacc0
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5fcacc0
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5fcacc0
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@6865c751
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@5b6813df
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@35fe2125
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@35fe2125
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60b71e8f
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@5fd62371
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5fd62371
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@1568159
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1568159
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@f9879ac
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@224b4d61
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3f23a3a0
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@72ccd81a
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72ccd81a
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5d25e6bb
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ce5a68e
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@9d157ff
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f162cc0
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5df417a7
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7c041b41
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f69d591
2021-06-29 11:35:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@61078690
2021-06-29 11:35:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-06-29 11:35:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-06-29 11:35:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 11:35:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 11:35:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-06-29 11:35:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-06-29 11:35:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-06-29 11:35:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 11:35:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-06-29 11:35:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-06-29 11:35:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-06-29 11:35:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-06-29 11:35:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 11:35:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-06-29 11:35:19 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-06-29 11:35:19 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-29 11:35:19 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, user=social}
2021-06-29 11:35:19 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-06-29 11:35:19 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-06-29 11:35:19 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-06-29 11:35:20 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-06-29 11:35:20 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.0 JDBC4 (build 801)
      major : 9
      minor : 0
2021-06-29 11:35:20 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
2021-06-29 11:35:20 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-06-29 11:35:20 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-06-29 11:35:38 DEBUG DefaultSchemaNameResolver:53 - Unable to use Java 1.7 Connection#getSchema
2021-06-29 11:35:38 DEBUG JdbcEnvironmentImpl:314 - Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.PostgreSQL10Dialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:311)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:175)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:39)
	at SocialHubDriver.main(SocialHubDriver.java:30)
2021-06-29 11:35:38 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-06-29 11:35:38 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@30cecdca
2021-06-29 11:35:38 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@30cecdca
2021-06-29 11:35:38 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@78aea4b9
2021-06-29 11:35:38 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@68809cc7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@703feacd]
2021-06-29 11:35:38 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-06-29 11:35:38 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 11:35:38 DEBUG EntityBinder:430 - Import with entity name User
2021-06-29 11:35:38 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-06-29 11:35:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-06-29 11:35:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-06-29 11:35:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-06-29 11:35:38 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-06-29 11:35:38 DEBUG PropertyBinder:266 - Building property id
2021-06-29 11:35:38 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 11:35:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-06-29 11:35:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-06-29 11:35:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-06-29 11:35:38 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-06-29 11:35:38 DEBUG PropertyBinder:266 - Building property email
2021-06-29 11:35:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-06-29 11:35:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-06-29 11:35:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-06-29 11:35:38 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-06-29 11:35:38 DEBUG PropertyBinder:266 - Building property firstName
2021-06-29 11:35:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-06-29 11:35:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-06-29 11:35:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-06-29 11:35:38 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-06-29 11:35:38 DEBUG PropertyBinder:266 - Building property lastName
2021-06-29 11:35:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-06-29 11:35:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-06-29 11:35:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-06-29 11:35:38 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-06-29 11:35:38 DEBUG PropertyBinder:266 - Building property password
2021-06-29 11:35:38 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:35:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-06-29 11:35:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 11:35:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 11:35:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 11:35:38 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 11:35:38 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:35:38 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:35:38 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-06-29 11:35:38 DEBUG PropertyBinder:266 - Building property posts
2021-06-29 11:35:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-06-29 11:35:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-06-29 11:35:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-06-29 11:35:38 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-06-29 11:35:38 DEBUG PropertyBinder:266 - Building property username
2021-06-29 11:35:38 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-06-29 11:35:38 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 11:35:38 DEBUG EntityBinder:430 - Import with entity name Post
2021-06-29 11:35:38 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-06-29 11:35:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-06-29 11:35:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-06-29 11:35:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-06-29 11:35:38 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-06-29 11:35:38 DEBUG PropertyBinder:266 - Building property postId
2021-06-29 11:35:38 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 11:35:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-06-29 11:35:38 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-06-29 11:35:38 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-06-29 11:35:38 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-06-29 11:35:38 DEBUG PropertyBinder:266 - Building property postContent
2021-06-29 11:35:38 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 11:35:38 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-06-29 11:35:38 DEBUG PropertyBinder:266 - Building property user
2021-06-29 11:35:38 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-06-29 11:35:38 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-06-29 11:35:38 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-06-29 11:35:38 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-06-29 11:35:38 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-06-29 11:35:38 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-06-29 11:35:38 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-06-29 11:35:38 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-06-29 11:35:38 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-06-29 11:35:38 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-06-29 11:35:38 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-06-29 11:35:38 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-06-29 11:35:38 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-06-29 11:35:38 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-06-29 11:35:38 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-06-29 11:35:38 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 11:35:38 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 11:35:38 DEBUG SessionFactoryImpl:196 - Building session factory
2021-06-29 11:35:38 DEBUG Settings:70 - SessionFactory name : null
2021-06-29 11:35:38 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-06-29 11:35:38 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-06-29 11:35:38 DEBUG Settings:74 - Statistics: disabled
2021-06-29 11:35:38 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-06-29 11:35:38 DEBUG Settings:77 - Default entity-mode: pojo
2021-06-29 11:35:38 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-06-29 11:35:38 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-06-29 11:35:38 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-06-29 11:35:38 DEBUG Settings:82 - Default batch fetch size: -1
2021-06-29 11:35:38 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-06-29 11:35:38 DEBUG Settings:84 - Default null ordering: NONE
2021-06-29 11:35:38 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-06-29 11:35:38 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-06-29 11:35:38 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-06-29 11:35:38 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-06-29 11:35:38 DEBUG Settings:92 - Query language substitutions: {}
2021-06-29 11:35:38 DEBUG Settings:93 - Named query checking : enabled
2021-06-29 11:35:38 DEBUG Settings:95 - Second-level cache: disabled
2021-06-29 11:35:38 DEBUG Settings:96 - Second-level query cache: disabled
2021-06-29 11:35:38 DEBUG Settings:97 - Second-level query cache factory: null
2021-06-29 11:35:38 DEBUG Settings:98 - Second-level cache region prefix: null
2021-06-29 11:35:38 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-06-29 11:35:38 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-06-29 11:35:38 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-06-29 11:35:38 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-06-29 11:35:38 DEBUG Settings:104 - JDBC batch size: 15
2021-06-29 11:35:38 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-06-29 11:35:38 DEBUG Settings:106 - Scrollable result sets: enabled
2021-06-29 11:35:38 DEBUG Settings:107 - Wrap result sets: disabled
2021-06-29 11:35:38 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): disabled
2021-06-29 11:35:38 DEBUG Settings:109 - JDBC result set fetch size: null
2021-06-29 11:35:38 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-06-29 11:35:38 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-06-29 11:35:38 DEBUG Settings:113 - JPA compliance - query : 
2021-06-29 11:35:38 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-06-29 11:35:38 DEBUG Settings:115 - JPA compliance - lists : 
2021-06-29 11:35:38 DEBUG Settings:116 - JPA compliance - transactions : 
2021-06-29 11:35:38 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-06-29 11:35:38 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\Documents\Revtature\SocialHubWeek4\target\classes;C:\Program Files\apache-tomcat-9.0.43\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.43\lib\ecj-4.18.jar;C:\Program Files\apache-tomcat-9.0.43\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.43\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin, sun.java.command=SocialHubDriver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=15.0.1, user.dir=D:\Documents\Revtature\SocialHubWeek4, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@336880df, java.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Java\jdk1.8.0_281;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\WorldPainter;C:\Program Files\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\OpenSSL-Win64\bin\;C:\Program Files\apache-maven-3.6.3\bin;C:\Program Files\nodejs\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Java\jdk1.8.0_281\bin;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\MongoDB;C:\Program Files\apache-maven-3.6.3\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Users\Ethan\AppData\Local\GitHubDesktop\bin;C:\Program Files\sts-4.9.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=59.0}
2021-06-29 11:35:38 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-06-29 11:35:38 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-06-29 11:35:38 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-06-29 11:35:38 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-06-29 11:35:38 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-06-29 11:35:38 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-06-29 11:35:38 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-06-29 11:35:39 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-06-29 11:35:39 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-06-29 11:35:39 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-06-29 11:35:39 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-06-29 11:35:39 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-06-29 11:35:39 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-06-29 11:35:39 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:35:39 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:35:39 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:35:39 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:35:39 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-06-29 11:35:39 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-06-29 11:35:39 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@68809cc7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@f88bfbe]
2021-06-29 11:35:39 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:35:39 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:35:39 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:35:39 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:35:39 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:35:39 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:35:39 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:35:39 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:35:39 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-06-29 11:35:39 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-06-29 11:35:39 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-06-29 11:35:39 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-06-29 11:35:39 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-06-29 11:35:39 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-06-29 11:35:39 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-06-29 11:35:39 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_0_, post_.user_id as user_id3_0_ from posts post_ where post_.post_id=?
2021-06-29 11:35:39 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-06-29 11:35:39 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-06-29 11:35:39 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-06-29 11:35:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57efc6fd]
2021-06-29 11:35:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:35:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:35:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b7c80c6]
2021-06-29 11:35:39 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:35:39 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:35:39 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:1>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}

2021-06-29 11:35:39 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_0_0_, post0_.content as content2_0_0_, post0_.user_id as user_id3_0_0_ from posts post0_ where post0_.post_id=?
2021-06-29 11:35:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1450131a]
2021-06-29 11:35:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:35:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:35:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a36cd5]
2021-06-29 11:35:39 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:35:39 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:35:39 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:1>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}

2021-06-29 11:35:39 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_0_0_, post0_.content as content2_0_0_, post0_.user_id as user_id3_0_0_ from posts post0_ where post0_.post_id=?
2021-06-29 11:35:39 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_0_1_, post0_.content as content2_0_1_, post0_.user_id as user_id3_0_1_, user1_.user_id as user_id1_1_0_, user1_.email as email2_1_0_, user1_.first_name as first_na3_1_0_, user1_.last_name as last_nam4_1_0_, user1_.password as password5_1_0_, user1_.username as username6_1_0_ from posts post0_ left outer join users user1_ on post0_.user_id=user1_.user_id where post0_.post_id=?
2021-06-29 11:35:39 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_0_1_, post0_.content as content2_0_1_, post0_.user_id as user_id3_0_1_, user1_.user_id as user_id1_1_0_, user1_.email as email2_1_0_, user1_.first_name as first_na3_1_0_, user1_.last_name as last_nam4_1_0_, user1_.password as password5_1_0_, user1_.username as username6_1_0_ from posts post0_ left outer join users user1_ on post0_.user_id=user1_.user_id where post0_.post_id=?
2021-06-29 11:35:39 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-06-29 11:35:39 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-06-29 11:35:39 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.password as password5_1_, user_.username as username6_1_ from users user_ where user_.user_id=?
2021-06-29 11:35:39 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 11:35:39 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-06-29 11:35:39 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-06-29 11:35:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a1f778]
2021-06-29 11:35:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 11:35:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 11:35:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 11:35:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 11:35:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 11:35:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14447be]
2021-06-29 11:35:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76ff68c5]
2021-06-29 11:35:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 11:35:39 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:35:39 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:35:39 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:1>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}

2021-06-29 11:35:39 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.password as password5_1_0_, user0_.username as username6_1_0_ from users user0_ where user0_.user_id=?
2021-06-29 11:35:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3332c7a5]
2021-06-29 11:35:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 11:35:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 11:35:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 11:35:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 11:35:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 11:35:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e39baf0]
2021-06-29 11:35:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@83bb0f]
2021-06-29 11:35:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 11:35:39 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:35:39 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:35:39 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:1>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}

2021-06-29 11:35:39 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.password as password5_1_0_, user0_.username as username6_1_0_ from users user0_ where user0_.user_id=?
2021-06-29 11:35:39 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.password as password5_1_1_, user0_.username as username6_1_1_, posts1_.user_id as user_id3_0_3_, posts1_.post_id as post_id1_0_3_, posts1_.post_id as post_id1_0_0_, posts1_.content as content2_0_0_, posts1_.user_id as user_id3_0_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 11:35:39 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.password as password5_1_1_, user0_.username as username6_1_1_, posts1_.user_id as user_id3_0_3_, posts1_.post_id as post_id1_0_3_, posts1_.post_id as post_id1_0_0_, posts1_.content as content2_0_0_, posts1_.user_id as user_id3_0_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 11:35:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@654e6a90]
2021-06-29 11:35:39 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14168e1]
2021-06-29 11:35:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:35:39 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:35:39 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-06-29 11:35:39 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:35:39 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:35:39 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_0_1_}

2021-06-29 11:35:39 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_0_0_, posts0_.post_id as post_id1_0_0_, posts0_.post_id as post_id1_0_1_, posts0_.content as content2_0_1_, posts0_.user_id as user_id3_0_1_ from posts posts0_ where posts0_.user_id=?
2021-06-29 11:35:39 DEBUG SQL:94 - alter table if exists posts drop constraint if exists FK5lidm6cqbc7u4xhqpxm898qme
2021-06-29 11:35:39 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@f2276c9] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 11:35:39 DEBUG SQL:94 - drop table if exists posts cascade
2021-06-29 11:35:39 DEBUG SQL:94 - drop table if exists users cascade
2021-06-29 11:35:39 DEBUG SQL:94 - drop sequence if exists hibernate_sequence
2021-06-29 11:35:39 DEBUG SQL:94 - create sequence hibernate_sequence start 1 increment 1
2021-06-29 11:35:39 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@52d3fafd] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 11:35:39 DEBUG SQL:94 - create table posts (post_id int4 not null, content varchar(255), user_id int4, primary key (post_id))
2021-06-29 11:35:39 DEBUG SQL:94 - create table users (user_id int4 not null, email varchar(255) not null, first_name varchar(255) not null, last_name varchar(255) not null, password varchar(255) not null, username varchar(255) not null, primary key (user_id))
2021-06-29 11:35:39 DEBUG SQL:94 - alter table if exists users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
2021-06-29 11:35:39 DEBUG SQL:94 - alter table if exists users add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username)
2021-06-29 11:35:39 DEBUG SQL:94 - alter table if exists posts add constraint FK5lidm6cqbc7u4xhqpxm898qme foreign key (user_id) references users
2021-06-29 11:35:39 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-06-29 11:35:39 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-06-29 11:35:39 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 11:35:39 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 11:35:39 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-06-29 11:35:39 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-06-29 11:35:39 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5a08b084
2021-06-29 11:35:39 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: cbed9459-e566-4f9b-ba97-34fbe4aa69f0 (<unnamed>)
2021-06-29 11:35:39 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-06-29 11:35:39 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-06-29 11:35:39 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-06-29 11:35:39 DEBUG TransactionImpl:84 - begin
2021-06-29 11:35:39 DEBUG SQL:94 - select nextval ('hibernate_sequence')
2021-06-29 11:35:39 DEBUG SequenceStructure:101 - Sequence value obtained: 1
2021-06-29 11:35:39 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-06-29 11:35:39 DEBUG AbstractSaveEventListener:132 - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2021-06-29 11:35:39 DEBUG TransactionImpl:101 - committing
2021-06-29 11:35:39 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-06-29 11:35:39 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-06-29 11:35:39 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [<unreferenced>] (initialized)
2021-06-29 11:35:39 DEBUG AbstractFlushingEventListener:115 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2021-06-29 11:35:39 DEBUG AbstractFlushingEventListener:122 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2021-06-29 11:35:39 DEBUG EntityPrinter:110 - Listing entities:
2021-06-29 11:35:39 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, id=1, posts=[], email=rick@email.com, username=RickSanchez6932}
2021-06-29 11:35:39 DEBUG SQL:94 - insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 11:35:39 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:35:39 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:35:39 WARN  deprecation:1914 - HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead
2021-06-29 11:36:15 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 11:36:16 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-06-29 11:36:16 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-06-29 11:36:16 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-06-29 11:36:16 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-06-29 11:36:16 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-06-29 11:36:16 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-06-29 11:36:16 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-06-29 11:36:16 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-06-29 11:36:16 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-06-29 11:36:16 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-06-29 11:36:16 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-06-29 11:36:16 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-06-29 11:36:16 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-06-29 11:36:16 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7bc10d84
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7bc10d84
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7bc10d84
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73ff4fae
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2611b9a3
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f446bef
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@458342d3
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@458342d3
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@458342d3
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@36676c1a
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@36676c1a
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@36676c1a
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@293d0107
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@293d0107
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@293d0107
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@55e8ec2f
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@55e8ec2f
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e8ec2f
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@4c51bb7
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@4c51bb7
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c51bb7
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7d3430a7
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7d3430a7
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7d3430a7
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5536379e
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5536379e
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5536379e
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b491fee
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b491fee
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58e6d4b8
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58e6d4b8
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@51850751
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@51850751
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@e260766
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7c56e013
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@34a1d21f
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@34a1d21f
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@2cb3d0f7
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2cb3d0f7
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@4ae33a11
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4ae33a11
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a3591c5
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a3591c5
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@482d776b
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@482d776b
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7a7471ce
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7a7471ce
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63648ee9
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63648ee9
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@24faea88
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@24faea88
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76ba13c
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76ba13c
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@7e242b4d
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7e242b4d
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1536602f
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1536602f
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@c7a975a
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@c7a975a
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@c7a975a
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3c0fae6c
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6326d182
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6326d182
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6326d182
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e809b79
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@55795845
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@55795845
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@6175619b
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6175619b
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2cf92cc7
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2cf92cc7
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@5d465e4b
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5d465e4b
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@78aea4b9
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@78aea4b9
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4215838f
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@3e2943ab
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3e2943ab
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@3e2943ab
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c9399a4
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c9399a4
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c9399a4
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@172ca72b
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5e8f9e2d
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@60fa3495
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@60fa3495
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@60fa3495
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5fcacc0
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5fcacc0
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5fcacc0
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@6865c751
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@5b6813df
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@35fe2125
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@35fe2125
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60b71e8f
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@5fd62371
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5fd62371
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@1568159
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1568159
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@f9879ac
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@224b4d61
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3f23a3a0
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@72ccd81a
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72ccd81a
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5d25e6bb
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ce5a68e
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@9d157ff
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f162cc0
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5df417a7
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7c041b41
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f69d591
2021-06-29 11:36:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@61078690
2021-06-29 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-06-29 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-06-29 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-06-29 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-06-29 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-06-29 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-06-29 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-06-29 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-06-29 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-06-29 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 11:36:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-06-29 11:36:16 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-06-29 11:36:16 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-29 11:36:16 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, user=social}
2021-06-29 11:36:16 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-06-29 11:36:16 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-06-29 11:36:16 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-06-29 11:36:16 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-06-29 11:36:16 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.0 JDBC4 (build 801)
      major : 9
      minor : 0
2021-06-29 11:36:16 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
2021-06-29 11:36:16 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-06-29 11:36:16 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-06-29 11:36:34 DEBUG DefaultSchemaNameResolver:53 - Unable to use Java 1.7 Connection#getSchema
2021-06-29 11:36:34 DEBUG JdbcEnvironmentImpl:314 - Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.PostgreSQL10Dialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:311)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:175)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:39)
	at SocialHubDriver.main(SocialHubDriver.java:30)
2021-06-29 11:36:34 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-06-29 11:36:34 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6edc4161
2021-06-29 11:36:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6edc4161
2021-06-29 11:36:34 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@78aea4b9
2021-06-29 11:36:34 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@703feacd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7051777c]
2021-06-29 11:36:34 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-06-29 11:36:34 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 11:36:34 DEBUG EntityBinder:430 - Import with entity name User
2021-06-29 11:36:34 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-06-29 11:36:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-06-29 11:36:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-06-29 11:36:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-06-29 11:36:34 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-06-29 11:36:34 DEBUG PropertyBinder:266 - Building property id
2021-06-29 11:36:34 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 11:36:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-06-29 11:36:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-06-29 11:36:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-06-29 11:36:34 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-06-29 11:36:34 DEBUG PropertyBinder:266 - Building property email
2021-06-29 11:36:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-06-29 11:36:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-06-29 11:36:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-06-29 11:36:34 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-06-29 11:36:34 DEBUG PropertyBinder:266 - Building property firstName
2021-06-29 11:36:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-06-29 11:36:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-06-29 11:36:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-06-29 11:36:34 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-06-29 11:36:34 DEBUG PropertyBinder:266 - Building property lastName
2021-06-29 11:36:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-06-29 11:36:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-06-29 11:36:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-06-29 11:36:34 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-06-29 11:36:34 DEBUG PropertyBinder:266 - Building property password
2021-06-29 11:36:34 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:36:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-06-29 11:36:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 11:36:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 11:36:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 11:36:34 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 11:36:34 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:36:34 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:36:34 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-06-29 11:36:34 DEBUG PropertyBinder:266 - Building property posts
2021-06-29 11:36:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-06-29 11:36:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-06-29 11:36:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-06-29 11:36:34 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-06-29 11:36:34 DEBUG PropertyBinder:266 - Building property username
2021-06-29 11:36:34 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-06-29 11:36:34 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 11:36:34 DEBUG EntityBinder:430 - Import with entity name Post
2021-06-29 11:36:34 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-06-29 11:36:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-06-29 11:36:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-06-29 11:36:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-06-29 11:36:34 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-06-29 11:36:34 DEBUG PropertyBinder:266 - Building property postId
2021-06-29 11:36:34 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 11:36:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-06-29 11:36:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-06-29 11:36:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-06-29 11:36:34 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-06-29 11:36:34 DEBUG PropertyBinder:266 - Building property postContent
2021-06-29 11:36:34 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 11:36:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-06-29 11:36:34 DEBUG PropertyBinder:266 - Building property user
2021-06-29 11:36:34 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-06-29 11:36:34 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-06-29 11:36:34 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-06-29 11:36:34 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-06-29 11:36:34 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-06-29 11:36:34 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-06-29 11:36:34 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-06-29 11:36:34 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-06-29 11:36:34 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-06-29 11:36:34 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-06-29 11:36:34 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-06-29 11:36:34 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-06-29 11:36:34 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-06-29 11:36:34 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-06-29 11:36:34 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-06-29 11:36:34 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 11:36:34 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 11:36:34 DEBUG SessionFactoryImpl:196 - Building session factory
2021-06-29 11:36:34 DEBUG Settings:70 - SessionFactory name : null
2021-06-29 11:36:34 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-06-29 11:36:34 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-06-29 11:36:35 DEBUG Settings:74 - Statistics: disabled
2021-06-29 11:36:35 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-06-29 11:36:35 DEBUG Settings:77 - Default entity-mode: pojo
2021-06-29 11:36:35 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-06-29 11:36:35 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-06-29 11:36:35 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-06-29 11:36:35 DEBUG Settings:82 - Default batch fetch size: -1
2021-06-29 11:36:35 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-06-29 11:36:35 DEBUG Settings:84 - Default null ordering: NONE
2021-06-29 11:36:35 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-06-29 11:36:35 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-06-29 11:36:35 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-06-29 11:36:35 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-06-29 11:36:35 DEBUG Settings:92 - Query language substitutions: {}
2021-06-29 11:36:35 DEBUG Settings:93 - Named query checking : enabled
2021-06-29 11:36:35 DEBUG Settings:95 - Second-level cache: disabled
2021-06-29 11:36:35 DEBUG Settings:96 - Second-level query cache: disabled
2021-06-29 11:36:35 DEBUG Settings:97 - Second-level query cache factory: null
2021-06-29 11:36:35 DEBUG Settings:98 - Second-level cache region prefix: null
2021-06-29 11:36:35 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-06-29 11:36:35 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-06-29 11:36:35 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-06-29 11:36:35 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-06-29 11:36:35 DEBUG Settings:104 - JDBC batch size: 15
2021-06-29 11:36:35 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-06-29 11:36:35 DEBUG Settings:106 - Scrollable result sets: enabled
2021-06-29 11:36:35 DEBUG Settings:107 - Wrap result sets: disabled
2021-06-29 11:36:35 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): disabled
2021-06-29 11:36:35 DEBUG Settings:109 - JDBC result set fetch size: null
2021-06-29 11:36:35 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-06-29 11:36:35 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-06-29 11:36:35 DEBUG Settings:113 - JPA compliance - query : 
2021-06-29 11:36:35 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-06-29 11:36:35 DEBUG Settings:115 - JPA compliance - lists : 
2021-06-29 11:36:35 DEBUG Settings:116 - JPA compliance - transactions : 
2021-06-29 11:36:35 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-06-29 11:36:35 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\Documents\Revtature\SocialHubWeek4\target\classes;C:\Program Files\apache-tomcat-9.0.43\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.43\lib\ecj-4.18.jar;C:\Program Files\apache-tomcat-9.0.43\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.43\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin, sun.java.command=SocialHubDriver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=15.0.1, user.dir=D:\Documents\Revtature\SocialHubWeek4, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1846579f, java.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Java\jdk1.8.0_281;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\WorldPainter;C:\Program Files\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\OpenSSL-Win64\bin\;C:\Program Files\apache-maven-3.6.3\bin;C:\Program Files\nodejs\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Java\jdk1.8.0_281\bin;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\MongoDB;C:\Program Files\apache-maven-3.6.3\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Users\Ethan\AppData\Local\GitHubDesktop\bin;C:\Program Files\sts-4.9.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=59.0}
2021-06-29 11:36:35 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-06-29 11:36:35 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-06-29 11:36:35 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-06-29 11:36:35 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-06-29 11:36:35 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-06-29 11:36:35 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-06-29 11:36:35 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-06-29 11:36:35 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-06-29 11:36:35 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-06-29 11:36:35 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-06-29 11:36:35 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-06-29 11:36:35 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-06-29 11:36:35 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-06-29 11:36:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:36:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:36:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:36:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:36:35 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-06-29 11:36:35 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-06-29 11:36:35 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@703feacd] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@59bbe88a]
2021-06-29 11:36:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:36:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:36:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:36:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:36:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:36:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:36:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:36:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:36:35 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-06-29 11:36:35 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-06-29 11:36:35 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-06-29 11:36:35 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-06-29 11:36:35 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-06-29 11:36:35 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-06-29 11:36:35 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-06-29 11:36:35 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_0_, post_.user_id as user_id3_0_ from posts post_ where post_.post_id=?
2021-06-29 11:36:35 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-06-29 11:36:35 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-06-29 11:36:35 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-06-29 11:36:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@839df62]
2021-06-29 11:36:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:36:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:36:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b2e5c0d]
2021-06-29 11:36:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:36:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:36:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:1>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}

2021-06-29 11:36:35 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_0_0_, post0_.content as content2_0_0_, post0_.user_id as user_id3_0_0_ from posts post0_ where post0_.post_id=?
2021-06-29 11:36:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f7eee96]
2021-06-29 11:36:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:36:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:36:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f0d09c]
2021-06-29 11:36:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:36:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:36:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:1>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}

2021-06-29 11:36:35 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_0_0_, post0_.content as content2_0_0_, post0_.user_id as user_id3_0_0_ from posts post0_ where post0_.post_id=?
2021-06-29 11:36:35 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_0_1_, post0_.content as content2_0_1_, post0_.user_id as user_id3_0_1_, user1_.user_id as user_id1_1_0_, user1_.email as email2_1_0_, user1_.first_name as first_na3_1_0_, user1_.last_name as last_nam4_1_0_, user1_.password as password5_1_0_, user1_.username as username6_1_0_ from posts post0_ left outer join users user1_ on post0_.user_id=user1_.user_id where post0_.post_id=?
2021-06-29 11:36:35 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_0_1_, post0_.content as content2_0_1_, post0_.user_id as user_id3_0_1_, user1_.user_id as user_id1_1_0_, user1_.email as email2_1_0_, user1_.first_name as first_na3_1_0_, user1_.last_name as last_nam4_1_0_, user1_.password as password5_1_0_, user1_.username as username6_1_0_ from posts post0_ left outer join users user1_ on post0_.user_id=user1_.user_id where post0_.post_id=?
2021-06-29 11:36:35 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-06-29 11:36:35 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-06-29 11:36:35 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.password as password5_1_, user_.username as username6_1_ from users user_ where user_.user_id=?
2021-06-29 11:36:35 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 11:36:35 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-06-29 11:36:35 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-06-29 11:36:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cc65c2]
2021-06-29 11:36:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 11:36:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 11:36:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 11:36:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 11:36:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 11:36:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5eb5da12]
2021-06-29 11:36:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6418e39e]
2021-06-29 11:36:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 11:36:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:36:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:36:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:1>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}

2021-06-29 11:36:35 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.password as password5_1_0_, user0_.username as username6_1_0_ from users user0_ where user0_.user_id=?
2021-06-29 11:36:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2accaec2]
2021-06-29 11:36:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 11:36:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 11:36:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 11:36:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 11:36:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 11:36:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@83bb0f]
2021-06-29 11:36:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a94b55]
2021-06-29 11:36:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 11:36:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:36:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:36:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:1>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}

2021-06-29 11:36:35 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.password as password5_1_0_, user0_.username as username6_1_0_ from users user0_ where user0_.user_id=?
2021-06-29 11:36:35 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.password as password5_1_1_, user0_.username as username6_1_1_, posts1_.user_id as user_id3_0_3_, posts1_.post_id as post_id1_0_3_, posts1_.post_id as post_id1_0_0_, posts1_.content as content2_0_0_, posts1_.user_id as user_id3_0_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 11:36:35 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.password as password5_1_1_, user0_.username as username6_1_1_, posts1_.user_id as user_id3_0_3_, posts1_.post_id as post_id1_0_3_, posts1_.post_id as post_id1_0_0_, posts1_.content as content2_0_0_, posts1_.user_id as user_id3_0_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 11:36:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14168e1]
2021-06-29 11:36:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16a5c7e4]
2021-06-29 11:36:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:36:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:36:35 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-06-29 11:36:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:36:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:36:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_0_1_}

2021-06-29 11:36:35 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_0_0_, posts0_.post_id as post_id1_0_0_, posts0_.post_id as post_id1_0_1_, posts0_.content as content2_0_1_, posts0_.user_id as user_id3_0_1_ from posts posts0_ where posts0_.user_id=?
2021-06-29 11:36:35 DEBUG SQL:94 - alter table if exists posts drop constraint if exists FK5lidm6cqbc7u4xhqpxm898qme
2021-06-29 11:36:35 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@12d2ddde] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 11:36:35 DEBUG SQL:94 - drop table if exists posts cascade
2021-06-29 11:36:35 DEBUG SQL:94 - drop table if exists users cascade
2021-06-29 11:36:35 DEBUG SQL:94 - drop sequence if exists hibernate_sequence
2021-06-29 11:36:35 DEBUG SQL:94 - create sequence hibernate_sequence start 1 increment 1
2021-06-29 11:36:35 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7f0b93b4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 11:36:35 DEBUG SQL:94 - create table posts (post_id int4 not null, content varchar(255), user_id int4, primary key (post_id))
2021-06-29 11:36:35 DEBUG SQL:94 - create table users (user_id int4 not null, email varchar(255) not null, first_name varchar(255) not null, last_name varchar(255) not null, password varchar(255) not null, username varchar(255) not null, primary key (user_id))
2021-06-29 11:36:35 DEBUG SQL:94 - alter table if exists users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
2021-06-29 11:36:35 DEBUG SQL:94 - alter table if exists users add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username)
2021-06-29 11:36:35 DEBUG SQL:94 - alter table if exists posts add constraint FK5lidm6cqbc7u4xhqpxm898qme foreign key (user_id) references users
2021-06-29 11:36:35 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-06-29 11:36:35 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-06-29 11:36:35 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 11:36:35 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 11:36:35 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-06-29 11:36:35 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-06-29 11:36:35 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@235c997d
2021-06-29 11:36:35 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 69d6d4f6-5777-4544-80e4-0146af0f528d (<unnamed>)
2021-06-29 11:36:35 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-06-29 11:36:35 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-06-29 11:36:35 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-06-29 11:36:35 DEBUG TransactionImpl:84 - begin
2021-06-29 11:36:35 DEBUG SQL:94 - select nextval ('hibernate_sequence')
2021-06-29 11:36:36 DEBUG SequenceStructure:101 - Sequence value obtained: 1
2021-06-29 11:36:36 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-06-29 11:36:36 DEBUG AbstractSaveEventListener:132 - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2021-06-29 11:36:36 DEBUG TransactionImpl:101 - committing
2021-06-29 11:36:36 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-06-29 11:36:36 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-06-29 11:36:36 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [<unreferenced>] (initialized)
2021-06-29 11:36:36 DEBUG AbstractFlushingEventListener:115 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2021-06-29 11:36:36 DEBUG AbstractFlushingEventListener:122 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2021-06-29 11:36:36 DEBUG EntityPrinter:110 - Listing entities:
2021-06-29 11:36:36 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, id=1, posts=[], email=rick@email.com, username=RickSanchez8920}
2021-06-29 11:36:36 DEBUG SQL:94 - insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 11:36:36 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:36:36 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:38:04 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 11:38:04 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-06-29 11:38:04 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-06-29 11:38:04 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-06-29 11:38:05 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-06-29 11:38:05 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-06-29 11:38:05 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-06-29 11:38:05 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-06-29 11:38:05 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-06-29 11:38:05 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-06-29 11:38:05 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-06-29 11:38:05 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-06-29 11:38:05 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-06-29 11:38:05 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-06-29 11:38:05 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7bc10d84
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7bc10d84
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7bc10d84
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73ff4fae
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2611b9a3
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f446bef
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@458342d3
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@458342d3
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@458342d3
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@36676c1a
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@36676c1a
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@36676c1a
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@293d0107
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@293d0107
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@293d0107
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@55e8ec2f
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@55e8ec2f
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e8ec2f
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@4c51bb7
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@4c51bb7
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c51bb7
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7d3430a7
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7d3430a7
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7d3430a7
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5536379e
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5536379e
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5536379e
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b491fee
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b491fee
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58e6d4b8
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58e6d4b8
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@51850751
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@51850751
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@e260766
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7c56e013
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@34a1d21f
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@34a1d21f
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@2cb3d0f7
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2cb3d0f7
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@4ae33a11
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4ae33a11
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a3591c5
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a3591c5
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@482d776b
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@482d776b
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7a7471ce
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7a7471ce
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63648ee9
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63648ee9
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@24faea88
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@24faea88
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76ba13c
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76ba13c
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@7e242b4d
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7e242b4d
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1536602f
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1536602f
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@c7a975a
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@c7a975a
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@c7a975a
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3c0fae6c
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6326d182
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6326d182
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6326d182
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e809b79
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@55795845
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@55795845
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@6175619b
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6175619b
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2cf92cc7
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2cf92cc7
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@5d465e4b
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5d465e4b
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@78aea4b9
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@78aea4b9
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4215838f
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@3e2943ab
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3e2943ab
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@3e2943ab
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c9399a4
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c9399a4
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c9399a4
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@172ca72b
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5e8f9e2d
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@60fa3495
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@60fa3495
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@60fa3495
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5fcacc0
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5fcacc0
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5fcacc0
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@6865c751
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@5b6813df
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@35fe2125
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@35fe2125
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60b71e8f
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@5fd62371
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5fd62371
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@1568159
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1568159
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@f9879ac
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@224b4d61
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3f23a3a0
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@72ccd81a
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72ccd81a
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5d25e6bb
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ce5a68e
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@9d157ff
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f162cc0
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5df417a7
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7c041b41
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f69d591
2021-06-29 11:38:05 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@61078690
2021-06-29 11:38:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-06-29 11:38:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-06-29 11:38:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 11:38:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 11:38:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-06-29 11:38:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-06-29 11:38:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-06-29 11:38:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 11:38:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-06-29 11:38:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-06-29 11:38:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-06-29 11:38:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-06-29 11:38:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 11:38:05 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-06-29 11:38:05 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-06-29 11:38:05 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-29 11:38:05 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, user=social}
2021-06-29 11:38:05 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-06-29 11:38:05 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-06-29 11:38:05 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-06-29 11:38:05 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-06-29 11:38:05 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.0 JDBC4 (build 801)
      major : 9
      minor : 0
2021-06-29 11:38:05 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
2021-06-29 11:38:05 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-06-29 11:38:05 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-06-29 11:38:23 DEBUG DefaultSchemaNameResolver:53 - Unable to use Java 1.7 Connection#getSchema
2021-06-29 11:38:23 DEBUG JdbcEnvironmentImpl:314 - Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.PostgreSQL10Dialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:311)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:175)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:39)
	at SocialHubDriver.main(SocialHubDriver.java:31)
2021-06-29 11:38:23 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-06-29 11:38:23 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6edc4161
2021-06-29 11:38:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6edc4161
2021-06-29 11:38:23 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@78aea4b9
2021-06-29 11:38:23 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@703feacd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7051777c]
2021-06-29 11:38:23 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-06-29 11:38:23 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 11:38:23 DEBUG EntityBinder:430 - Import with entity name User
2021-06-29 11:38:23 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-06-29 11:38:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-06-29 11:38:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-06-29 11:38:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-06-29 11:38:23 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-06-29 11:38:23 DEBUG PropertyBinder:266 - Building property id
2021-06-29 11:38:23 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 11:38:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-06-29 11:38:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-06-29 11:38:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-06-29 11:38:23 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-06-29 11:38:23 DEBUG PropertyBinder:266 - Building property email
2021-06-29 11:38:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-06-29 11:38:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-06-29 11:38:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-06-29 11:38:23 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-06-29 11:38:23 DEBUG PropertyBinder:266 - Building property firstName
2021-06-29 11:38:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-06-29 11:38:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-06-29 11:38:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-06-29 11:38:23 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-06-29 11:38:23 DEBUG PropertyBinder:266 - Building property lastName
2021-06-29 11:38:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-06-29 11:38:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-06-29 11:38:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-06-29 11:38:23 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-06-29 11:38:23 DEBUG PropertyBinder:266 - Building property password
2021-06-29 11:38:23 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:38:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-06-29 11:38:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 11:38:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 11:38:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 11:38:23 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 11:38:23 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:38:23 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:38:23 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-06-29 11:38:23 DEBUG PropertyBinder:266 - Building property posts
2021-06-29 11:38:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-06-29 11:38:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-06-29 11:38:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-06-29 11:38:23 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-06-29 11:38:23 DEBUG PropertyBinder:266 - Building property username
2021-06-29 11:38:23 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-06-29 11:38:23 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 11:38:23 DEBUG EntityBinder:430 - Import with entity name Post
2021-06-29 11:38:23 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-06-29 11:38:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-06-29 11:38:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-06-29 11:38:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-06-29 11:38:23 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-06-29 11:38:23 DEBUG PropertyBinder:266 - Building property postId
2021-06-29 11:38:23 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 11:38:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-06-29 11:38:23 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-06-29 11:38:23 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-06-29 11:38:23 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-06-29 11:38:23 DEBUG PropertyBinder:266 - Building property postContent
2021-06-29 11:38:23 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 11:38:23 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-06-29 11:38:23 DEBUG PropertyBinder:266 - Building property user
2021-06-29 11:38:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-06-29 11:38:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-06-29 11:38:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-06-29 11:38:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-06-29 11:38:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-06-29 11:38:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-06-29 11:38:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-06-29 11:38:23 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-06-29 11:38:23 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-06-29 11:38:23 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-06-29 11:38:23 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-06-29 11:38:23 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-06-29 11:38:23 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-06-29 11:38:23 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-06-29 11:38:23 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-06-29 11:38:23 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 11:38:23 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 11:38:23 DEBUG SessionFactoryImpl:196 - Building session factory
2021-06-29 11:38:23 DEBUG Settings:70 - SessionFactory name : null
2021-06-29 11:38:23 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-06-29 11:38:23 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-06-29 11:38:23 DEBUG Settings:74 - Statistics: disabled
2021-06-29 11:38:23 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-06-29 11:38:23 DEBUG Settings:77 - Default entity-mode: pojo
2021-06-29 11:38:23 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-06-29 11:38:23 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-06-29 11:38:23 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-06-29 11:38:23 DEBUG Settings:82 - Default batch fetch size: -1
2021-06-29 11:38:23 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-06-29 11:38:23 DEBUG Settings:84 - Default null ordering: NONE
2021-06-29 11:38:23 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-06-29 11:38:23 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-06-29 11:38:23 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-06-29 11:38:23 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-06-29 11:38:23 DEBUG Settings:92 - Query language substitutions: {}
2021-06-29 11:38:23 DEBUG Settings:93 - Named query checking : enabled
2021-06-29 11:38:23 DEBUG Settings:95 - Second-level cache: disabled
2021-06-29 11:38:23 DEBUG Settings:96 - Second-level query cache: disabled
2021-06-29 11:38:23 DEBUG Settings:97 - Second-level query cache factory: null
2021-06-29 11:38:23 DEBUG Settings:98 - Second-level cache region prefix: null
2021-06-29 11:38:23 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-06-29 11:38:23 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-06-29 11:38:23 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-06-29 11:38:23 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-06-29 11:38:23 DEBUG Settings:104 - JDBC batch size: 15
2021-06-29 11:38:23 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-06-29 11:38:23 DEBUG Settings:106 - Scrollable result sets: enabled
2021-06-29 11:38:23 DEBUG Settings:107 - Wrap result sets: disabled
2021-06-29 11:38:23 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): disabled
2021-06-29 11:38:23 DEBUG Settings:109 - JDBC result set fetch size: null
2021-06-29 11:38:23 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-06-29 11:38:23 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-06-29 11:38:23 DEBUG Settings:113 - JPA compliance - query : 
2021-06-29 11:38:23 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-06-29 11:38:23 DEBUG Settings:115 - JPA compliance - lists : 
2021-06-29 11:38:23 DEBUG Settings:116 - JPA compliance - transactions : 
2021-06-29 11:38:23 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-06-29 11:38:23 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\Documents\Revtature\SocialHubWeek4\target\classes;C:\Program Files\apache-tomcat-9.0.43\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.43\lib\ecj-4.18.jar;C:\Program Files\apache-tomcat-9.0.43\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.43\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin, sun.java.command=SocialHubDriver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=15.0.1, user.dir=D:\Documents\Revtature\SocialHubWeek4, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1846579f, java.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Java\jdk1.8.0_281;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\WorldPainter;C:\Program Files\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\OpenSSL-Win64\bin\;C:\Program Files\apache-maven-3.6.3\bin;C:\Program Files\nodejs\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Java\jdk1.8.0_281\bin;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\MongoDB;C:\Program Files\apache-maven-3.6.3\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Users\Ethan\AppData\Local\GitHubDesktop\bin;C:\Program Files\sts-4.9.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=59.0}
2021-06-29 11:38:23 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-06-29 11:38:23 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-06-29 11:38:23 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-06-29 11:38:23 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-06-29 11:38:23 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-06-29 11:38:23 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-06-29 11:38:23 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-06-29 11:38:23 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-06-29 11:38:23 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-06-29 11:38:23 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-06-29 11:38:23 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-06-29 11:38:23 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-06-29 11:38:23 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-06-29 11:38:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:38:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:38:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:38:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:38:23 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-06-29 11:38:23 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-06-29 11:38:23 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@703feacd] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@59bbe88a]
2021-06-29 11:38:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:38:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:38:23 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:38:23 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:38:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:38:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:38:24 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:38:24 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:38:24 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-06-29 11:38:24 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-06-29 11:38:24 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-06-29 11:38:24 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-06-29 11:38:24 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-06-29 11:38:24 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-06-29 11:38:24 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-06-29 11:38:24 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_0_, post_.user_id as user_id3_0_ from posts post_ where post_.post_id=?
2021-06-29 11:38:24 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-06-29 11:38:24 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-06-29 11:38:24 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-06-29 11:38:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@839df62]
2021-06-29 11:38:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:38:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:38:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b2e5c0d]
2021-06-29 11:38:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:38:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:38:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:1>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}

2021-06-29 11:38:24 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_0_0_, post0_.content as content2_0_0_, post0_.user_id as user_id3_0_0_ from posts post0_ where post0_.post_id=?
2021-06-29 11:38:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f7eee96]
2021-06-29 11:38:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:38:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:38:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f0d09c]
2021-06-29 11:38:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:38:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:38:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:1>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}

2021-06-29 11:38:24 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_0_0_, post0_.content as content2_0_0_, post0_.user_id as user_id3_0_0_ from posts post0_ where post0_.post_id=?
2021-06-29 11:38:24 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_0_1_, post0_.content as content2_0_1_, post0_.user_id as user_id3_0_1_, user1_.user_id as user_id1_1_0_, user1_.email as email2_1_0_, user1_.first_name as first_na3_1_0_, user1_.last_name as last_nam4_1_0_, user1_.password as password5_1_0_, user1_.username as username6_1_0_ from posts post0_ left outer join users user1_ on post0_.user_id=user1_.user_id where post0_.post_id=?
2021-06-29 11:38:24 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_0_1_, post0_.content as content2_0_1_, post0_.user_id as user_id3_0_1_, user1_.user_id as user_id1_1_0_, user1_.email as email2_1_0_, user1_.first_name as first_na3_1_0_, user1_.last_name as last_nam4_1_0_, user1_.password as password5_1_0_, user1_.username as username6_1_0_ from posts post0_ left outer join users user1_ on post0_.user_id=user1_.user_id where post0_.post_id=?
2021-06-29 11:38:24 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-06-29 11:38:24 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-06-29 11:38:24 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.password as password5_1_, user_.username as username6_1_ from users user_ where user_.user_id=?
2021-06-29 11:38:24 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 11:38:24 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-06-29 11:38:24 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-06-29 11:38:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cc65c2]
2021-06-29 11:38:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 11:38:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 11:38:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 11:38:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 11:38:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 11:38:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5eb5da12]
2021-06-29 11:38:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6418e39e]
2021-06-29 11:38:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 11:38:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:38:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:38:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:1>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}

2021-06-29 11:38:24 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.password as password5_1_0_, user0_.username as username6_1_0_ from users user0_ where user0_.user_id=?
2021-06-29 11:38:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2accaec2]
2021-06-29 11:38:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 11:38:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 11:38:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 11:38:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 11:38:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 11:38:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@83bb0f]
2021-06-29 11:38:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a94b55]
2021-06-29 11:38:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 11:38:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:38:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:38:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:1>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}

2021-06-29 11:38:24 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.password as password5_1_0_, user0_.username as username6_1_0_ from users user0_ where user0_.user_id=?
2021-06-29 11:38:24 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.password as password5_1_1_, user0_.username as username6_1_1_, posts1_.user_id as user_id3_0_3_, posts1_.post_id as post_id1_0_3_, posts1_.post_id as post_id1_0_0_, posts1_.content as content2_0_0_, posts1_.user_id as user_id3_0_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 11:38:24 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.password as password5_1_1_, user0_.username as username6_1_1_, posts1_.user_id as user_id3_0_3_, posts1_.post_id as post_id1_0_3_, posts1_.post_id as post_id1_0_0_, posts1_.content as content2_0_0_, posts1_.user_id as user_id3_0_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 11:38:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14168e1]
2021-06-29 11:38:24 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16a5c7e4]
2021-06-29 11:38:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:38:24 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:38:24 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-06-29 11:38:24 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:38:24 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:38:24 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_0_1_}

2021-06-29 11:38:24 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_0_0_, posts0_.post_id as post_id1_0_0_, posts0_.post_id as post_id1_0_1_, posts0_.content as content2_0_1_, posts0_.user_id as user_id3_0_1_ from posts posts0_ where posts0_.user_id=?
2021-06-29 11:38:24 DEBUG SQL:94 - alter table if exists posts drop constraint if exists FK5lidm6cqbc7u4xhqpxm898qme
2021-06-29 11:38:24 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@12d2ddde] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 11:38:24 DEBUG SQL:94 - drop table if exists posts cascade
2021-06-29 11:38:24 DEBUG SQL:94 - drop table if exists users cascade
2021-06-29 11:38:24 DEBUG SQL:94 - drop sequence if exists hibernate_sequence
2021-06-29 11:38:24 DEBUG SQL:94 - create sequence hibernate_sequence start 1 increment 1
2021-06-29 11:38:24 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7f0b93b4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 11:38:24 DEBUG SQL:94 - create table posts (post_id int4 not null, content varchar(255), user_id int4, primary key (post_id))
2021-06-29 11:38:24 DEBUG SQL:94 - create table users (user_id int4 not null, email varchar(255) not null, first_name varchar(255) not null, last_name varchar(255) not null, password varchar(255) not null, username varchar(255) not null, primary key (user_id))
2021-06-29 11:38:24 DEBUG SQL:94 - alter table if exists users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
2021-06-29 11:38:24 DEBUG SQL:94 - alter table if exists users add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username)
2021-06-29 11:38:24 DEBUG SQL:94 - alter table if exists posts add constraint FK5lidm6cqbc7u4xhqpxm898qme foreign key (user_id) references users
2021-06-29 11:38:24 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-06-29 11:38:24 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-06-29 11:38:24 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 11:38:24 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 11:38:24 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-06-29 11:38:24 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-06-29 11:38:24 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@235c997d
2021-06-29 11:38:24 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 4f3552f9-efe3-47ac-81ab-a239cf67d78a (<unnamed>)
2021-06-29 11:38:24 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-06-29 11:38:24 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-06-29 11:38:24 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-06-29 11:38:24 DEBUG TransactionImpl:84 - begin
2021-06-29 11:38:24 DEBUG SQL:94 - select nextval ('hibernate_sequence')
2021-06-29 11:38:24 DEBUG SequenceStructure:101 - Sequence value obtained: 1
2021-06-29 11:38:24 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-06-29 11:38:24 DEBUG AbstractSaveEventListener:132 - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2021-06-29 11:38:24 DEBUG TransactionImpl:101 - committing
2021-06-29 11:38:24 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-06-29 11:38:24 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-06-29 11:38:24 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [<unreferenced>] (initialized)
2021-06-29 11:38:24 DEBUG AbstractFlushingEventListener:115 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2021-06-29 11:38:24 DEBUG AbstractFlushingEventListener:122 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2021-06-29 11:38:24 DEBUG EntityPrinter:110 - Listing entities:
2021-06-29 11:38:24 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, id=1, posts=[], email=rick@email.com, username=RickSanchez7798}
2021-06-29 11:38:24 DEBUG SQL:94 - insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 11:38:24 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:38:24 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:38:24 DEBUG TransactionImpl:84 - begin
2021-06-29 11:38:24 DEBUG SQL:94 - select nextval ('hibernate_sequence')
2021-06-29 11:38:24 DEBUG SequenceStructure:101 - Sequence value obtained: 2
2021-06-29 11:38:24 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-06-29 11:38:24 DEBUG AbstractSaveEventListener:132 - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2021-06-29 11:38:24 DEBUG TransactionImpl:101 - committing
2021-06-29 11:38:24 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-06-29 11:38:24 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-06-29 11:38:24 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [com.example.models.User.posts#1] (initialized)
2021-06-29 11:38:24 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#2], was: [<unreferenced>] (initialized)
2021-06-29 11:38:24 DEBUG AbstractFlushingEventListener:115 - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2021-06-29 11:38:24 DEBUG AbstractFlushingEventListener:122 - Flushed: 1 (re)creations, 0 updates, 0 removals to 2 collections
2021-06-29 11:38:24 DEBUG EntityPrinter:110 - Listing entities:
2021-06-29 11:38:24 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, id=1, posts=[], email=rick@email.com, username=RickSanchez7798}
2021-06-29 11:38:24 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Morty, lastName=Smith, password=password, id=2, posts=[], email=morty@email.com, username=MortySmith2093}
2021-06-29 11:38:24 DEBUG SQL:94 - insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 11:38:24 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:38:24 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:38:24 WARN  deprecation:1914 - HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead
2021-06-29 11:38:24 DEBUG SQL:94 - select this_.user_id as user_id1_1_0_, this_.email as email2_1_0_, this_.first_name as first_na3_1_0_, this_.last_name as last_nam4_1_0_, this_.password as password5_1_0_, this_.username as username6_1_0_ from users this_ where this_.username like ?
2021-06-29 11:38:24 DEBUG Loader:384 - Result set row: 0
2021-06-29 11:38:24 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#1]
2021-06-29 11:38:24 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:38:25 DEBUG TransactionImpl:84 - begin
2021-06-29 11:38:25 DEBUG TransactionImpl:101 - committing
2021-06-29 11:38:25 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-06-29 11:38:25 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-06-29 11:38:25 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [com.example.models.User.posts#1] (initialized)
2021-06-29 11:38:25 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#2], was: [com.example.models.User.posts#2] (initialized)
2021-06-29 11:38:25 DEBUG AbstractFlushingEventListener:115 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-06-29 11:38:25 DEBUG AbstractFlushingEventListener:122 - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2021-06-29 11:38:25 DEBUG EntityPrinter:110 - Listing entities:
2021-06-29 11:38:25 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, id=1, posts=[], email=rick@email.com, username=RickSanchez7798}
2021-06-29 11:38:25 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Morty, lastName=Smith, password=password, id=2, posts=[], email=morty@email.com, username=MortySmith2093}
2021-06-29 11:38:25 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:38:25 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:38:25 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@70b6db83
2021-06-29 11:38:25 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select * from users
2021-06-29 11:38:25 ERROR ErrorTracker:62 - line 1:8: unexpected token: *
2021-06-29 11:38:25 ERROR ErrorTracker:57 - line 1:8: unexpected token: *
line 1:8: unexpected token: *
	at org.hibernate.hql.internal.antlr.HqlBaseParser.selectClause(HqlBaseParser.java:1263)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.selectFrom(HqlBaseParser.java:1040)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.queryRule(HqlBaseParser.java:748)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.selectStatement(HqlBaseParser.java:319)
	at org.hibernate.hql.internal.antlr.HqlBaseParser.statement(HqlBaseParser.java:198)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.parse(QueryTranslatorImpl.java:290)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.doCompile(QueryTranslatorImpl.java:189)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.compile(QueryTranslatorImpl.java:144)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:118)
	at org.hibernate.engine.query.spi.HQLQueryPlan.<init>(HQLQueryPlan.java:78)
	at org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan(QueryPlanCache.java:158)
	at org.hibernate.internal.AbstractSharedSessionContract.getQueryPlan(AbstractSharedSessionContract.java:611)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:720)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:745)
	at org.hibernate.internal.AbstractSharedSessionContract.createQuery(AbstractSharedSessionContract.java:104)
	at com.example.dao.UserDaoHibernate.getAllUsers(UserDaoHibernate.java:19)
	at SocialHubDriver.main(SocialHubDriver.java:38)
2021-06-29 11:39:47 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 11:39:47 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-06-29 11:39:47 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-06-29 11:39:47 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-06-29 11:39:47 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-06-29 11:39:47 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-06-29 11:39:47 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-06-29 11:39:47 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-06-29 11:39:47 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-06-29 11:39:48 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-06-29 11:39:48 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-06-29 11:39:48 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-06-29 11:39:48 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-06-29 11:39:48 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-06-29 11:39:48 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7bc10d84
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7bc10d84
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7bc10d84
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73ff4fae
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2611b9a3
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f446bef
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@458342d3
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@458342d3
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@458342d3
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@36676c1a
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@36676c1a
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@36676c1a
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@293d0107
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@293d0107
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@293d0107
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@55e8ec2f
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@55e8ec2f
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e8ec2f
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@4c51bb7
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@4c51bb7
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c51bb7
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7d3430a7
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7d3430a7
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7d3430a7
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5536379e
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5536379e
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5536379e
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b491fee
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b491fee
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58e6d4b8
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58e6d4b8
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@51850751
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@51850751
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@e260766
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7c56e013
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@34a1d21f
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@34a1d21f
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@2cb3d0f7
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2cb3d0f7
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@4ae33a11
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4ae33a11
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a3591c5
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a3591c5
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@482d776b
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@482d776b
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7a7471ce
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7a7471ce
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63648ee9
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63648ee9
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@24faea88
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@24faea88
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76ba13c
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76ba13c
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@7e242b4d
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7e242b4d
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1536602f
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1536602f
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@c7a975a
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@c7a975a
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@c7a975a
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3c0fae6c
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6326d182
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6326d182
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6326d182
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e809b79
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@55795845
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@55795845
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@6175619b
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6175619b
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2cf92cc7
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2cf92cc7
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@5d465e4b
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5d465e4b
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@78aea4b9
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@78aea4b9
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4215838f
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@3e2943ab
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3e2943ab
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@3e2943ab
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c9399a4
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c9399a4
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c9399a4
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@172ca72b
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5e8f9e2d
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@60fa3495
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@60fa3495
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@60fa3495
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5fcacc0
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5fcacc0
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5fcacc0
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@6865c751
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@5b6813df
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@35fe2125
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@35fe2125
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60b71e8f
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@5fd62371
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5fd62371
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@1568159
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1568159
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@f9879ac
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@224b4d61
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3f23a3a0
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@72ccd81a
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72ccd81a
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5d25e6bb
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ce5a68e
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@9d157ff
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f162cc0
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5df417a7
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7c041b41
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f69d591
2021-06-29 11:39:48 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@61078690
2021-06-29 11:39:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-06-29 11:39:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-06-29 11:39:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 11:39:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 11:39:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-06-29 11:39:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-06-29 11:39:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-06-29 11:39:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 11:39:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-06-29 11:39:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-06-29 11:39:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-06-29 11:39:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-06-29 11:39:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 11:39:48 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-06-29 11:39:48 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-06-29 11:39:48 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-29 11:39:48 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, user=social}
2021-06-29 11:39:48 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-06-29 11:39:48 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-06-29 11:39:48 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-06-29 11:39:48 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-06-29 11:39:48 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.0 JDBC4 (build 801)
      major : 9
      minor : 0
2021-06-29 11:39:48 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
2021-06-29 11:39:48 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-06-29 11:39:48 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-06-29 11:40:05 DEBUG DefaultSchemaNameResolver:53 - Unable to use Java 1.7 Connection#getSchema
2021-06-29 11:40:05 DEBUG JdbcEnvironmentImpl:314 - Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.PostgreSQL10Dialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:311)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:175)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:39)
	at SocialHubDriver.main(SocialHubDriver.java:31)
2021-06-29 11:40:05 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-06-29 11:40:05 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@30cecdca
2021-06-29 11:40:05 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@30cecdca
2021-06-29 11:40:05 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@78aea4b9
2021-06-29 11:40:05 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@68809cc7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@703feacd]
2021-06-29 11:40:05 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-06-29 11:40:05 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 11:40:05 DEBUG EntityBinder:430 - Import with entity name User
2021-06-29 11:40:05 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-06-29 11:40:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-06-29 11:40:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-06-29 11:40:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-06-29 11:40:05 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-06-29 11:40:05 DEBUG PropertyBinder:266 - Building property id
2021-06-29 11:40:05 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 11:40:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-06-29 11:40:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-06-29 11:40:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-06-29 11:40:05 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-06-29 11:40:05 DEBUG PropertyBinder:266 - Building property email
2021-06-29 11:40:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-06-29 11:40:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-06-29 11:40:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-06-29 11:40:05 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-06-29 11:40:05 DEBUG PropertyBinder:266 - Building property firstName
2021-06-29 11:40:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-06-29 11:40:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-06-29 11:40:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-06-29 11:40:05 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-06-29 11:40:05 DEBUG PropertyBinder:266 - Building property lastName
2021-06-29 11:40:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-06-29 11:40:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-06-29 11:40:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-06-29 11:40:05 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-06-29 11:40:05 DEBUG PropertyBinder:266 - Building property password
2021-06-29 11:40:05 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:40:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-06-29 11:40:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 11:40:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 11:40:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 11:40:05 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 11:40:05 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:40:05 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:40:05 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-06-29 11:40:05 DEBUG PropertyBinder:266 - Building property posts
2021-06-29 11:40:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-06-29 11:40:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-06-29 11:40:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-06-29 11:40:05 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-06-29 11:40:05 DEBUG PropertyBinder:266 - Building property username
2021-06-29 11:40:05 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-06-29 11:40:05 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 11:40:05 DEBUG EntityBinder:430 - Import with entity name Post
2021-06-29 11:40:05 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-06-29 11:40:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-06-29 11:40:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-06-29 11:40:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-06-29 11:40:05 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-06-29 11:40:05 DEBUG PropertyBinder:266 - Building property postId
2021-06-29 11:40:05 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 11:40:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-06-29 11:40:05 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-06-29 11:40:05 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-06-29 11:40:05 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-06-29 11:40:05 DEBUG PropertyBinder:266 - Building property postContent
2021-06-29 11:40:05 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 11:40:05 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-06-29 11:40:05 DEBUG PropertyBinder:266 - Building property user
2021-06-29 11:40:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-06-29 11:40:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-06-29 11:40:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-06-29 11:40:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-06-29 11:40:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-06-29 11:40:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-06-29 11:40:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-06-29 11:40:05 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-06-29 11:40:05 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-06-29 11:40:05 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-06-29 11:40:05 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-06-29 11:40:05 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-06-29 11:40:05 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-06-29 11:40:05 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-06-29 11:40:05 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-06-29 11:40:05 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 11:40:05 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 11:40:05 DEBUG SessionFactoryImpl:196 - Building session factory
2021-06-29 11:40:05 DEBUG Settings:70 - SessionFactory name : null
2021-06-29 11:40:05 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-06-29 11:40:05 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-06-29 11:40:05 DEBUG Settings:74 - Statistics: disabled
2021-06-29 11:40:05 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-06-29 11:40:05 DEBUG Settings:77 - Default entity-mode: pojo
2021-06-29 11:40:05 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-06-29 11:40:05 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-06-29 11:40:05 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-06-29 11:40:05 DEBUG Settings:82 - Default batch fetch size: -1
2021-06-29 11:40:05 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-06-29 11:40:05 DEBUG Settings:84 - Default null ordering: NONE
2021-06-29 11:40:05 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-06-29 11:40:05 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-06-29 11:40:05 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-06-29 11:40:05 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-06-29 11:40:05 DEBUG Settings:92 - Query language substitutions: {}
2021-06-29 11:40:05 DEBUG Settings:93 - Named query checking : enabled
2021-06-29 11:40:05 DEBUG Settings:95 - Second-level cache: disabled
2021-06-29 11:40:05 DEBUG Settings:96 - Second-level query cache: disabled
2021-06-29 11:40:05 DEBUG Settings:97 - Second-level query cache factory: null
2021-06-29 11:40:05 DEBUG Settings:98 - Second-level cache region prefix: null
2021-06-29 11:40:05 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-06-29 11:40:05 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-06-29 11:40:05 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-06-29 11:40:05 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-06-29 11:40:05 DEBUG Settings:104 - JDBC batch size: 15
2021-06-29 11:40:05 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-06-29 11:40:05 DEBUG Settings:106 - Scrollable result sets: enabled
2021-06-29 11:40:05 DEBUG Settings:107 - Wrap result sets: disabled
2021-06-29 11:40:05 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): disabled
2021-06-29 11:40:05 DEBUG Settings:109 - JDBC result set fetch size: null
2021-06-29 11:40:05 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-06-29 11:40:05 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-06-29 11:40:05 DEBUG Settings:113 - JPA compliance - query : 
2021-06-29 11:40:05 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-06-29 11:40:05 DEBUG Settings:115 - JPA compliance - lists : 
2021-06-29 11:40:05 DEBUG Settings:116 - JPA compliance - transactions : 
2021-06-29 11:40:06 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-06-29 11:40:06 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\Documents\Revtature\SocialHubWeek4\target\classes;C:\Program Files\apache-tomcat-9.0.43\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.43\lib\ecj-4.18.jar;C:\Program Files\apache-tomcat-9.0.43\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.43\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin, sun.java.command=SocialHubDriver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=15.0.1, user.dir=D:\Documents\Revtature\SocialHubWeek4, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@336880df, java.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Java\jdk1.8.0_281;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\WorldPainter;C:\Program Files\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\OpenSSL-Win64\bin\;C:\Program Files\apache-maven-3.6.3\bin;C:\Program Files\nodejs\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Java\jdk1.8.0_281\bin;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\MongoDB;C:\Program Files\apache-maven-3.6.3\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Users\Ethan\AppData\Local\GitHubDesktop\bin;C:\Program Files\sts-4.9.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=59.0}
2021-06-29 11:40:06 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-06-29 11:40:06 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-06-29 11:40:06 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-06-29 11:40:06 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-06-29 11:40:06 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-06-29 11:40:06 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-06-29 11:40:06 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-06-29 11:40:06 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-06-29 11:40:06 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-06-29 11:40:06 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-06-29 11:40:06 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-06-29 11:40:06 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-06-29 11:40:06 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-06-29 11:40:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:40:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:40:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:40:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:40:06 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-06-29 11:40:06 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-06-29 11:40:06 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@68809cc7] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@f88bfbe]
2021-06-29 11:40:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:40:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:40:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:40:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:40:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:40:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:40:06 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:40:06 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:40:06 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-06-29 11:40:06 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-06-29 11:40:06 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-06-29 11:40:06 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-06-29 11:40:06 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-06-29 11:40:06 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-06-29 11:40:06 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-06-29 11:40:06 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_0_, post_.user_id as user_id3_0_ from posts post_ where post_.post_id=?
2021-06-29 11:40:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-06-29 11:40:06 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-06-29 11:40:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-06-29 11:40:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57efc6fd]
2021-06-29 11:40:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:40:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:40:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b7c80c6]
2021-06-29 11:40:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:40:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:40:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:1>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}

2021-06-29 11:40:06 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_0_0_, post0_.content as content2_0_0_, post0_.user_id as user_id3_0_0_ from posts post0_ where post0_.post_id=?
2021-06-29 11:40:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1450131a]
2021-06-29 11:40:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:40:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:40:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a36cd5]
2021-06-29 11:40:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:40:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:40:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:1>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}

2021-06-29 11:40:06 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_0_0_, post0_.content as content2_0_0_, post0_.user_id as user_id3_0_0_ from posts post0_ where post0_.post_id=?
2021-06-29 11:40:06 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_0_1_, post0_.content as content2_0_1_, post0_.user_id as user_id3_0_1_, user1_.user_id as user_id1_1_0_, user1_.email as email2_1_0_, user1_.first_name as first_na3_1_0_, user1_.last_name as last_nam4_1_0_, user1_.password as password5_1_0_, user1_.username as username6_1_0_ from posts post0_ left outer join users user1_ on post0_.user_id=user1_.user_id where post0_.post_id=?
2021-06-29 11:40:06 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_0_1_, post0_.content as content2_0_1_, post0_.user_id as user_id3_0_1_, user1_.user_id as user_id1_1_0_, user1_.email as email2_1_0_, user1_.first_name as first_na3_1_0_, user1_.last_name as last_nam4_1_0_, user1_.password as password5_1_0_, user1_.username as username6_1_0_ from posts post0_ left outer join users user1_ on post0_.user_id=user1_.user_id where post0_.post_id=?
2021-06-29 11:40:06 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-06-29 11:40:06 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-06-29 11:40:06 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.password as password5_1_, user_.username as username6_1_ from users user_ where user_.user_id=?
2021-06-29 11:40:06 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 11:40:06 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-06-29 11:40:06 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-06-29 11:40:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a1f778]
2021-06-29 11:40:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 11:40:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 11:40:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 11:40:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 11:40:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 11:40:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14447be]
2021-06-29 11:40:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76ff68c5]
2021-06-29 11:40:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 11:40:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:40:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:40:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:1>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}

2021-06-29 11:40:06 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.password as password5_1_0_, user0_.username as username6_1_0_ from users user0_ where user0_.user_id=?
2021-06-29 11:40:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3332c7a5]
2021-06-29 11:40:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 11:40:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 11:40:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 11:40:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 11:40:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 11:40:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e39baf0]
2021-06-29 11:40:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@83bb0f]
2021-06-29 11:40:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 11:40:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:40:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:40:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:1>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}

2021-06-29 11:40:06 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.password as password5_1_0_, user0_.username as username6_1_0_ from users user0_ where user0_.user_id=?
2021-06-29 11:40:06 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.password as password5_1_1_, user0_.username as username6_1_1_, posts1_.user_id as user_id3_0_3_, posts1_.post_id as post_id1_0_3_, posts1_.post_id as post_id1_0_0_, posts1_.content as content2_0_0_, posts1_.user_id as user_id3_0_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 11:40:06 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.password as password5_1_1_, user0_.username as username6_1_1_, posts1_.user_id as user_id3_0_3_, posts1_.post_id as post_id1_0_3_, posts1_.post_id as post_id1_0_0_, posts1_.content as content2_0_0_, posts1_.user_id as user_id3_0_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 11:40:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@654e6a90]
2021-06-29 11:40:06 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14168e1]
2021-06-29 11:40:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:40:06 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:40:06 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-06-29 11:40:06 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:40:06 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:40:06 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_0_1_}

2021-06-29 11:40:06 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_0_0_, posts0_.post_id as post_id1_0_0_, posts0_.post_id as post_id1_0_1_, posts0_.content as content2_0_1_, posts0_.user_id as user_id3_0_1_ from posts posts0_ where posts0_.user_id=?
2021-06-29 11:40:06 DEBUG SQL:94 - alter table if exists posts drop constraint if exists FK5lidm6cqbc7u4xhqpxm898qme
2021-06-29 11:40:06 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@f2276c9] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 11:40:06 DEBUG SQL:94 - drop table if exists posts cascade
2021-06-29 11:40:06 DEBUG SQL:94 - drop table if exists users cascade
2021-06-29 11:40:06 DEBUG SQL:94 - drop sequence if exists hibernate_sequence
2021-06-29 11:40:06 DEBUG SQL:94 - create sequence hibernate_sequence start 1 increment 1
2021-06-29 11:40:06 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@52d3fafd] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 11:40:06 DEBUG SQL:94 - create table posts (post_id int4 not null, content varchar(255), user_id int4, primary key (post_id))
2021-06-29 11:40:06 DEBUG SQL:94 - create table users (user_id int4 not null, email varchar(255) not null, first_name varchar(255) not null, last_name varchar(255) not null, password varchar(255) not null, username varchar(255) not null, primary key (user_id))
2021-06-29 11:40:06 DEBUG SQL:94 - alter table if exists users add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
2021-06-29 11:40:06 DEBUG SQL:94 - alter table if exists users add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username)
2021-06-29 11:40:06 DEBUG SQL:94 - alter table if exists posts add constraint FK5lidm6cqbc7u4xhqpxm898qme foreign key (user_id) references users
2021-06-29 11:40:06 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-06-29 11:40:06 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-06-29 11:40:06 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 11:40:06 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 11:40:06 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-06-29 11:40:06 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-06-29 11:40:06 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5a08b084
2021-06-29 11:40:06 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 8584f0e1-0279-4101-871b-74f667570bbb (<unnamed>)
2021-06-29 11:40:06 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-06-29 11:40:06 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-06-29 11:40:06 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-06-29 11:40:06 DEBUG TransactionImpl:84 - begin
2021-06-29 11:40:06 DEBUG SQL:94 - select nextval ('hibernate_sequence')
2021-06-29 11:40:07 DEBUG SequenceStructure:101 - Sequence value obtained: 1
2021-06-29 11:40:07 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-06-29 11:40:07 DEBUG AbstractSaveEventListener:132 - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2021-06-29 11:40:07 DEBUG TransactionImpl:101 - committing
2021-06-29 11:40:07 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-06-29 11:40:07 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-06-29 11:40:07 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [<unreferenced>] (initialized)
2021-06-29 11:40:07 DEBUG AbstractFlushingEventListener:115 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2021-06-29 11:40:07 DEBUG AbstractFlushingEventListener:122 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2021-06-29 11:40:07 DEBUG EntityPrinter:110 - Listing entities:
2021-06-29 11:40:07 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, id=1, posts=[], email=rick@email.com, username=RickSanchez8922}
2021-06-29 11:40:07 DEBUG SQL:94 - insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 11:40:07 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:40:07 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:40:07 DEBUG TransactionImpl:84 - begin
2021-06-29 11:40:07 DEBUG SQL:94 - select nextval ('hibernate_sequence')
2021-06-29 11:40:07 DEBUG SequenceStructure:101 - Sequence value obtained: 2
2021-06-29 11:40:07 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-06-29 11:40:07 DEBUG AbstractSaveEventListener:132 - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2021-06-29 11:40:07 DEBUG TransactionImpl:101 - committing
2021-06-29 11:40:07 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-06-29 11:40:07 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-06-29 11:40:07 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [com.example.models.User.posts#1] (initialized)
2021-06-29 11:40:07 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#2], was: [<unreferenced>] (initialized)
2021-06-29 11:40:07 DEBUG AbstractFlushingEventListener:115 - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2021-06-29 11:40:07 DEBUG AbstractFlushingEventListener:122 - Flushed: 1 (re)creations, 0 updates, 0 removals to 2 collections
2021-06-29 11:40:07 DEBUG EntityPrinter:110 - Listing entities:
2021-06-29 11:40:07 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, id=1, posts=[], email=rick@email.com, username=RickSanchez8922}
2021-06-29 11:40:07 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Morty, lastName=Smith, password=password, id=2, posts=[], email=morty@email.com, username=MortySmith4423}
2021-06-29 11:40:07 DEBUG SQL:94 - insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 11:40:07 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:40:07 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:40:07 WARN  deprecation:1914 - HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead
2021-06-29 11:40:07 DEBUG SQL:94 - select this_.user_id as user_id1_1_0_, this_.email as email2_1_0_, this_.first_name as first_na3_1_0_, this_.last_name as last_nam4_1_0_, this_.password as password5_1_0_, this_.username as username6_1_0_ from users this_ where this_.username like ?
2021-06-29 11:40:07 DEBUG Loader:384 - Result set row: 0
2021-06-29 11:40:07 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#1]
2021-06-29 11:40:07 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:40:07 DEBUG TransactionImpl:84 - begin
2021-06-29 11:40:07 DEBUG TransactionImpl:101 - committing
2021-06-29 11:40:07 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-06-29 11:40:07 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-06-29 11:40:07 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [com.example.models.User.posts#1] (initialized)
2021-06-29 11:40:07 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#2], was: [com.example.models.User.posts#2] (initialized)
2021-06-29 11:40:07 DEBUG AbstractFlushingEventListener:115 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-06-29 11:40:07 DEBUG AbstractFlushingEventListener:122 - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2021-06-29 11:40:07 DEBUG EntityPrinter:110 - Listing entities:
2021-06-29 11:40:07 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, id=1, posts=[], email=rick@email.com, username=RickSanchez8922}
2021-06-29 11:40:07 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Morty, lastName=Smith, password=password, id=2, posts=[], email=morty@email.com, username=MortySmith4423}
2021-06-29 11:40:07 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:40:07 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:40:07 DEBUG SQL:94 - select * from users
2021-06-29 11:40:07 DEBUG Loader:384 - Result set row: 0
2021-06-29 11:40:07 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#1]
2021-06-29 11:40:07 DEBUG Loader:384 - Result set row: 1
2021-06-29 11:40:07 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#2]
2021-06-29 11:40:07 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:40:07 DEBUG TransactionImpl:84 - begin
2021-06-29 11:40:07 DEBUG TransactionImpl:101 - committing
2021-06-29 11:40:07 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-06-29 11:40:07 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-06-29 11:40:07 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [com.example.models.User.posts#1] (initialized)
2021-06-29 11:40:07 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#2], was: [com.example.models.User.posts#2] (initialized)
2021-06-29 11:40:07 DEBUG AbstractFlushingEventListener:115 - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
2021-06-29 11:40:07 DEBUG AbstractFlushingEventListener:122 - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2021-06-29 11:40:07 DEBUG EntityPrinter:110 - Listing entities:
2021-06-29 11:40:07 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, id=1, posts=[], email=rick@email.com, username=RickSanchez8922}
2021-06-29 11:40:07 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Morty, lastName=Smith, password=password, id=2, posts=[], email=mortysemail@email.com, username=MortySmith4423}
2021-06-29 11:40:07 DEBUG SQL:94 - update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-06-29 11:40:07 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:40:07 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:40:07 WARN  deprecation:1914 - HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead
2021-06-29 11:40:07 DEBUG SQL:94 - select this_.user_id as user_id1_1_0_, this_.email as email2_1_0_, this_.first_name as first_na3_1_0_, this_.last_name as last_nam4_1_0_, this_.password as password5_1_0_, this_.username as username6_1_0_ from users this_ where this_.username like ?
2021-06-29 11:40:07 DEBUG Loader:384 - Result set row: 0
2021-06-29 11:40:07 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#2]
2021-06-29 11:40:07 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:40:07 DEBUG TransactionImpl:84 - begin
2021-06-29 11:40:07 DEBUG TransactionImpl:101 - committing
2021-06-29 11:40:07 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-06-29 11:40:07 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-06-29 11:40:07 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#2], was: [com.example.models.User.posts#2] (initialized)
2021-06-29 11:40:07 DEBUG Collections:61 - Collection dereferenced: [com.example.models.User.posts#1]
2021-06-29 11:40:07 DEBUG AbstractFlushingEventListener:115 - Flushed: 0 insertions, 0 updates, 1 deletions to 2 objects
2021-06-29 11:40:07 DEBUG AbstractFlushingEventListener:122 - Flushed: 0 (re)creations, 0 updates, 1 removals to 2 collections
2021-06-29 11:40:07 DEBUG EntityPrinter:110 - Listing entities:
2021-06-29 11:40:07 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, id=1, posts=[], email=rick@email.com, username=RickSanchez8922}
2021-06-29 11:40:07 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Morty, lastName=Smith, password=password, id=2, posts=[], email=mortysemail@email.com, username=MortySmith4423}
2021-06-29 11:40:07 DEBUG SQL:94 - delete from users where user_id=?
2021-06-29 11:40:07 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:40:07 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:40:07 DEBUG SQL:94 - select * from users
2021-06-29 11:40:07 DEBUG Loader:384 - Result set row: 0
2021-06-29 11:40:07 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#2]
2021-06-29 11:40:07 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:40:07 DEBUG JdbcCoordinatorImpl:183 - HHH000420: Closing un-released batch
2021-06-29 11:40:07 DEBUG SessionFactoryImpl:792 - HHH000031: Closing
2021-06-29 11:40:07 DEBUG TypeConfiguration$Scope:350 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7d3691e1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@f88bfbe]
2021-06-29 11:40:07 DEBUG AbstractServiceRegistryImpl:418 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2021-06-29 11:40:07 INFO  pooling:408 - HHH10001008: Cleaning up connection pool [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-29 11:40:07 DEBUG BootstrapServiceRegistryImpl:295 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2021-06-29 11:46:18 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 11:46:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-06-29 11:46:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-06-29 11:46:18 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-06-29 11:46:18 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-06-29 11:46:18 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-06-29 11:46:18 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-06-29 11:46:18 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-06-29 11:46:18 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-06-29 11:46:18 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-06-29 11:46:18 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-06-29 11:46:18 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-06-29 11:46:18 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-06-29 11:46:18 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-06-29 11:46:18 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7bc10d84
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7bc10d84
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7bc10d84
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@73ff4fae
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2611b9a3
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f446bef
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@458342d3
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@458342d3
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@458342d3
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@36676c1a
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@36676c1a
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@36676c1a
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@293d0107
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@293d0107
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@293d0107
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@55e8ec2f
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@55e8ec2f
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@55e8ec2f
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@4c51bb7
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@4c51bb7
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c51bb7
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7d3430a7
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@7d3430a7
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7d3430a7
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5536379e
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5536379e
2021-06-29 11:46:18 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5536379e
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2b491fee
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2b491fee
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@58e6d4b8
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@58e6d4b8
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@51850751
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@51850751
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@e260766
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7c56e013
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@34a1d21f
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@34a1d21f
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@2cb3d0f7
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2cb3d0f7
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@4ae33a11
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4ae33a11
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a3591c5
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a3591c5
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@482d776b
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@482d776b
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7a7471ce
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7a7471ce
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63648ee9
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@63648ee9
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@24faea88
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@24faea88
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76ba13c
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@76ba13c
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@7e242b4d
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7e242b4d
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@1536602f
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1536602f
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@c7a975a
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@c7a975a
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@c7a975a
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3c0fae6c
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@6326d182
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6326d182
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6326d182
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e809b79
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@55795845
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@55795845
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@6175619b
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6175619b
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2cf92cc7
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2cf92cc7
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@5d465e4b
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5d465e4b
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@78aea4b9
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@78aea4b9
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4215838f
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@3e2943ab
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@3e2943ab
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@3e2943ab
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2c9399a4
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2c9399a4
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2c9399a4
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@172ca72b
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@5e8f9e2d
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@60fa3495
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@60fa3495
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@60fa3495
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5fcacc0
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5fcacc0
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5fcacc0
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@6865c751
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@5b6813df
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@35fe2125
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@35fe2125
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@60b71e8f
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@5fd62371
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5fd62371
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@1568159
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@1568159
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@f9879ac
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@224b4d61
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3f23a3a0
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@72ccd81a
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@72ccd81a
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5d25e6bb
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ce5a68e
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@9d157ff
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2f162cc0
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5df417a7
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7c041b41
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f69d591
2021-06-29 11:46:19 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@61078690
2021-06-29 11:46:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-06-29 11:46:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-06-29 11:46:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 11:46:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 11:46:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-06-29 11:46:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-06-29 11:46:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-06-29 11:46:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 11:46:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-06-29 11:46:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-06-29 11:46:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-06-29 11:46:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-06-29 11:46:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 11:46:19 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-06-29 11:46:19 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-06-29 11:46:19 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-29 11:46:19 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, user=social}
2021-06-29 11:46:19 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-06-29 11:46:19 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-06-29 11:46:19 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-06-29 11:46:20 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-06-29 11:46:20 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL Native Driver
    version : PostgreSQL 9.0 JDBC4 (build 801)
      major : 9
      minor : 0
2021-06-29 11:46:20 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.0
2021-06-29 11:46:20 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-06-29 11:46:20 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-06-29 11:46:37 DEBUG DefaultSchemaNameResolver:53 - Unable to use Java 1.7 Connection#getSchema
2021-06-29 11:46:37 DEBUG JdbcEnvironmentImpl:314 - Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.PostgreSQL10Dialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:311)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:266)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:175)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:118)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.build(MetadataBuildingProcess.java:83)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:473)
	at org.hibernate.boot.internal.MetadataBuilderImpl.build(MetadataBuilderImpl.java:84)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:689)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:724)
	at com.example.utils.HibernateUtil.<clinit>(HibernateUtil.java:11)
	at com.example.dao.UserDaoHibernate.createUser(UserDaoHibernate.java:39)
	at SocialHubDriver.main(SocialHubDriver.java:31)
2021-06-29 11:46:37 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-06-29 11:46:37 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6edc4161
2021-06-29 11:46:37 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@6edc4161
2021-06-29 11:46:37 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@78aea4b9
2021-06-29 11:46:37 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@703feacd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7051777c]
2021-06-29 11:46:37 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-06-29 11:46:37 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 11:46:37 DEBUG EntityBinder:430 - Import with entity name User
2021-06-29 11:46:37 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-06-29 11:46:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-06-29 11:46:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-06-29 11:46:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-06-29 11:46:37 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-06-29 11:46:37 DEBUG PropertyBinder:266 - Building property id
2021-06-29 11:46:37 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 11:46:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-06-29 11:46:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-06-29 11:46:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-06-29 11:46:37 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-06-29 11:46:37 DEBUG PropertyBinder:266 - Building property email
2021-06-29 11:46:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-06-29 11:46:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-06-29 11:46:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-06-29 11:46:37 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-06-29 11:46:37 DEBUG PropertyBinder:266 - Building property firstName
2021-06-29 11:46:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-06-29 11:46:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-06-29 11:46:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-06-29 11:46:37 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-06-29 11:46:37 DEBUG PropertyBinder:266 - Building property lastName
2021-06-29 11:46:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-06-29 11:46:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-06-29 11:46:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-06-29 11:46:37 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-06-29 11:46:37 DEBUG PropertyBinder:266 - Building property password
2021-06-29 11:46:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:46:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-06-29 11:46:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 11:46:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 11:46:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 11:46:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 11:46:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:46:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 11:46:37 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-06-29 11:46:37 DEBUG PropertyBinder:266 - Building property posts
2021-06-29 11:46:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-06-29 11:46:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-06-29 11:46:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-06-29 11:46:37 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-06-29 11:46:37 DEBUG PropertyBinder:266 - Building property username
2021-06-29 11:46:37 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-06-29 11:46:37 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 11:46:37 DEBUG EntityBinder:430 - Import with entity name Post
2021-06-29 11:46:37 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-06-29 11:46:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-06-29 11:46:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-06-29 11:46:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-06-29 11:46:37 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-06-29 11:46:37 DEBUG PropertyBinder:266 - Building property postId
2021-06-29 11:46:37 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 11:46:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-06-29 11:46:37 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-06-29 11:46:37 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-06-29 11:46:37 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-06-29 11:46:37 DEBUG PropertyBinder:266 - Building property postContent
2021-06-29 11:46:37 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 11:46:37 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-06-29 11:46:37 DEBUG PropertyBinder:266 - Building property user
2021-06-29 11:46:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-06-29 11:46:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-06-29 11:46:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-06-29 11:46:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-06-29 11:46:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-06-29 11:46:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-06-29 11:46:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-06-29 11:46:37 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-06-29 11:46:37 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-06-29 11:46:37 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-06-29 11:46:37 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-06-29 11:46:37 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-06-29 11:46:37 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-06-29 11:46:37 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-06-29 11:46:37 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-06-29 11:46:37 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 11:46:37 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 11:46:37 DEBUG SessionFactoryImpl:196 - Building session factory
2021-06-29 11:46:37 DEBUG Settings:70 - SessionFactory name : null
2021-06-29 11:46:37 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-06-29 11:46:37 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-06-29 11:46:37 DEBUG Settings:74 - Statistics: disabled
2021-06-29 11:46:37 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-06-29 11:46:37 DEBUG Settings:77 - Default entity-mode: pojo
2021-06-29 11:46:37 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-06-29 11:46:37 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-06-29 11:46:37 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-06-29 11:46:37 DEBUG Settings:82 - Default batch fetch size: -1
2021-06-29 11:46:37 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-06-29 11:46:37 DEBUG Settings:84 - Default null ordering: NONE
2021-06-29 11:46:37 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-06-29 11:46:37 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-06-29 11:46:37 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-06-29 11:46:37 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-06-29 11:46:37 DEBUG Settings:92 - Query language substitutions: {}
2021-06-29 11:46:37 DEBUG Settings:93 - Named query checking : enabled
2021-06-29 11:46:37 DEBUG Settings:95 - Second-level cache: disabled
2021-06-29 11:46:37 DEBUG Settings:96 - Second-level query cache: disabled
2021-06-29 11:46:37 DEBUG Settings:97 - Second-level query cache factory: null
2021-06-29 11:46:37 DEBUG Settings:98 - Second-level cache region prefix: null
2021-06-29 11:46:37 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-06-29 11:46:37 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-06-29 11:46:37 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-06-29 11:46:37 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-06-29 11:46:37 DEBUG Settings:104 - JDBC batch size: 15
2021-06-29 11:46:37 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-06-29 11:46:37 DEBUG Settings:106 - Scrollable result sets: enabled
2021-06-29 11:46:37 DEBUG Settings:107 - Wrap result sets: disabled
2021-06-29 11:46:37 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): disabled
2021-06-29 11:46:37 DEBUG Settings:109 - JDBC result set fetch size: null
2021-06-29 11:46:37 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-06-29 11:46:37 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-06-29 11:46:37 DEBUG Settings:113 - JPA compliance - query : 
2021-06-29 11:46:37 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-06-29 11:46:37 DEBUG Settings:115 - JPA compliance - lists : 
2021-06-29 11:46:37 DEBUG Settings:116 - JPA compliance - transactions : 
2021-06-29 11:46:37 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-06-29 11:46:37 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\Documents\Revtature\SocialHubWeek4\target\classes;C:\Program Files\apache-tomcat-9.0.43\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.43\lib\ecj-4.18.jar;C:\Program Files\apache-tomcat-9.0.43\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.43\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\postgresql\postgresql\9.1-901.jdbc4\postgresql-9.1-901.jdbc4.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin, sun.java.command=SocialHubDriver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=15.0.1, user.dir=D:\Documents\Revtature\SocialHubWeek4, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@1846579f, java.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Java\jdk1.8.0_281;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\WorldPainter;C:\Program Files\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\OpenSSL-Win64\bin\;C:\Program Files\apache-maven-3.6.3\bin;C:\Program Files\nodejs\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Java\jdk1.8.0_281\bin;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\MongoDB;C:\Program Files\apache-maven-3.6.3\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Users\Ethan\AppData\Local\GitHubDesktop\bin;C:\Program Files\sts-4.9.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=59.0}
2021-06-29 11:46:37 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-06-29 11:46:37 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-06-29 11:46:37 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-06-29 11:46:37 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-06-29 11:46:37 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-06-29 11:46:37 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-06-29 11:46:37 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-06-29 11:46:38 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-06-29 11:46:38 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-06-29 11:46:38 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-06-29 11:46:38 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-06-29 11:46:38 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-06-29 11:46:38 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-06-29 11:46:38 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:46:38 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:46:38 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:46:38 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:46:38 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-06-29 11:46:38 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-06-29 11:46:38 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@703feacd] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@59bbe88a]
2021-06-29 11:46:38 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:46:38 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:46:38 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 11:46:38 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 11:46:38 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:46:38 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:46:38 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 11:46:38 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 11:46:38 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-06-29 11:46:38 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-06-29 11:46:38 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-06-29 11:46:38 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-06-29 11:46:38 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-06-29 11:46:38 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-06-29 11:46:38 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-06-29 11:46:38 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_0_, post_.user_id as user_id3_0_ from posts post_ where post_.post_id=?
2021-06-29 11:46:38 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-06-29 11:46:38 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-06-29 11:46:38 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-06-29 11:46:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@839df62]
2021-06-29 11:46:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:46:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:46:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b2e5c0d]
2021-06-29 11:46:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:46:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:46:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:1>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}

2021-06-29 11:46:38 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_0_0_, post0_.content as content2_0_0_, post0_.user_id as user_id3_0_0_ from posts post0_ where post0_.post_id=?
2021-06-29 11:46:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f7eee96]
2021-06-29 11:46:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:46:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:46:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f0d09c]
2021-06-29 11:46:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:46:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:46:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:1>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}

2021-06-29 11:46:38 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_0_0_, post0_.content as content2_0_0_, post0_.user_id as user_id3_0_0_ from posts post0_ where post0_.post_id=?
2021-06-29 11:46:38 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_0_1_, post0_.content as content2_0_1_, post0_.user_id as user_id3_0_1_, user1_.user_id as user_id1_1_0_, user1_.email as email2_1_0_, user1_.first_name as first_na3_1_0_, user1_.last_name as last_nam4_1_0_, user1_.password as password5_1_0_, user1_.username as username6_1_0_ from posts post0_ left outer join users user1_ on post0_.user_id=user1_.user_id where post0_.post_id=?
2021-06-29 11:46:38 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_0_1_, post0_.content as content2_0_1_, post0_.user_id as user_id3_0_1_, user1_.user_id as user_id1_1_0_, user1_.email as email2_1_0_, user1_.first_name as first_na3_1_0_, user1_.last_name as last_nam4_1_0_, user1_.password as password5_1_0_, user1_.username as username6_1_0_ from posts post0_ left outer join users user1_ on post0_.user_id=user1_.user_id where post0_.post_id=?
2021-06-29 11:46:38 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-06-29 11:46:38 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-06-29 11:46:38 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_1_, user_.first_name as first_na3_1_, user_.last_name as last_nam4_1_, user_.password as password5_1_, user_.username as username6_1_ from users user_ where user_.user_id=?
2021-06-29 11:46:38 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 11:46:38 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-06-29 11:46:38 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-06-29 11:46:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cc65c2]
2021-06-29 11:46:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 11:46:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 11:46:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 11:46:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 11:46:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 11:46:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5eb5da12]
2021-06-29 11:46:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6418e39e]
2021-06-29 11:46:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 11:46:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:46:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:46:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:1>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}

2021-06-29 11:46:38 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.password as password5_1_0_, user0_.username as username6_1_0_ from users user0_ where user0_.user_id=?
2021-06-29 11:46:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2accaec2]
2021-06-29 11:46:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 11:46:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 11:46:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 11:46:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 11:46:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 11:46:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@83bb0f]
2021-06-29 11:46:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a94b55]
2021-06-29 11:46:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 11:46:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:46:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:46:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:1>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_1_0_}

2021-06-29 11:46:38 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_1_0_, user0_.email as email2_1_0_, user0_.first_name as first_na3_1_0_, user0_.last_name as last_nam4_1_0_, user0_.password as password5_1_0_, user0_.username as username6_1_0_ from users user0_ where user0_.user_id=?
2021-06-29 11:46:38 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.password as password5_1_1_, user0_.username as username6_1_1_, posts1_.user_id as user_id3_0_3_, posts1_.post_id as post_id1_0_3_, posts1_.post_id as post_id1_0_0_, posts1_.content as content2_0_0_, posts1_.user_id as user_id3_0_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 11:46:38 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_1_1_, user0_.email as email2_1_1_, user0_.first_name as first_na3_1_1_, user0_.last_name as last_nam4_1_1_, user0_.password as password5_1_1_, user0_.username as username6_1_1_, posts1_.user_id as user_id3_0_3_, posts1_.post_id as post_id1_0_3_, posts1_.post_id as post_id1_0_0_, posts1_.content as content2_0_0_, posts1_.user_id as user_id3_0_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 11:46:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14168e1]
2021-06-29 11:46:38 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16a5c7e4]
2021-06-29 11:46:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 11:46:38 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 11:46:38 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-06-29 11:46:38 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 11:46:38 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 11:46:38 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_0_1_}

2021-06-29 11:46:38 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_0_0_, posts0_.post_id as post_id1_0_0_, posts0_.post_id as post_id1_0_1_, posts0_.content as content2_0_1_, posts0_.user_id as user_id3_0_1_ from posts posts0_ where posts0_.user_id=?
2021-06-29 11:46:38 DEBUG SQL:94 - 
    
    alter table if exists posts 
       drop constraint if exists FK5lidm6cqbc7u4xhqpxm898qme
2021-06-29 11:46:38 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@12d2ddde] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 11:46:38 DEBUG SQL:94 - 
    
    drop table if exists posts cascade
2021-06-29 11:46:38 DEBUG SQL:94 - 
    
    drop table if exists users cascade
2021-06-29 11:46:38 DEBUG SQL:94 - 
    
    drop sequence if exists hibernate_sequence
2021-06-29 11:46:38 DEBUG SQL:94 - create sequence hibernate_sequence start 1 increment 1
2021-06-29 11:46:38 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7f0b93b4] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 11:46:38 DEBUG SQL:94 - 
    
    create table posts (
       post_id int4 not null,
        content varchar(255),
        user_id int4,
        primary key (post_id)
    )
2021-06-29 11:46:38 DEBUG SQL:94 - 
    
    create table users (
       user_id int4 not null,
        email varchar(255) not null,
        first_name varchar(255) not null,
        last_name varchar(255) not null,
        password varchar(255) not null,
        username varchar(255) not null,
        primary key (user_id)
    )
2021-06-29 11:46:38 DEBUG SQL:94 - 
    
    alter table if exists users 
       add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
2021-06-29 11:46:38 DEBUG SQL:94 - 
    
    alter table if exists users 
       add constraint UK_r43af9ap4edm43mmtq01oddj6 unique (username)
2021-06-29 11:46:38 DEBUG SQL:94 - 
    
    alter table if exists posts 
       add constraint FK5lidm6cqbc7u4xhqpxm898qme 
       foreign key (user_id) 
       references users
2021-06-29 11:46:38 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-06-29 11:46:38 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-06-29 11:46:38 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 11:46:38 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 11:46:38 DEBUG NamedQueryRepository:151 - Checking 0 named HQL queries
2021-06-29 11:46:38 DEBUG NamedQueryRepository:167 - Checking 0 named SQL queries
2021-06-29 11:46:38 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@235c997d
2021-06-29 11:46:38 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: fcf9564f-f88a-4104-9674-f59f44bc562d (<unnamed>)
2021-06-29 11:46:38 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-06-29 11:46:38 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-06-29 11:46:38 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-06-29 11:46:38 DEBUG TransactionImpl:84 - begin
2021-06-29 11:46:38 DEBUG SQL:94 - 
    select
        nextval ('hibernate_sequence')
2021-06-29 11:46:38 DEBUG SequenceStructure:101 - Sequence value obtained: 1
2021-06-29 11:46:38 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-06-29 11:46:38 DEBUG AbstractSaveEventListener:132 - Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2021-06-29 11:46:38 DEBUG TransactionImpl:101 - committing
2021-06-29 11:46:38 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-06-29 11:46:38 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-06-29 11:46:38 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [<unreferenced>] (initialized)
2021-06-29 11:46:38 DEBUG AbstractFlushingEventListener:115 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2021-06-29 11:46:38 DEBUG AbstractFlushingEventListener:122 - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
2021-06-29 11:46:38 DEBUG EntityPrinter:110 - Listing entities:
2021-06-29 11:46:38 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, id=1, posts=[], email=rick@email.com, username=RickSanchez7209}
2021-06-29 11:46:38 DEBUG SQL:94 - 
    insert 
    into
        users
        (email, first_name, last_name, password, username, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
2021-06-29 11:46:38 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:46:38 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:46:38 DEBUG TransactionImpl:84 - begin
2021-06-29 11:46:38 DEBUG SQL:94 - 
    select
        nextval ('hibernate_sequence')
2021-06-29 11:46:38 DEBUG SequenceStructure:101 - Sequence value obtained: 2
2021-06-29 11:46:38 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-06-29 11:46:38 DEBUG AbstractSaveEventListener:132 - Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2021-06-29 11:46:38 DEBUG TransactionImpl:101 - committing
2021-06-29 11:46:38 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-06-29 11:46:38 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-06-29 11:46:38 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [com.example.models.User.posts#1] (initialized)
2021-06-29 11:46:38 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#2], was: [<unreferenced>] (initialized)
2021-06-29 11:46:38 DEBUG AbstractFlushingEventListener:115 - Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
2021-06-29 11:46:38 DEBUG AbstractFlushingEventListener:122 - Flushed: 1 (re)creations, 0 updates, 0 removals to 2 collections
2021-06-29 11:46:38 DEBUG EntityPrinter:110 - Listing entities:
2021-06-29 11:46:38 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, id=1, posts=[], email=rick@email.com, username=RickSanchez7209}
2021-06-29 11:46:38 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Morty, lastName=Smith, password=password, id=2, posts=[], email=morty@email.com, username=MortySmith4484}
2021-06-29 11:46:38 DEBUG SQL:94 - 
    insert 
    into
        users
        (email, first_name, last_name, password, username, user_id) 
    values
        (?, ?, ?, ?, ?, ?)
2021-06-29 11:46:38 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:46:38 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:46:38 WARN  deprecation:1914 - HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead
2021-06-29 11:46:39 DEBUG SQL:94 - 
    select
        this_.user_id as user_id1_1_0_,
        this_.email as email2_1_0_,
        this_.first_name as first_na3_1_0_,
        this_.last_name as last_nam4_1_0_,
        this_.password as password5_1_0_,
        this_.username as username6_1_0_ 
    from
        users this_ 
    where
        this_.username like ?
2021-06-29 11:46:39 DEBUG Loader:384 - Result set row: 0
2021-06-29 11:46:39 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#1]
2021-06-29 11:46:39 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:46:39 DEBUG TransactionImpl:84 - begin
2021-06-29 11:46:39 DEBUG TransactionImpl:101 - committing
2021-06-29 11:46:39 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-06-29 11:46:39 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-06-29 11:46:39 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [com.example.models.User.posts#1] (initialized)
2021-06-29 11:46:39 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#2], was: [com.example.models.User.posts#2] (initialized)
2021-06-29 11:46:39 DEBUG AbstractFlushingEventListener:115 - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2021-06-29 11:46:39 DEBUG AbstractFlushingEventListener:122 - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2021-06-29 11:46:39 DEBUG EntityPrinter:110 - Listing entities:
2021-06-29 11:46:39 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, id=1, posts=[], email=rick@email.com, username=RickSanchez7209}
2021-06-29 11:46:39 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Morty, lastName=Smith, password=password, id=2, posts=[], email=morty@email.com, username=MortySmith4484}
2021-06-29 11:46:39 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:46:39 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:46:39 DEBUG SQL:94 - 
    select
        * 
    from
        users
2021-06-29 11:46:39 DEBUG Loader:384 - Result set row: 0
2021-06-29 11:46:39 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#1]
2021-06-29 11:46:39 DEBUG Loader:384 - Result set row: 1
2021-06-29 11:46:39 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#2]
2021-06-29 11:46:39 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:46:39 DEBUG TransactionImpl:84 - begin
2021-06-29 11:46:39 DEBUG TransactionImpl:101 - committing
2021-06-29 11:46:39 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-06-29 11:46:39 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-06-29 11:46:39 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#1], was: [com.example.models.User.posts#1] (initialized)
2021-06-29 11:46:39 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#2], was: [com.example.models.User.posts#2] (initialized)
2021-06-29 11:46:39 DEBUG AbstractFlushingEventListener:115 - Flushed: 0 insertions, 1 updates, 0 deletions to 2 objects
2021-06-29 11:46:39 DEBUG AbstractFlushingEventListener:122 - Flushed: 0 (re)creations, 0 updates, 0 removals to 2 collections
2021-06-29 11:46:39 DEBUG EntityPrinter:110 - Listing entities:
2021-06-29 11:46:39 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, id=1, posts=[], email=rick@email.com, username=RickSanchez7209}
2021-06-29 11:46:39 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Morty, lastName=Smith, password=password, id=2, posts=[], email=mortysemail@email.com, username=MortySmith4484}
2021-06-29 11:46:39 DEBUG SQL:94 - 
    update
        users 
    set
        email=?,
        first_name=?,
        last_name=?,
        password=?,
        username=? 
    where
        user_id=?
2021-06-29 11:46:39 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:46:39 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:46:39 WARN  deprecation:1914 - HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead
2021-06-29 11:46:39 DEBUG SQL:94 - 
    select
        this_.user_id as user_id1_1_0_,
        this_.email as email2_1_0_,
        this_.first_name as first_na3_1_0_,
        this_.last_name as last_nam4_1_0_,
        this_.password as password5_1_0_,
        this_.username as username6_1_0_ 
    from
        users this_ 
    where
        this_.username like ?
2021-06-29 11:46:39 DEBUG Loader:384 - Result set row: 0
2021-06-29 11:46:39 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#2]
2021-06-29 11:46:39 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:46:39 DEBUG TransactionImpl:84 - begin
2021-06-29 11:46:39 DEBUG TransactionImpl:101 - committing
2021-06-29 11:46:39 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-06-29 11:46:39 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-06-29 11:46:39 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#2], was: [com.example.models.User.posts#2] (initialized)
2021-06-29 11:46:39 DEBUG Collections:61 - Collection dereferenced: [com.example.models.User.posts#1]
2021-06-29 11:46:39 DEBUG AbstractFlushingEventListener:115 - Flushed: 0 insertions, 0 updates, 1 deletions to 2 objects
2021-06-29 11:46:39 DEBUG AbstractFlushingEventListener:122 - Flushed: 0 (re)creations, 0 updates, 1 removals to 2 collections
2021-06-29 11:46:39 DEBUG EntityPrinter:110 - Listing entities:
2021-06-29 11:46:39 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Rick, lastName=Sanchez, password=password, id=1, posts=[], email=rick@email.com, username=RickSanchez7209}
2021-06-29 11:46:39 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Morty, lastName=Smith, password=password, id=2, posts=[], email=mortysemail@email.com, username=MortySmith4484}
2021-06-29 11:46:39 DEBUG SQL:94 - 
    delete 
    from
        users 
    where
        user_id=?
2021-06-29 11:46:39 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:46:39 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:46:39 DEBUG SQL:94 - 
    select
        * 
    from
        users
2021-06-29 11:46:39 DEBUG Loader:384 - Result set row: 0
2021-06-29 11:46:39 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#2]
2021-06-29 11:46:39 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 11:46:39 DEBUG JdbcCoordinatorImpl:183 - HHH000420: Closing un-released batch
2021-06-29 11:46:39 DEBUG SessionFactoryImpl:792 - HHH000031: Closing
2021-06-29 11:46:39 DEBUG TypeConfiguration$Scope:350 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@7558c24b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@59bbe88a]
2021-06-29 11:46:39 DEBUG AbstractServiceRegistryImpl:418 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2021-06-29 11:46:39 INFO  pooling:408 - HHH10001008: Cleaning up connection pool [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-29 11:46:39 DEBUG BootstrapServiceRegistryImpl:295 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2021-06-29 11:47:51 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 11:48:54 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 11:50:36 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 13:21:45 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 13:23:17 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 13:27:21 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 13:40:23 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 13:42:04 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 13:44:02 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 13:45:12 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 14:25:12 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 14:27:06 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 14:31:55 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 14:35:12 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 14:38:04 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 14:43:05 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 14:44:32 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 14:45:39 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 14:49:04 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 15:22:29 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 15:23:44 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 15:45:52 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 15:45:52 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-06-29 15:45:52 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-06-29 15:45:52 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-06-29 15:45:52 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-06-29 15:45:52 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-06-29 15:45:52 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-06-29 15:45:52 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-06-29 15:45:52 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-06-29 15:45:53 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-06-29 15:45:53 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-06-29 15:45:53 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-06-29 15:45:53 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-06-29 15:45:53 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-06-29 15:45:53 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5778826f
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61bcd567
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1252b961
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@28d6290
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@28d6290
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77602954
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77602954
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7adf16aa
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71ae31b0
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@6a66a204
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6a66a204
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@7e3f95fe
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e3f95fe
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@107ed6fc
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@107ed6fc
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@297ea53a
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@297ea53a
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3efe7086
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3efe7086
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7651218e
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7651218e
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7813cb11
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7813cb11
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3faf2e7d
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3faf2e7d
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68759011
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68759011
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@2a1edad4
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2a1edad4
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@757d6814
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@757d6814
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@716a7124
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1a1da881
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@3f2ef586
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3f2ef586
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4e76dac
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e76dac
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d8bbcdc
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d8bbcdc
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@4f936da8
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4f936da8
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a9f80d3
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@4602c2a9
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@29a60c27
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5f3b9c57
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@35fe2125
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@47da3952
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@47da3952
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5fd62371
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@1568159
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1568159
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@303e3593
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@303e3593
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5c48c0c0
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3f23a3a0
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3a4e343
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@7f69d591
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f69d591
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@71c5b236
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2cab9998
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2f7a7219
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@669513d8
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3a1d593e
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a8a60bc
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@361c294e
2021-06-29 15:45:53 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7859e786
2021-06-29 15:45:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-06-29 15:45:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-06-29 15:45:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 15:45:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 15:45:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-06-29 15:45:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-06-29 15:45:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-06-29 15:45:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 15:45:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-06-29 15:45:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-06-29 15:45:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-06-29 15:45:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-06-29 15:45:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 15:45:53 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-06-29 15:45:53 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-06-29 15:45:53 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-29 15:45:53 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, user=social}
2021-06-29 15:45:53 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-06-29 15:45:53 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-06-29 15:45:53 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-06-29 15:45:54 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-06-29 15:45:54 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-06-29 15:45:54 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-06-29 15:45:54 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-06-29 15:45:54 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-06-29 15:45:54 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-06-29 15:45:54 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@191a709b
2021-06-29 15:45:54 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@191a709b
2021-06-29 15:45:54 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:45:54 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11de56e6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@616b241a]
2021-06-29 15:45:54 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-06-29 15:45:54 DEBUG QueryBinder:80 - Binding named query: getUsersLikedPosts => select u.likePosts from User u where u.id = :id
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 15:45:54 DEBUG EntityBinder:430 - Import with entity name User
2021-06-29 15:45:54 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-06-29 15:45:54 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-06-29 15:45:54 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-06-29 15:45:54 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-06-29 15:45:54 DEBUG PropertyBinder:266 - Building property id
2021-06-29 15:45:54 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-06-29 15:45:54 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-06-29 15:45:54 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-06-29 15:45:54 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-06-29 15:45:54 DEBUG PropertyBinder:266 - Building property email
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-06-29 15:45:54 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-06-29 15:45:54 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-06-29 15:45:54 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-06-29 15:45:54 DEBUG PropertyBinder:266 - Building property firstName
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-06-29 15:45:54 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-06-29 15:45:54 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-06-29 15:45:54 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-06-29 15:45:54 DEBUG PropertyBinder:266 - Building property lastName
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-29 15:45:54 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-06-29 15:45:54 DEBUG PropertyBinder:266 - Building property likePosts
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-06-29 15:45:54 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-06-29 15:45:54 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-06-29 15:45:54 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-06-29 15:45:54 DEBUG PropertyBinder:266 - Building property password
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:45:54 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-06-29 15:45:54 DEBUG PropertyBinder:266 - Building property posts
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-06-29 15:45:54 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-06-29 15:45:54 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-06-29 15:45:54 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-06-29 15:45:54 DEBUG PropertyBinder:266 - Building property username
2021-06-29 15:45:54 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-06-29 15:45:54 DEBUG QueryBinder:138 - Binding named native query: getUsersThatLiked => select p.users from Post p where p.post_id = :id
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 15:45:54 DEBUG EntityBinder:430 - Import with entity name Post
2021-06-29 15:45:54 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-06-29 15:45:54 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-06-29 15:45:54 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-06-29 15:45:54 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-06-29 15:45:54 DEBUG PropertyBinder:266 - Building property postId
2021-06-29 15:45:54 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 15:45:54 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-06-29 15:45:54 DEBUG PropertyBinder:266 - Building property likes
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-06-29 15:45:54 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-06-29 15:45:54 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-06-29 15:45:54 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-06-29 15:45:54 DEBUG PropertyBinder:266 - Building property postContent
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 15:45:54 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-06-29 15:45:54 DEBUG PropertyBinder:266 - Building property user
2021-06-29 15:45:54 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-06-29 15:45:54 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-06-29 15:45:54 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-06-29 15:45:54 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-06-29 15:45:54 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-06-29 15:45:54 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-06-29 15:45:54 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-06-29 15:45:54 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-06-29 15:45:54 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-06-29 15:45:54 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-06-29 15:45:54 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-06-29 15:45:54 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-06-29 15:45:54 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-29 15:45:54 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-29 15:45:54 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-06-29 15:45:54 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-06-29 15:45:54 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-06-29 15:45:54 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-06-29 15:45:54 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-06-29 15:45:54 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-06-29 15:45:54 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-06-29 15:45:54 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-06-29 15:45:54 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-06-29 15:45:54 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-06-29 15:45:54 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:45:54 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-29 15:45:54 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:45:54 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:45:54 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-29 15:45:54 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:45:54 DEBUG SessionFactoryImpl:196 - Building session factory
2021-06-29 15:45:54 DEBUG Settings:70 - SessionFactory name : null
2021-06-29 15:45:54 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-06-29 15:45:54 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-06-29 15:45:54 DEBUG Settings:74 - Statistics: disabled
2021-06-29 15:45:54 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-06-29 15:45:54 DEBUG Settings:77 - Default entity-mode: pojo
2021-06-29 15:45:54 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-06-29 15:45:54 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-06-29 15:45:54 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-06-29 15:45:54 DEBUG Settings:82 - Default batch fetch size: -1
2021-06-29 15:45:54 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-06-29 15:45:54 DEBUG Settings:84 - Default null ordering: NONE
2021-06-29 15:45:54 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-06-29 15:45:54 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-06-29 15:45:54 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-06-29 15:45:54 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-06-29 15:45:54 DEBUG Settings:92 - Query language substitutions: {}
2021-06-29 15:45:54 DEBUG Settings:93 - Named query checking : enabled
2021-06-29 15:45:54 DEBUG Settings:95 - Second-level cache: disabled
2021-06-29 15:45:54 DEBUG Settings:96 - Second-level query cache: disabled
2021-06-29 15:45:54 DEBUG Settings:97 - Second-level query cache factory: null
2021-06-29 15:45:54 DEBUG Settings:98 - Second-level cache region prefix: null
2021-06-29 15:45:54 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-06-29 15:45:54 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-06-29 15:45:54 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-06-29 15:45:54 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-06-29 15:45:54 DEBUG Settings:104 - JDBC batch size: 15
2021-06-29 15:45:54 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-06-29 15:45:54 DEBUG Settings:106 - Scrollable result sets: enabled
2021-06-29 15:45:54 DEBUG Settings:107 - Wrap result sets: disabled
2021-06-29 15:45:54 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-06-29 15:45:54 DEBUG Settings:109 - JDBC result set fetch size: null
2021-06-29 15:45:54 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-06-29 15:45:54 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-06-29 15:45:54 DEBUG Settings:113 - JPA compliance - query : 
2021-06-29 15:45:54 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-06-29 15:45:54 DEBUG Settings:115 - JPA compliance - lists : 
2021-06-29 15:45:54 DEBUG Settings:116 - JPA compliance - transactions : 
2021-06-29 15:45:54 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-06-29 15:45:54 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\Documents\Revtature\SocialHubWeek4\target\classes;C:\Program Files\apache-tomcat-9.0.43\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.43\lib\ecj-4.18.jar;C:\Program Files\apache-tomcat-9.0.43\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.43\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin, sun.java.command=SocialHubDriver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=15.0.1, user.dir=D:\Documents\Revtature\SocialHubWeek4, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@102ecc22, java.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Java\jdk1.8.0_281;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\WorldPainter;C:\Program Files\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\OpenSSL-Win64\bin\;C:\Program Files\apache-maven-3.6.3\bin;C:\Program Files\nodejs\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Java\jdk1.8.0_281\bin;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\MongoDB;C:\Program Files\apache-maven-3.6.3\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Users\Ethan\AppData\Local\GitHubDesktop\bin;C:\Program Files\sts-4.9.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=59.0}
2021-06-29 15:45:54 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-06-29 15:45:54 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-06-29 15:45:54 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-06-29 15:45:54 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-06-29 15:45:54 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-06-29 15:45:54 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-06-29 15:45:54 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-06-29 15:45:54 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-06-29 15:45:54 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-06-29 15:45:54 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-06-29 15:45:54 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-06-29 15:45:54 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-06-29 15:45:54 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-06-29 15:45:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:45:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:45:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:45:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:45:54 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-06-29 15:45:54 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-06-29 15:45:54 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11de56e6] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@76a805b7]
2021-06-29 15:45:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:45:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:45:54 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:45:54 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:45:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:45:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:45:55 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:45:55 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:45:55 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-06-29 15:45:55 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-06-29 15:45:55 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-06-29 15:45:55 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-06-29 15:45:55 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-06-29 15:45:55 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-06-29 15:45:55 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-06-29 15:45:55 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-06-29 15:45:55 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-06-29 15:45:55 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-06-29 15:45:55 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-06-29 15:45:55 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-06-29 15:45:55 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-06-29 15:45:55 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-06-29 15:45:55 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-06-29 15:45:55 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-06-29 15:45:55 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-06-29 15:45:55 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-06-29 15:45:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-06-29 15:45:55 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-06-29 15:45:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64e7d698]
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2401856]
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b44d6d0]
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a9c661]
2021-06-29 15:45:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:45:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:45:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-29 15:45:55 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ed5b321]
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7459a21e]
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7eeb38b2]
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d54d0f5]
2021-06-29 15:45:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:45:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:45:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-29 15:45:55 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-29 15:45:55 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-29 15:45:55 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-29 15:45:55 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-06-29 15:45:55 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-06-29 15:45:55 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-06-29 15:45:55 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 15:45:55 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-06-29 15:45:55 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c19592c]
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2eb60c71]
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@87d9a01]
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e5b621b]
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10177794]
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:45:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:45:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:45:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-29 15:45:55 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e5c2463]
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f7be6c8]
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@647b9364]
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b6bccb4]
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49edcb30]
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:45:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:45:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:45:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-29 15:45:55 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-29 15:45:55 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 15:45:55 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@383cb5ce]
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@798deee8]
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69aabcb0]
2021-06-29 15:45:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:45:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:45:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-29 15:45:55 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a566922]
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f7a2a5]
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65c17e38]
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e180aaf]
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-06-29 15:45:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:45:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:45:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-29 15:45:55 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34d480b9]
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b415f5f]
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@617449dd]
2021-06-29 15:45:55 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e590b]
2021-06-29 15:45:55 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:45:55 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:45:55 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:45:55 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-06-29 15:45:55 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-06-29 15:45:55 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@37af24cb] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 15:45:55 DEBUG Table:516 - No alter strings for table : post_likes_junction
2021-06-29 15:45:55 DEBUG Table:516 - No alter strings for table : posts
2021-06-29 15:45:55 DEBUG Table:516 - No alter strings for table : users
2021-06-29 15:45:55 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-06-29 15:45:55 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-06-29 15:45:55 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 15:45:55 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 15:45:55 DEBUG NamedQueryRepository:151 - Checking 1 named HQL queries
2021-06-29 15:45:55 DEBUG NamedQueryRepository:155 - Checking named query: getUsersLikedPosts
2021-06-29 15:45:55 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-06-29 15:45:55 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3709748f
2021-06-29 15:45:55 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-29 15:45:55 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:45:55 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'likePosts'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2021-06-29 15:45:55 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-06-29 15:45:55 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.User (u) -> user0_
2021-06-29 15:45:55 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-29 15:45:55 DEBUG DotNode:689 - getDataType() : likePosts -> org.hibernate.type.SetType(com.example.models.User.likePosts)
2021-06-29 15:45:55 DEBUG FromElementFactory:404 - createManyToMany() : path = u.likePosts role = com.example.models.User.likePosts associatedEntityName = com.example.models.Post
2021-06-29 15:45:55 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.Post (<no alias>) -> post2_
2021-06-29 15:45:55 DEBUG FromClause:287 - addJoinByPathMap() : u.likePosts -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
2021-06-29 15:45:55 DEBUG DotNode:342 - dereferenceCollection() : Created new FROM element for u.likePosts : post_likes_junction post2_
2021-06-29 15:45:55 DEBUG FromReferenceNode:60 - Resolved : u.likePosts -> .
2021-06-29 15:45:55 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-29 15:45:55 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:45:55 DEBUG FromReferenceNode:60 - Resolved : u.id -> user0_.user_id
2021-06-29 15:45:55 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-06-29 15:45:55 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} ( . user0_.user_id likePosts ) ) ( FromClause{level=1} ( users user0_ post_likes_junction post2_ ) ) ( where ( = ( user0_.user_id user0_.user_id id ) ? ) ) )
2021-06-29 15:45:55 DEBUG JoinProcessor:192 - Using FROM fragment [users user0_]
2021-06-29 15:45:55 DEBUG JoinProcessor:192 - Using FROM fragment [inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id]
2021-06-29 15:45:55 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-06-29 15:45:55 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (post_likes_junction,posts,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'post2_.post_id as post_id1_1_' {propertyName=likePosts,dereferenceType=COLLECTION,getPropertyPath=likePosts,path=u.likePosts,tableAlias=post2_,className=com.example.models.Post,classAlias=null}
    |  |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
    |  |  \-[IDENT] IdentNode: 'likePosts' {originalText=likePosts}
    |  \-[SQL_TOKEN] SqlFragment: 'post2_.content as content2_1_, post2_.user_id as user_id3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_, post2_], fromElementsByPath=[u.likePosts], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=com.example.models.User.likePosts,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=com.example.models.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@5b080f3a}

2021-06-29 15:45:55 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:45:55 DEBUG QueryTranslatorImpl:254 - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-29 15:45:55 DEBUG QueryTranslatorImpl:255 - SQL: select post2_.post_id as post_id1_1_, post2_.content as content2_1_, post2_.user_id as user_id3_1_ from users user0_ inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id where user0_.user_id=?
2021-06-29 15:45:55 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:45:55 DEBUG NamedQueryRepository:167 - Checking 1 named SQL queries
2021-06-29 15:45:55 DEBUG NamedQueryRepository:171 - Checking named SQL query: getUsersThatLiked
2021-06-29 15:45:55 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@31ab1e67
2021-06-29 15:45:55 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 92bad287-0c7a-43ea-8bdc-48dbb3fe11d9 (<unnamed>)
2021-06-29 15:45:55 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-06-29 15:45:55 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.models.User where username=mortysmith4074
2021-06-29 15:45:55 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:45:55 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[IDENT] Node: 'mortysmith4074'

2021-06-29 15:45:55 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-06-29 15:45:55 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.User (<no alias>) -> user0_
2021-06-29 15:45:55 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-06-29 15:45:55 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:45:55 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> user0_.username
2021-06-29 15:45:55 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-06-29 15:45:55 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username {synthetic-alias} username ) mortysmith4074 ) ) )
2021-06-29 15:45:55 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-06-29 15:45:55 DEBUG JoinProcessor:192 - Using FROM fragment [users user0_]
2021-06-29 15:45:55 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-06-29 15:45:55 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.example.models.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[IDENT] IdentNode: 'mortysmith4074' {originalText=mortysmith4074}

2021-06-29 15:45:55 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:45:55 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.models.User where username=mortysmith4074
2021-06-29 15:45:55 DEBUG QueryTranslatorImpl:255 - SQL: select user0_.user_id as user_id1_2_, user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_ from users user0_ where user0_.username=mortysmith4074
2021-06-29 15:45:55 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:45:55 DEBUG SQL:94 - select user0_.user_id as user_id1_2_, user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_ from users user0_ where user0_.username=mortysmith4074
2021-06-29 15:45:55 DEBUG SqlExceptionHelper:126 - could not extract ResultSet [n/a]
org.postgresql.util.PSQLException: ERROR: column "mortysmith4074" does not exist
  Position: 240
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2552)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2284)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:322)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:114)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2173)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1936)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1898)
	at org.hibernate.loader.Loader.doQuery(Loader.java:937)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:340)
	at org.hibernate.loader.Loader.doList(Loader.java:2695)
	at org.hibernate.loader.Loader.doList(Loader.java:2678)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2512)
	at org.hibernate.loader.Loader.list(Loader.java:2507)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:504)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:396)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:224)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1561)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1529)
	at org.hibernate.query.internal.AbstractProducedQuery.uniqueResult(AbstractProducedQuery.java:1571)
	at com.example.dao.UserDaoHibernate.getUserByUserName(UserDaoHibernate.java:31)
	at com.example.services.UserService.signIn(UserService.java:39)
	at SocialHubDriver.main(SocialHubDriver.java:86)
2021-06-29 15:45:55 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42703
2021-06-29 15:45:55 ERROR SqlExceptionHelper:142 - ERROR: column "mortysmith4074" does not exist
  Position: 240
2021-06-29 15:45:55 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 15:45:55 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-06-29 15:46:23 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 15:46:23 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-06-29 15:46:23 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-06-29 15:46:23 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-06-29 15:46:23 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-06-29 15:46:23 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-06-29 15:46:23 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-06-29 15:46:23 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-06-29 15:46:23 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-06-29 15:46:23 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-06-29 15:46:23 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-06-29 15:46:23 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-06-29 15:46:23 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-06-29 15:46:23 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-06-29 15:46:23 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5778826f
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61bcd567
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1252b961
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@28d6290
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@28d6290
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77602954
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77602954
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7adf16aa
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71ae31b0
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@6a66a204
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6a66a204
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@7e3f95fe
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e3f95fe
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@107ed6fc
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@107ed6fc
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@297ea53a
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@297ea53a
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3efe7086
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3efe7086
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7651218e
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7651218e
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7813cb11
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7813cb11
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3faf2e7d
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3faf2e7d
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68759011
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68759011
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@2a1edad4
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2a1edad4
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@757d6814
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@757d6814
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@716a7124
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1a1da881
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@3f2ef586
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3f2ef586
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4e76dac
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e76dac
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d8bbcdc
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d8bbcdc
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@4f936da8
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4f936da8
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a9f80d3
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@4602c2a9
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@29a60c27
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5f3b9c57
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@35fe2125
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@47da3952
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@47da3952
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5fd62371
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@1568159
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1568159
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@303e3593
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@303e3593
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5c48c0c0
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3f23a3a0
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3a4e343
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@7f69d591
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f69d591
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@71c5b236
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2cab9998
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2f7a7219
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@669513d8
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3a1d593e
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a8a60bc
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@361c294e
2021-06-29 15:46:23 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7859e786
2021-06-29 15:46:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-06-29 15:46:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-06-29 15:46:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 15:46:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 15:46:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-06-29 15:46:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-06-29 15:46:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-06-29 15:46:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 15:46:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-06-29 15:46:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-06-29 15:46:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-06-29 15:46:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-06-29 15:46:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 15:46:23 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-06-29 15:46:24 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-06-29 15:46:24 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-29 15:46:24 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, user=social}
2021-06-29 15:46:24 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-06-29 15:46:24 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-06-29 15:46:24 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-06-29 15:46:24 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-06-29 15:46:24 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-06-29 15:46:24 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-06-29 15:46:24 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-06-29 15:46:24 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-06-29 15:46:24 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-06-29 15:46:24 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@191a709b
2021-06-29 15:46:24 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@191a709b
2021-06-29 15:46:24 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:46:24 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11de56e6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@616b241a]
2021-06-29 15:46:25 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-06-29 15:46:25 DEBUG QueryBinder:80 - Binding named query: getUsersLikedPosts => select u.likePosts from User u where u.id = :id
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 15:46:25 DEBUG EntityBinder:430 - Import with entity name User
2021-06-29 15:46:25 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-06-29 15:46:25 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-06-29 15:46:25 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-06-29 15:46:25 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-06-29 15:46:25 DEBUG PropertyBinder:266 - Building property id
2021-06-29 15:46:25 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-06-29 15:46:25 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-06-29 15:46:25 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-06-29 15:46:25 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-06-29 15:46:25 DEBUG PropertyBinder:266 - Building property email
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-06-29 15:46:25 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-06-29 15:46:25 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-06-29 15:46:25 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-06-29 15:46:25 DEBUG PropertyBinder:266 - Building property firstName
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-06-29 15:46:25 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-06-29 15:46:25 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-06-29 15:46:25 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-06-29 15:46:25 DEBUG PropertyBinder:266 - Building property lastName
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-29 15:46:25 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-06-29 15:46:25 DEBUG PropertyBinder:266 - Building property likePosts
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-06-29 15:46:25 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-06-29 15:46:25 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-06-29 15:46:25 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-06-29 15:46:25 DEBUG PropertyBinder:266 - Building property password
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:46:25 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-06-29 15:46:25 DEBUG PropertyBinder:266 - Building property posts
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-06-29 15:46:25 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-06-29 15:46:25 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-06-29 15:46:25 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-06-29 15:46:25 DEBUG PropertyBinder:266 - Building property username
2021-06-29 15:46:25 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-06-29 15:46:25 DEBUG QueryBinder:138 - Binding named native query: getUsersThatLiked => select p.users from Post p where p.post_id = :id
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 15:46:25 DEBUG EntityBinder:430 - Import with entity name Post
2021-06-29 15:46:25 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-06-29 15:46:25 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-06-29 15:46:25 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-06-29 15:46:25 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-06-29 15:46:25 DEBUG PropertyBinder:266 - Building property postId
2021-06-29 15:46:25 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 15:46:25 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-06-29 15:46:25 DEBUG PropertyBinder:266 - Building property likes
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-06-29 15:46:25 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-06-29 15:46:25 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-06-29 15:46:25 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-06-29 15:46:25 DEBUG PropertyBinder:266 - Building property postContent
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 15:46:25 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-06-29 15:46:25 DEBUG PropertyBinder:266 - Building property user
2021-06-29 15:46:25 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-06-29 15:46:25 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-06-29 15:46:25 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-06-29 15:46:25 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-06-29 15:46:25 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-06-29 15:46:25 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-06-29 15:46:25 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-06-29 15:46:25 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-06-29 15:46:25 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-06-29 15:46:25 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-06-29 15:46:25 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-06-29 15:46:25 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-06-29 15:46:25 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-29 15:46:25 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-29 15:46:25 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-06-29 15:46:25 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-06-29 15:46:25 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-06-29 15:46:25 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-06-29 15:46:25 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-06-29 15:46:25 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-06-29 15:46:25 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-06-29 15:46:25 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-06-29 15:46:25 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-06-29 15:46:25 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-06-29 15:46:25 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:46:25 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-29 15:46:25 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:46:25 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:46:25 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-29 15:46:25 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:46:25 DEBUG SessionFactoryImpl:196 - Building session factory
2021-06-29 15:46:25 DEBUG Settings:70 - SessionFactory name : null
2021-06-29 15:46:25 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-06-29 15:46:25 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-06-29 15:46:25 DEBUG Settings:74 - Statistics: disabled
2021-06-29 15:46:25 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-06-29 15:46:25 DEBUG Settings:77 - Default entity-mode: pojo
2021-06-29 15:46:25 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-06-29 15:46:25 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-06-29 15:46:25 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-06-29 15:46:25 DEBUG Settings:82 - Default batch fetch size: -1
2021-06-29 15:46:25 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-06-29 15:46:25 DEBUG Settings:84 - Default null ordering: NONE
2021-06-29 15:46:25 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-06-29 15:46:25 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-06-29 15:46:25 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-06-29 15:46:25 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-06-29 15:46:25 DEBUG Settings:92 - Query language substitutions: {}
2021-06-29 15:46:25 DEBUG Settings:93 - Named query checking : enabled
2021-06-29 15:46:25 DEBUG Settings:95 - Second-level cache: disabled
2021-06-29 15:46:25 DEBUG Settings:96 - Second-level query cache: disabled
2021-06-29 15:46:25 DEBUG Settings:97 - Second-level query cache factory: null
2021-06-29 15:46:25 DEBUG Settings:98 - Second-level cache region prefix: null
2021-06-29 15:46:25 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-06-29 15:46:25 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-06-29 15:46:25 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-06-29 15:46:25 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-06-29 15:46:25 DEBUG Settings:104 - JDBC batch size: 15
2021-06-29 15:46:25 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-06-29 15:46:25 DEBUG Settings:106 - Scrollable result sets: enabled
2021-06-29 15:46:25 DEBUG Settings:107 - Wrap result sets: disabled
2021-06-29 15:46:25 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-06-29 15:46:25 DEBUG Settings:109 - JDBC result set fetch size: null
2021-06-29 15:46:25 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-06-29 15:46:25 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-06-29 15:46:25 DEBUG Settings:113 - JPA compliance - query : 
2021-06-29 15:46:25 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-06-29 15:46:25 DEBUG Settings:115 - JPA compliance - lists : 
2021-06-29 15:46:25 DEBUG Settings:116 - JPA compliance - transactions : 
2021-06-29 15:46:25 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-06-29 15:46:25 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\Documents\Revtature\SocialHubWeek4\target\classes;C:\Program Files\apache-tomcat-9.0.43\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.43\lib\ecj-4.18.jar;C:\Program Files\apache-tomcat-9.0.43\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.43\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin, sun.java.command=SocialHubDriver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=15.0.1, user.dir=D:\Documents\Revtature\SocialHubWeek4, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@102ecc22, java.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Java\jdk1.8.0_281;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\WorldPainter;C:\Program Files\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\OpenSSL-Win64\bin\;C:\Program Files\apache-maven-3.6.3\bin;C:\Program Files\nodejs\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Java\jdk1.8.0_281\bin;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\MongoDB;C:\Program Files\apache-maven-3.6.3\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Users\Ethan\AppData\Local\GitHubDesktop\bin;C:\Program Files\sts-4.9.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=59.0}
2021-06-29 15:46:25 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-06-29 15:46:25 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-06-29 15:46:25 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-06-29 15:46:25 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-06-29 15:46:25 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-06-29 15:46:25 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-06-29 15:46:25 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-06-29 15:46:25 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-06-29 15:46:25 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-06-29 15:46:25 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-06-29 15:46:25 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-06-29 15:46:25 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-06-29 15:46:25 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-06-29 15:46:25 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:46:25 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:46:25 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:46:25 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:46:25 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-06-29 15:46:25 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-06-29 15:46:25 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11de56e6] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@76a805b7]
2021-06-29 15:46:25 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:46:25 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:46:25 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:46:25 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:46:25 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:46:25 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:46:25 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:46:25 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:46:25 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-06-29 15:46:25 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-06-29 15:46:25 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-06-29 15:46:25 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-06-29 15:46:25 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-06-29 15:46:25 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-06-29 15:46:25 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-06-29 15:46:25 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-06-29 15:46:25 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-06-29 15:46:25 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-06-29 15:46:25 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-06-29 15:46:25 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-06-29 15:46:25 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-06-29 15:46:25 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-06-29 15:46:25 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-06-29 15:46:25 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-06-29 15:46:25 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-06-29 15:46:25 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-06-29 15:46:25 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-06-29 15:46:25 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-06-29 15:46:25 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64e7d698]
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2401856]
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b44d6d0]
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a9c661]
2021-06-29 15:46:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:46:25 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:46:25 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-29 15:46:25 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ed5b321]
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7459a21e]
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7eeb38b2]
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d54d0f5]
2021-06-29 15:46:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:46:25 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:46:25 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-29 15:46:25 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-29 15:46:25 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-29 15:46:25 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-29 15:46:25 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-06-29 15:46:25 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-06-29 15:46:25 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-06-29 15:46:25 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 15:46:25 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-06-29 15:46:25 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c19592c]
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2eb60c71]
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@87d9a01]
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e5b621b]
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10177794]
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:46:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:46:25 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:46:25 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-29 15:46:25 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e5c2463]
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f7be6c8]
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@647b9364]
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b6bccb4]
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49edcb30]
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:46:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:46:25 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:46:25 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-29 15:46:25 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-29 15:46:25 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 15:46:25 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@383cb5ce]
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@798deee8]
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69aabcb0]
2021-06-29 15:46:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:46:25 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:46:25 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-29 15:46:25 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a566922]
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f7a2a5]
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65c17e38]
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e180aaf]
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-06-29 15:46:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:46:25 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:46:25 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-29 15:46:25 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34d480b9]
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b415f5f]
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@617449dd]
2021-06-29 15:46:25 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e590b]
2021-06-29 15:46:25 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:46:25 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:46:25 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:46:25 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-06-29 15:46:25 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-06-29 15:46:25 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@37af24cb] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 15:46:25 DEBUG Table:516 - No alter strings for table : post_likes_junction
2021-06-29 15:46:25 DEBUG Table:516 - No alter strings for table : posts
2021-06-29 15:46:25 DEBUG Table:516 - No alter strings for table : users
2021-06-29 15:46:26 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-06-29 15:46:26 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-06-29 15:46:26 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 15:46:26 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 15:46:26 DEBUG NamedQueryRepository:151 - Checking 1 named HQL queries
2021-06-29 15:46:26 DEBUG NamedQueryRepository:155 - Checking named query: getUsersLikedPosts
2021-06-29 15:46:26 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-06-29 15:46:26 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3709748f
2021-06-29 15:46:26 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-29 15:46:26 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:46:26 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'likePosts'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2021-06-29 15:46:26 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-06-29 15:46:26 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.User (u) -> user0_
2021-06-29 15:46:26 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-29 15:46:26 DEBUG DotNode:689 - getDataType() : likePosts -> org.hibernate.type.SetType(com.example.models.User.likePosts)
2021-06-29 15:46:26 DEBUG FromElementFactory:404 - createManyToMany() : path = u.likePosts role = com.example.models.User.likePosts associatedEntityName = com.example.models.Post
2021-06-29 15:46:26 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.Post (<no alias>) -> post2_
2021-06-29 15:46:26 DEBUG FromClause:287 - addJoinByPathMap() : u.likePosts -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
2021-06-29 15:46:26 DEBUG DotNode:342 - dereferenceCollection() : Created new FROM element for u.likePosts : post_likes_junction post2_
2021-06-29 15:46:26 DEBUG FromReferenceNode:60 - Resolved : u.likePosts -> .
2021-06-29 15:46:26 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-29 15:46:26 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:46:26 DEBUG FromReferenceNode:60 - Resolved : u.id -> user0_.user_id
2021-06-29 15:46:26 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-06-29 15:46:26 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} ( . user0_.user_id likePosts ) ) ( FromClause{level=1} ( users user0_ post_likes_junction post2_ ) ) ( where ( = ( user0_.user_id user0_.user_id id ) ? ) ) )
2021-06-29 15:46:26 DEBUG JoinProcessor:192 - Using FROM fragment [users user0_]
2021-06-29 15:46:26 DEBUG JoinProcessor:192 - Using FROM fragment [inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id]
2021-06-29 15:46:26 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-06-29 15:46:26 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (post_likes_junction,posts,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'post2_.post_id as post_id1_1_' {propertyName=likePosts,dereferenceType=COLLECTION,getPropertyPath=likePosts,path=u.likePosts,tableAlias=post2_,className=com.example.models.Post,classAlias=null}
    |  |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
    |  |  \-[IDENT] IdentNode: 'likePosts' {originalText=likePosts}
    |  \-[SQL_TOKEN] SqlFragment: 'post2_.content as content2_1_, post2_.user_id as user_id3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_, post2_], fromElementsByPath=[u.likePosts], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=com.example.models.User.likePosts,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=com.example.models.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@5b080f3a}

2021-06-29 15:46:26 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:46:26 DEBUG QueryTranslatorImpl:254 - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-29 15:46:26 DEBUG QueryTranslatorImpl:255 - SQL: select post2_.post_id as post_id1_1_, post2_.content as content2_1_, post2_.user_id as user_id3_1_ from users user0_ inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id where user0_.user_id=?
2021-06-29 15:46:26 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:46:26 DEBUG NamedQueryRepository:167 - Checking 1 named SQL queries
2021-06-29 15:46:26 DEBUG NamedQueryRepository:171 - Checking named SQL query: getUsersThatLiked
2021-06-29 15:46:26 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@31ab1e67
2021-06-29 15:46:26 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 4962bf8b-95fd-4e08-ad85-b7835cd2018f (<unnamed>)
2021-06-29 15:46:26 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-06-29 15:46:26 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.models.User where username=MortySmith4074
2021-06-29 15:46:26 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:46:26 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[IDENT] Node: 'MortySmith4074'

2021-06-29 15:46:26 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-06-29 15:46:26 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.User (<no alias>) -> user0_
2021-06-29 15:46:26 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-06-29 15:46:26 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:46:26 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> user0_.username
2021-06-29 15:46:26 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-06-29 15:46:26 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username {synthetic-alias} username ) MortySmith4074 ) ) )
2021-06-29 15:46:26 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-06-29 15:46:26 DEBUG JoinProcessor:192 - Using FROM fragment [users user0_]
2021-06-29 15:46:26 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-06-29 15:46:26 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.example.models.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[IDENT] IdentNode: 'MortySmith4074' {originalText=MortySmith4074}

2021-06-29 15:46:26 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:46:26 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.models.User where username=MortySmith4074
2021-06-29 15:46:26 DEBUG QueryTranslatorImpl:255 - SQL: select user0_.user_id as user_id1_2_, user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_ from users user0_ where user0_.username=MortySmith4074
2021-06-29 15:46:26 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:46:26 DEBUG SQL:94 - select user0_.user_id as user_id1_2_, user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_ from users user0_ where user0_.username=MortySmith4074
2021-06-29 15:46:26 DEBUG SqlExceptionHelper:126 - could not extract ResultSet [n/a]
org.postgresql.util.PSQLException: ERROR: column "mortysmith4074" does not exist
  Position: 240
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2552)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2284)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:322)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:114)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2173)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1936)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1898)
	at org.hibernate.loader.Loader.doQuery(Loader.java:937)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:340)
	at org.hibernate.loader.Loader.doList(Loader.java:2695)
	at org.hibernate.loader.Loader.doList(Loader.java:2678)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2512)
	at org.hibernate.loader.Loader.list(Loader.java:2507)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:504)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:396)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:224)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1561)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1529)
	at org.hibernate.query.internal.AbstractProducedQuery.uniqueResult(AbstractProducedQuery.java:1571)
	at com.example.dao.UserDaoHibernate.getUserByUserName(UserDaoHibernate.java:31)
	at com.example.services.UserService.signIn(UserService.java:39)
	at SocialHubDriver.main(SocialHubDriver.java:86)
2021-06-29 15:46:26 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42703
2021-06-29 15:46:26 ERROR SqlExceptionHelper:142 - ERROR: column "mortysmith4074" does not exist
  Position: 240
2021-06-29 15:46:26 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 15:46:26 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-06-29 15:47:27 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 15:47:27 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-06-29 15:47:27 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-06-29 15:47:27 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-06-29 15:47:27 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-06-29 15:47:27 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-06-29 15:47:27 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-06-29 15:47:27 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-06-29 15:47:27 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-06-29 15:47:27 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-06-29 15:47:27 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-06-29 15:47:27 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-06-29 15:47:27 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-06-29 15:47:27 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-06-29 15:47:27 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5778826f
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61bcd567
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1252b961
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@28d6290
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@28d6290
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77602954
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77602954
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7adf16aa
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71ae31b0
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@6a66a204
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6a66a204
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@7e3f95fe
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e3f95fe
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@107ed6fc
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@107ed6fc
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@297ea53a
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@297ea53a
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3efe7086
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3efe7086
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7651218e
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7651218e
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7813cb11
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7813cb11
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3faf2e7d
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3faf2e7d
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68759011
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68759011
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@2a1edad4
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2a1edad4
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@757d6814
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@757d6814
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@716a7124
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1a1da881
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@3f2ef586
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3f2ef586
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4e76dac
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e76dac
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d8bbcdc
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d8bbcdc
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@4f936da8
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4f936da8
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a9f80d3
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@4602c2a9
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@29a60c27
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5f3b9c57
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@35fe2125
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@47da3952
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@47da3952
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5fd62371
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@1568159
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1568159
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@303e3593
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@303e3593
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5c48c0c0
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3f23a3a0
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3a4e343
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@7f69d591
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f69d591
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@71c5b236
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2cab9998
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2f7a7219
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@669513d8
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3a1d593e
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a8a60bc
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@361c294e
2021-06-29 15:47:28 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7859e786
2021-06-29 15:47:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-06-29 15:47:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-06-29 15:47:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 15:47:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 15:47:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-06-29 15:47:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-06-29 15:47:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-06-29 15:47:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 15:47:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-06-29 15:47:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-06-29 15:47:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-06-29 15:47:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-06-29 15:47:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 15:47:28 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-06-29 15:47:28 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-06-29 15:47:28 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-29 15:47:28 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, user=social}
2021-06-29 15:47:28 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-06-29 15:47:28 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-06-29 15:47:28 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-06-29 15:47:28 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-06-29 15:47:28 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-06-29 15:47:28 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-06-29 15:47:28 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-06-29 15:47:28 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-06-29 15:47:29 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-06-29 15:47:29 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@191a709b
2021-06-29 15:47:29 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@191a709b
2021-06-29 15:47:29 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:47:29 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11de56e6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@616b241a]
2021-06-29 15:47:29 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-06-29 15:47:29 DEBUG QueryBinder:80 - Binding named query: getUsersLikedPosts => select u.likePosts from User u where u.id = :id
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 15:47:29 DEBUG EntityBinder:430 - Import with entity name User
2021-06-29 15:47:29 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-06-29 15:47:29 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-06-29 15:47:29 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-06-29 15:47:29 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-06-29 15:47:29 DEBUG PropertyBinder:266 - Building property id
2021-06-29 15:47:29 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-06-29 15:47:29 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-06-29 15:47:29 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-06-29 15:47:29 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-06-29 15:47:29 DEBUG PropertyBinder:266 - Building property email
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-06-29 15:47:29 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-06-29 15:47:29 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-06-29 15:47:29 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-06-29 15:47:29 DEBUG PropertyBinder:266 - Building property firstName
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-06-29 15:47:29 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-06-29 15:47:29 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-06-29 15:47:29 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-06-29 15:47:29 DEBUG PropertyBinder:266 - Building property lastName
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-29 15:47:29 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-06-29 15:47:29 DEBUG PropertyBinder:266 - Building property likePosts
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-06-29 15:47:29 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-06-29 15:47:29 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-06-29 15:47:29 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-06-29 15:47:29 DEBUG PropertyBinder:266 - Building property password
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:47:29 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-06-29 15:47:29 DEBUG PropertyBinder:266 - Building property posts
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-06-29 15:47:29 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-06-29 15:47:29 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-06-29 15:47:29 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-06-29 15:47:29 DEBUG PropertyBinder:266 - Building property username
2021-06-29 15:47:29 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-06-29 15:47:29 DEBUG QueryBinder:138 - Binding named native query: getUsersThatLiked => select p.users from Post p where p.post_id = :id
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 15:47:29 DEBUG EntityBinder:430 - Import with entity name Post
2021-06-29 15:47:29 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-06-29 15:47:29 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-06-29 15:47:29 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-06-29 15:47:29 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-06-29 15:47:29 DEBUG PropertyBinder:266 - Building property postId
2021-06-29 15:47:29 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 15:47:29 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-06-29 15:47:29 DEBUG PropertyBinder:266 - Building property likes
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-06-29 15:47:29 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-06-29 15:47:29 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-06-29 15:47:29 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-06-29 15:47:29 DEBUG PropertyBinder:266 - Building property postContent
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 15:47:29 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-06-29 15:47:29 DEBUG PropertyBinder:266 - Building property user
2021-06-29 15:47:29 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-06-29 15:47:29 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-06-29 15:47:29 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-06-29 15:47:29 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-06-29 15:47:29 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-06-29 15:47:29 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-06-29 15:47:29 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-06-29 15:47:29 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-06-29 15:47:29 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-06-29 15:47:29 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-06-29 15:47:29 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-06-29 15:47:29 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-06-29 15:47:29 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-29 15:47:29 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-29 15:47:29 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-06-29 15:47:29 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-06-29 15:47:29 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-06-29 15:47:29 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-06-29 15:47:29 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-06-29 15:47:29 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-06-29 15:47:29 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-06-29 15:47:29 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-06-29 15:47:29 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-06-29 15:47:29 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-06-29 15:47:29 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:47:29 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-29 15:47:29 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:47:29 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:47:29 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-29 15:47:29 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:47:29 DEBUG SessionFactoryImpl:196 - Building session factory
2021-06-29 15:47:29 DEBUG Settings:70 - SessionFactory name : null
2021-06-29 15:47:29 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-06-29 15:47:29 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-06-29 15:47:29 DEBUG Settings:74 - Statistics: disabled
2021-06-29 15:47:29 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-06-29 15:47:29 DEBUG Settings:77 - Default entity-mode: pojo
2021-06-29 15:47:29 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-06-29 15:47:29 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-06-29 15:47:29 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-06-29 15:47:29 DEBUG Settings:82 - Default batch fetch size: -1
2021-06-29 15:47:29 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-06-29 15:47:29 DEBUG Settings:84 - Default null ordering: NONE
2021-06-29 15:47:29 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-06-29 15:47:29 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-06-29 15:47:29 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-06-29 15:47:29 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-06-29 15:47:29 DEBUG Settings:92 - Query language substitutions: {}
2021-06-29 15:47:29 DEBUG Settings:93 - Named query checking : enabled
2021-06-29 15:47:29 DEBUG Settings:95 - Second-level cache: disabled
2021-06-29 15:47:29 DEBUG Settings:96 - Second-level query cache: disabled
2021-06-29 15:47:29 DEBUG Settings:97 - Second-level query cache factory: null
2021-06-29 15:47:29 DEBUG Settings:98 - Second-level cache region prefix: null
2021-06-29 15:47:29 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-06-29 15:47:29 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-06-29 15:47:29 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-06-29 15:47:29 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-06-29 15:47:29 DEBUG Settings:104 - JDBC batch size: 15
2021-06-29 15:47:29 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-06-29 15:47:29 DEBUG Settings:106 - Scrollable result sets: enabled
2021-06-29 15:47:29 DEBUG Settings:107 - Wrap result sets: disabled
2021-06-29 15:47:29 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-06-29 15:47:29 DEBUG Settings:109 - JDBC result set fetch size: null
2021-06-29 15:47:29 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-06-29 15:47:29 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-06-29 15:47:29 DEBUG Settings:113 - JPA compliance - query : 
2021-06-29 15:47:29 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-06-29 15:47:29 DEBUG Settings:115 - JPA compliance - lists : 
2021-06-29 15:47:29 DEBUG Settings:116 - JPA compliance - transactions : 
2021-06-29 15:47:29 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-06-29 15:47:29 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\Documents\Revtature\SocialHubWeek4\target\classes;C:\Program Files\apache-tomcat-9.0.43\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.43\lib\ecj-4.18.jar;C:\Program Files\apache-tomcat-9.0.43\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.43\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin, sun.java.command=SocialHubDriver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=15.0.1, user.dir=D:\Documents\Revtature\SocialHubWeek4, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7ff35a3f, java.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Java\jdk1.8.0_281;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\WorldPainter;C:\Program Files\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\OpenSSL-Win64\bin\;C:\Program Files\apache-maven-3.6.3\bin;C:\Program Files\nodejs\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Java\jdk1.8.0_281\bin;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\MongoDB;C:\Program Files\apache-maven-3.6.3\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Users\Ethan\AppData\Local\GitHubDesktop\bin;C:\Program Files\sts-4.9.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=59.0}
2021-06-29 15:47:29 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-06-29 15:47:29 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-06-29 15:47:29 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-06-29 15:47:29 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-06-29 15:47:29 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-06-29 15:47:29 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-06-29 15:47:29 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-06-29 15:47:29 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-06-29 15:47:29 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-06-29 15:47:29 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-06-29 15:47:29 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-06-29 15:47:29 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-06-29 15:47:29 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-06-29 15:47:29 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:47:29 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:47:29 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:47:29 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:47:29 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-06-29 15:47:29 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-06-29 15:47:29 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11de56e6] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@15f35bc3]
2021-06-29 15:47:29 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:47:29 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:47:29 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:47:29 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:47:29 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:47:29 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:47:29 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:47:29 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:47:29 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-06-29 15:47:29 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-06-29 15:47:29 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-06-29 15:47:29 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-06-29 15:47:29 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-06-29 15:47:29 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-06-29 15:47:29 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-06-29 15:47:29 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-06-29 15:47:29 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-06-29 15:47:29 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-06-29 15:47:29 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-06-29 15:47:29 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-06-29 15:47:29 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-06-29 15:47:29 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-06-29 15:47:29 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-06-29 15:47:29 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-06-29 15:47:29 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-06-29 15:47:29 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-06-29 15:47:29 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-06-29 15:47:29 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-06-29 15:47:29 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2519026b]
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d6f6860]
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e900e1a]
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b425577]
2021-06-29 15:47:29 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:47:29 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:47:29 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-29 15:47:29 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5696c927]
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7eeb38b2]
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d54d0f5]
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d6bff89]
2021-06-29 15:47:29 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:47:29 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:47:29 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-29 15:47:29 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-29 15:47:29 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-29 15:47:29 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-29 15:47:29 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-06-29 15:47:29 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-06-29 15:47:29 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-06-29 15:47:29 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 15:47:29 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-06-29 15:47:29 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60e1d87c]
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@87d9a01]
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e5b621b]
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10177794]
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e5c2463]
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:47:29 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:47:29 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:47:29 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-29 15:47:29 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a950a3b]
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@647b9364]
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b6bccb4]
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49edcb30]
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59303963]
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:47:29 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:47:29 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:47:29 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-29 15:47:29 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-29 15:47:29 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 15:47:29 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@798deee8]
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@96897c8]
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32a72c4]
2021-06-29 15:47:29 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:47:29 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:47:29 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-29 15:47:29 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f7a2a5]
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42ed89da]
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e180aaf]
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7015ebef]
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-06-29 15:47:29 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:47:29 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:47:29 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-29 15:47:29 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b415f5f]
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66749eea]
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e590b]
2021-06-29 15:47:29 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42ef042a]
2021-06-29 15:47:29 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:47:29 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:47:29 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:47:29 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-06-29 15:47:29 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-06-29 15:47:30 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7926352f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 15:47:30 DEBUG Table:516 - No alter strings for table : post_likes_junction
2021-06-29 15:47:30 DEBUG Table:516 - No alter strings for table : posts
2021-06-29 15:47:30 DEBUG Table:516 - No alter strings for table : users
2021-06-29 15:47:30 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-06-29 15:47:30 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-06-29 15:47:30 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 15:47:30 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 15:47:30 DEBUG NamedQueryRepository:151 - Checking 1 named HQL queries
2021-06-29 15:47:30 DEBUG NamedQueryRepository:155 - Checking named query: getUsersLikedPosts
2021-06-29 15:47:30 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-06-29 15:47:30 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@79ecc507
2021-06-29 15:47:30 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-29 15:47:30 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:47:30 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'likePosts'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2021-06-29 15:47:30 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-06-29 15:47:30 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.User (u) -> user0_
2021-06-29 15:47:30 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-29 15:47:30 DEBUG DotNode:689 - getDataType() : likePosts -> org.hibernate.type.SetType(com.example.models.User.likePosts)
2021-06-29 15:47:30 DEBUG FromElementFactory:404 - createManyToMany() : path = u.likePosts role = com.example.models.User.likePosts associatedEntityName = com.example.models.Post
2021-06-29 15:47:30 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.Post (<no alias>) -> post2_
2021-06-29 15:47:30 DEBUG FromClause:287 - addJoinByPathMap() : u.likePosts -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
2021-06-29 15:47:30 DEBUG DotNode:342 - dereferenceCollection() : Created new FROM element for u.likePosts : post_likes_junction post2_
2021-06-29 15:47:30 DEBUG FromReferenceNode:60 - Resolved : u.likePosts -> .
2021-06-29 15:47:30 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-29 15:47:30 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:47:30 DEBUG FromReferenceNode:60 - Resolved : u.id -> user0_.user_id
2021-06-29 15:47:30 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-06-29 15:47:30 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} ( . user0_.user_id likePosts ) ) ( FromClause{level=1} ( users user0_ post_likes_junction post2_ ) ) ( where ( = ( user0_.user_id user0_.user_id id ) ? ) ) )
2021-06-29 15:47:30 DEBUG JoinProcessor:192 - Using FROM fragment [users user0_]
2021-06-29 15:47:30 DEBUG JoinProcessor:192 - Using FROM fragment [inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id]
2021-06-29 15:47:30 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-06-29 15:47:30 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (post_likes_junction,posts,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'post2_.post_id as post_id1_1_' {propertyName=likePosts,dereferenceType=COLLECTION,getPropertyPath=likePosts,path=u.likePosts,tableAlias=post2_,className=com.example.models.Post,classAlias=null}
    |  |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
    |  |  \-[IDENT] IdentNode: 'likePosts' {originalText=likePosts}
    |  \-[SQL_TOKEN] SqlFragment: 'post2_.content as content2_1_, post2_.user_id as user_id3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_, post2_], fromElementsByPath=[u.likePosts], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=com.example.models.User.likePosts,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=com.example.models.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@5b080f3a}

2021-06-29 15:47:30 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:47:30 DEBUG QueryTranslatorImpl:254 - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-29 15:47:30 DEBUG QueryTranslatorImpl:255 - SQL: select post2_.post_id as post_id1_1_, post2_.content as content2_1_, post2_.user_id as user_id3_1_ from users user0_ inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id where user0_.user_id=?
2021-06-29 15:47:30 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:47:30 DEBUG NamedQueryRepository:167 - Checking 1 named SQL queries
2021-06-29 15:47:30 DEBUG NamedQueryRepository:171 - Checking named SQL query: getUsersThatLiked
2021-06-29 15:47:30 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@29bbc391
2021-06-29 15:47:30 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: c0d47a39-f8ab-4d63-a690-9a139c9c3603 (<unnamed>)
2021-06-29 15:47:30 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-06-29 15:47:30 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.models.User where username=MortySmith4074
2021-06-29 15:47:30 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:47:30 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[IDENT] Node: 'MortySmith4074'

2021-06-29 15:47:30 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-06-29 15:47:30 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.User (<no alias>) -> user0_
2021-06-29 15:47:30 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-06-29 15:47:30 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:47:30 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> user0_.username
2021-06-29 15:47:30 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-06-29 15:47:30 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username {synthetic-alias} username ) MortySmith4074 ) ) )
2021-06-29 15:47:30 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-06-29 15:47:30 DEBUG JoinProcessor:192 - Using FROM fragment [users user0_]
2021-06-29 15:47:30 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-06-29 15:47:30 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.example.models.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[IDENT] IdentNode: 'MortySmith4074' {originalText=MortySmith4074}

2021-06-29 15:47:30 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:47:30 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.models.User where username=MortySmith4074
2021-06-29 15:47:30 DEBUG QueryTranslatorImpl:255 - SQL: select user0_.user_id as user_id1_2_, user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_ from users user0_ where user0_.username=MortySmith4074
2021-06-29 15:47:30 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:47:30 DEBUG SQL:94 - select user0_.user_id as user_id1_2_, user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_ from users user0_ where user0_.username=MortySmith4074
2021-06-29 15:47:30 DEBUG SqlExceptionHelper:126 - could not extract ResultSet [n/a]
org.postgresql.util.PSQLException: ERROR: column "mortysmith4074" does not exist
  Position: 240
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2552)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2284)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:322)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:114)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2173)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1936)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1898)
	at org.hibernate.loader.Loader.doQuery(Loader.java:937)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:340)
	at org.hibernate.loader.Loader.doList(Loader.java:2695)
	at org.hibernate.loader.Loader.doList(Loader.java:2678)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2512)
	at org.hibernate.loader.Loader.list(Loader.java:2507)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:504)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:396)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:224)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1561)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1529)
	at org.hibernate.query.internal.AbstractProducedQuery.uniqueResult(AbstractProducedQuery.java:1571)
	at com.example.dao.UserDaoHibernate.getUserByUserName(UserDaoHibernate.java:31)
	at SocialHubDriver.main(SocialHubDriver.java:87)
2021-06-29 15:47:30 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42703
2021-06-29 15:47:30 ERROR SqlExceptionHelper:142 - ERROR: column "mortysmith4074" does not exist
  Position: 240
2021-06-29 15:47:30 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 15:47:30 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-06-29 15:48:15 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 15:48:15 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-06-29 15:48:15 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-06-29 15:48:15 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-06-29 15:48:15 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-06-29 15:48:15 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-06-29 15:48:15 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-06-29 15:48:15 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-06-29 15:48:15 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-06-29 15:48:15 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-06-29 15:48:15 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-06-29 15:48:15 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-06-29 15:48:15 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-06-29 15:48:15 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-06-29 15:48:15 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5778826f
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61bcd567
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1252b961
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@28d6290
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@28d6290
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77602954
2021-06-29 15:48:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77602954
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7adf16aa
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71ae31b0
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@6a66a204
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6a66a204
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@7e3f95fe
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e3f95fe
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@107ed6fc
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@107ed6fc
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@297ea53a
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@297ea53a
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3efe7086
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3efe7086
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7651218e
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7651218e
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7813cb11
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7813cb11
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3faf2e7d
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3faf2e7d
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68759011
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68759011
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@2a1edad4
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2a1edad4
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@757d6814
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@757d6814
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@716a7124
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1a1da881
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@3f2ef586
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3f2ef586
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4e76dac
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e76dac
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d8bbcdc
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d8bbcdc
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@4f936da8
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4f936da8
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a9f80d3
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@4602c2a9
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@29a60c27
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5f3b9c57
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@35fe2125
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@47da3952
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@47da3952
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5fd62371
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@1568159
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1568159
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@303e3593
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@303e3593
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5c48c0c0
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3f23a3a0
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3a4e343
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@7f69d591
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f69d591
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@71c5b236
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2cab9998
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2f7a7219
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@669513d8
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3a1d593e
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a8a60bc
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@361c294e
2021-06-29 15:48:16 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7859e786
2021-06-29 15:48:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-06-29 15:48:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-06-29 15:48:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 15:48:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 15:48:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-06-29 15:48:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-06-29 15:48:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-06-29 15:48:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 15:48:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-06-29 15:48:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-06-29 15:48:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-06-29 15:48:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-06-29 15:48:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 15:48:16 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-06-29 15:48:16 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-06-29 15:48:16 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-29 15:48:16 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, user=social}
2021-06-29 15:48:16 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-06-29 15:48:16 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-06-29 15:48:16 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-06-29 15:48:16 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-06-29 15:48:16 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-06-29 15:48:16 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-06-29 15:48:16 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-06-29 15:48:16 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-06-29 15:48:17 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-06-29 15:48:17 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@77c7ed8e
2021-06-29 15:48:17 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@77c7ed8e
2021-06-29 15:48:17 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:48:17 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@616b241a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b8e246c]
2021-06-29 15:48:17 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-06-29 15:48:17 DEBUG QueryBinder:80 - Binding named query: getUsersLikedPosts => select u.likePosts from User u where u.id = :id
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 15:48:17 DEBUG EntityBinder:430 - Import with entity name User
2021-06-29 15:48:17 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-06-29 15:48:17 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-06-29 15:48:17 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-06-29 15:48:17 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-06-29 15:48:17 DEBUG PropertyBinder:266 - Building property id
2021-06-29 15:48:17 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-06-29 15:48:17 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-06-29 15:48:17 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-06-29 15:48:17 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-06-29 15:48:17 DEBUG PropertyBinder:266 - Building property email
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-06-29 15:48:17 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-06-29 15:48:17 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-06-29 15:48:17 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-06-29 15:48:17 DEBUG PropertyBinder:266 - Building property firstName
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-06-29 15:48:17 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-06-29 15:48:17 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-06-29 15:48:17 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-06-29 15:48:17 DEBUG PropertyBinder:266 - Building property lastName
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-29 15:48:17 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-06-29 15:48:17 DEBUG PropertyBinder:266 - Building property likePosts
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-06-29 15:48:17 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-06-29 15:48:17 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-06-29 15:48:17 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-06-29 15:48:17 DEBUG PropertyBinder:266 - Building property password
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:48:17 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-06-29 15:48:17 DEBUG PropertyBinder:266 - Building property posts
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-06-29 15:48:17 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-06-29 15:48:17 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-06-29 15:48:17 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-06-29 15:48:17 DEBUG PropertyBinder:266 - Building property username
2021-06-29 15:48:17 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-06-29 15:48:17 DEBUG QueryBinder:138 - Binding named native query: getUsersThatLiked => select p.users from Post p where p.post_id = :id
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 15:48:17 DEBUG EntityBinder:430 - Import with entity name Post
2021-06-29 15:48:17 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-06-29 15:48:17 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-06-29 15:48:17 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-06-29 15:48:17 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-06-29 15:48:17 DEBUG PropertyBinder:266 - Building property postId
2021-06-29 15:48:17 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 15:48:17 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-06-29 15:48:17 DEBUG PropertyBinder:266 - Building property likes
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-06-29 15:48:17 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-06-29 15:48:17 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-06-29 15:48:17 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-06-29 15:48:17 DEBUG PropertyBinder:266 - Building property postContent
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 15:48:17 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-06-29 15:48:17 DEBUG PropertyBinder:266 - Building property user
2021-06-29 15:48:17 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-06-29 15:48:17 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-06-29 15:48:17 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-06-29 15:48:17 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-06-29 15:48:17 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-06-29 15:48:17 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-06-29 15:48:17 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-06-29 15:48:17 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-06-29 15:48:17 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-06-29 15:48:17 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-06-29 15:48:17 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-06-29 15:48:17 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-06-29 15:48:17 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-29 15:48:17 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-29 15:48:17 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-06-29 15:48:17 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-06-29 15:48:17 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-06-29 15:48:17 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-06-29 15:48:17 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-06-29 15:48:17 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-06-29 15:48:17 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-06-29 15:48:17 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-06-29 15:48:17 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-06-29 15:48:17 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-06-29 15:48:17 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:48:17 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-29 15:48:17 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:48:17 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:48:17 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-29 15:48:17 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:48:17 DEBUG SessionFactoryImpl:196 - Building session factory
2021-06-29 15:48:17 DEBUG Settings:70 - SessionFactory name : null
2021-06-29 15:48:17 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-06-29 15:48:17 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-06-29 15:48:17 DEBUG Settings:74 - Statistics: disabled
2021-06-29 15:48:17 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-06-29 15:48:17 DEBUG Settings:77 - Default entity-mode: pojo
2021-06-29 15:48:17 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-06-29 15:48:17 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-06-29 15:48:17 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-06-29 15:48:17 DEBUG Settings:82 - Default batch fetch size: -1
2021-06-29 15:48:17 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-06-29 15:48:17 DEBUG Settings:84 - Default null ordering: NONE
2021-06-29 15:48:17 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-06-29 15:48:17 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-06-29 15:48:17 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-06-29 15:48:17 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-06-29 15:48:17 DEBUG Settings:92 - Query language substitutions: {}
2021-06-29 15:48:17 DEBUG Settings:93 - Named query checking : enabled
2021-06-29 15:48:17 DEBUG Settings:95 - Second-level cache: disabled
2021-06-29 15:48:17 DEBUG Settings:96 - Second-level query cache: disabled
2021-06-29 15:48:17 DEBUG Settings:97 - Second-level query cache factory: null
2021-06-29 15:48:17 DEBUG Settings:98 - Second-level cache region prefix: null
2021-06-29 15:48:17 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-06-29 15:48:17 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-06-29 15:48:17 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-06-29 15:48:17 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-06-29 15:48:17 DEBUG Settings:104 - JDBC batch size: 15
2021-06-29 15:48:17 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-06-29 15:48:17 DEBUG Settings:106 - Scrollable result sets: enabled
2021-06-29 15:48:17 DEBUG Settings:107 - Wrap result sets: disabled
2021-06-29 15:48:17 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-06-29 15:48:17 DEBUG Settings:109 - JDBC result set fetch size: null
2021-06-29 15:48:17 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-06-29 15:48:17 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-06-29 15:48:17 DEBUG Settings:113 - JPA compliance - query : 
2021-06-29 15:48:17 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-06-29 15:48:17 DEBUG Settings:115 - JPA compliance - lists : 
2021-06-29 15:48:17 DEBUG Settings:116 - JPA compliance - transactions : 
2021-06-29 15:48:17 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-06-29 15:48:17 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\Documents\Revtature\SocialHubWeek4\target\classes;C:\Program Files\apache-tomcat-9.0.43\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.43\lib\ecj-4.18.jar;C:\Program Files\apache-tomcat-9.0.43\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.43\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin, sun.java.command=SocialHubDriver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=15.0.1, user.dir=D:\Documents\Revtature\SocialHubWeek4, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7ff35a3f, java.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Java\jdk1.8.0_281;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\WorldPainter;C:\Program Files\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\OpenSSL-Win64\bin\;C:\Program Files\apache-maven-3.6.3\bin;C:\Program Files\nodejs\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Java\jdk1.8.0_281\bin;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\MongoDB;C:\Program Files\apache-maven-3.6.3\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Users\Ethan\AppData\Local\GitHubDesktop\bin;C:\Program Files\sts-4.9.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=59.0}
2021-06-29 15:48:17 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-06-29 15:48:17 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-06-29 15:48:17 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-06-29 15:48:17 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-06-29 15:48:17 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-06-29 15:48:17 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-06-29 15:48:17 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-06-29 15:48:17 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-06-29 15:48:17 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-06-29 15:48:17 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-06-29 15:48:17 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-06-29 15:48:17 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-06-29 15:48:17 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-06-29 15:48:17 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:48:17 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:48:17 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:48:17 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:48:17 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-06-29 15:48:17 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-06-29 15:48:17 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@616b241a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@15f35bc3]
2021-06-29 15:48:17 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:48:17 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:48:17 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:48:17 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:48:17 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:48:17 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:48:17 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:48:17 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:48:17 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-06-29 15:48:17 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-06-29 15:48:17 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-06-29 15:48:17 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-06-29 15:48:17 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-06-29 15:48:17 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-06-29 15:48:17 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-06-29 15:48:17 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-06-29 15:48:17 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-06-29 15:48:17 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-06-29 15:48:17 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-06-29 15:48:17 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-06-29 15:48:17 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-06-29 15:48:17 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-06-29 15:48:17 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-06-29 15:48:17 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-06-29 15:48:17 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-06-29 15:48:17 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-06-29 15:48:17 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-06-29 15:48:17 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-06-29 15:48:17 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2519026b]
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d6f6860]
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e900e1a]
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b425577]
2021-06-29 15:48:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:48:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:48:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-29 15:48:17 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5696c927]
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7eeb38b2]
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d54d0f5]
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d6bff89]
2021-06-29 15:48:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:48:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:48:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-29 15:48:17 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-29 15:48:17 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-29 15:48:17 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-29 15:48:17 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-06-29 15:48:17 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-06-29 15:48:17 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-06-29 15:48:17 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 15:48:17 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-06-29 15:48:17 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60e1d87c]
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@87d9a01]
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e5b621b]
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10177794]
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e5c2463]
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:48:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:48:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:48:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-29 15:48:17 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a950a3b]
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@647b9364]
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b6bccb4]
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49edcb30]
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59303963]
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:48:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:48:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:48:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-29 15:48:17 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-29 15:48:17 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 15:48:17 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@798deee8]
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@96897c8]
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32a72c4]
2021-06-29 15:48:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:48:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:48:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-29 15:48:17 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f7a2a5]
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42ed89da]
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e180aaf]
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7015ebef]
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-06-29 15:48:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:48:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:48:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-29 15:48:17 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b415f5f]
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66749eea]
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e590b]
2021-06-29 15:48:17 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42ef042a]
2021-06-29 15:48:17 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:48:17 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:48:17 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:48:17 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-06-29 15:48:17 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-06-29 15:48:17 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7926352f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 15:48:18 DEBUG Table:516 - No alter strings for table : post_likes_junction
2021-06-29 15:48:18 DEBUG Table:516 - No alter strings for table : posts
2021-06-29 15:48:18 DEBUG Table:516 - No alter strings for table : users
2021-06-29 15:48:18 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-06-29 15:48:18 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-06-29 15:48:18 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 15:48:18 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 15:48:18 DEBUG NamedQueryRepository:151 - Checking 1 named HQL queries
2021-06-29 15:48:18 DEBUG NamedQueryRepository:155 - Checking named query: getUsersLikedPosts
2021-06-29 15:48:18 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-06-29 15:48:18 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@79ecc507
2021-06-29 15:48:18 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-29 15:48:18 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:48:18 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'likePosts'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2021-06-29 15:48:18 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-06-29 15:48:18 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.User (u) -> user0_
2021-06-29 15:48:18 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-29 15:48:18 DEBUG DotNode:689 - getDataType() : likePosts -> org.hibernate.type.SetType(com.example.models.User.likePosts)
2021-06-29 15:48:18 DEBUG FromElementFactory:404 - createManyToMany() : path = u.likePosts role = com.example.models.User.likePosts associatedEntityName = com.example.models.Post
2021-06-29 15:48:18 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.Post (<no alias>) -> post2_
2021-06-29 15:48:18 DEBUG FromClause:287 - addJoinByPathMap() : u.likePosts -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
2021-06-29 15:48:18 DEBUG DotNode:342 - dereferenceCollection() : Created new FROM element for u.likePosts : post_likes_junction post2_
2021-06-29 15:48:18 DEBUG FromReferenceNode:60 - Resolved : u.likePosts -> .
2021-06-29 15:48:18 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-29 15:48:18 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:48:18 DEBUG FromReferenceNode:60 - Resolved : u.id -> user0_.user_id
2021-06-29 15:48:18 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-06-29 15:48:18 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} ( . user0_.user_id likePosts ) ) ( FromClause{level=1} ( users user0_ post_likes_junction post2_ ) ) ( where ( = ( user0_.user_id user0_.user_id id ) ? ) ) )
2021-06-29 15:48:18 DEBUG JoinProcessor:192 - Using FROM fragment [users user0_]
2021-06-29 15:48:18 DEBUG JoinProcessor:192 - Using FROM fragment [inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id]
2021-06-29 15:48:18 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-06-29 15:48:18 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (post_likes_junction,posts,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'post2_.post_id as post_id1_1_' {propertyName=likePosts,dereferenceType=COLLECTION,getPropertyPath=likePosts,path=u.likePosts,tableAlias=post2_,className=com.example.models.Post,classAlias=null}
    |  |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
    |  |  \-[IDENT] IdentNode: 'likePosts' {originalText=likePosts}
    |  \-[SQL_TOKEN] SqlFragment: 'post2_.content as content2_1_, post2_.user_id as user_id3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_, post2_], fromElementsByPath=[u.likePosts], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=com.example.models.User.likePosts,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=com.example.models.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@5b080f3a}

2021-06-29 15:48:18 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:48:18 DEBUG QueryTranslatorImpl:254 - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-29 15:48:18 DEBUG QueryTranslatorImpl:255 - SQL: select post2_.post_id as post_id1_1_, post2_.content as content2_1_, post2_.user_id as user_id3_1_ from users user0_ inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id where user0_.user_id=?
2021-06-29 15:48:18 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:48:18 DEBUG NamedQueryRepository:167 - Checking 1 named SQL queries
2021-06-29 15:48:18 DEBUG NamedQueryRepository:171 - Checking named SQL query: getUsersThatLiked
2021-06-29 15:48:18 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@29bbc391
2021-06-29 15:48:18 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 28ca149d-b181-49b4-9e59-80d69de383d8 (<unnamed>)
2021-06-29 15:48:18 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-06-29 15:48:18 DEBUG SQL:94 - select * from users
2021-06-29 15:48:18 DEBUG Loader:384 - Result set row: 0
2021-06-29 15:48:18 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#1]
2021-06-29 15:48:18 DEBUG Loader:384 - Result set row: 1
2021-06-29 15:48:18 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#2]
2021-06-29 15:48:18 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.models.User#1]
2021-06-29 15:48:18 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.models.User#1]
2021-06-29 15:48:18 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.models.User#2]
2021-06-29 15:48:18 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.models.User#2]
2021-06-29 15:48:18 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 15:49:33 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 15:49:33 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-06-29 15:49:33 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-06-29 15:49:33 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-06-29 15:49:33 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-06-29 15:49:33 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-06-29 15:49:33 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-06-29 15:49:33 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-06-29 15:49:33 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-06-29 15:49:33 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-06-29 15:49:33 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-06-29 15:49:33 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-06-29 15:49:33 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-06-29 15:49:33 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-06-29 15:49:33 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5778826f
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61bcd567
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1252b961
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@28d6290
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@28d6290
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77602954
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77602954
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7adf16aa
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71ae31b0
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@6a66a204
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6a66a204
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@7e3f95fe
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e3f95fe
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@107ed6fc
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@107ed6fc
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@297ea53a
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@297ea53a
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3efe7086
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3efe7086
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7651218e
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7651218e
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7813cb11
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7813cb11
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3faf2e7d
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3faf2e7d
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68759011
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68759011
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@2a1edad4
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2a1edad4
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@757d6814
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@757d6814
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@716a7124
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1a1da881
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@3f2ef586
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3f2ef586
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4e76dac
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e76dac
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d8bbcdc
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d8bbcdc
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@4f936da8
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4f936da8
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a9f80d3
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@4602c2a9
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@29a60c27
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5f3b9c57
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@35fe2125
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@47da3952
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@47da3952
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5fd62371
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@1568159
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1568159
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@303e3593
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@303e3593
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5c48c0c0
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3f23a3a0
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3a4e343
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@7f69d591
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f69d591
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@71c5b236
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2cab9998
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2f7a7219
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@669513d8
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3a1d593e
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a8a60bc
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@361c294e
2021-06-29 15:49:33 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7859e786
2021-06-29 15:49:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-06-29 15:49:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-06-29 15:49:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 15:49:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 15:49:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-06-29 15:49:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-06-29 15:49:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-06-29 15:49:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 15:49:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-06-29 15:49:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-06-29 15:49:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-06-29 15:49:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-06-29 15:49:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 15:49:33 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-06-29 15:49:33 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-06-29 15:49:33 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-29 15:49:33 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, user=social}
2021-06-29 15:49:33 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-06-29 15:49:33 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-06-29 15:49:33 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-06-29 15:49:34 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-06-29 15:49:34 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-06-29 15:49:34 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-06-29 15:49:34 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-06-29 15:49:34 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-06-29 15:49:34 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-06-29 15:49:34 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@191a709b
2021-06-29 15:49:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@191a709b
2021-06-29 15:49:34 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:49:34 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11de56e6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@616b241a]
2021-06-29 15:49:34 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-06-29 15:49:34 DEBUG QueryBinder:80 - Binding named query: getUsersLikedPosts => select u.likePosts from User u where u.id = :id
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 15:49:34 DEBUG EntityBinder:430 - Import with entity name User
2021-06-29 15:49:34 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-06-29 15:49:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-06-29 15:49:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-06-29 15:49:34 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-06-29 15:49:34 DEBUG PropertyBinder:266 - Building property id
2021-06-29 15:49:34 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-06-29 15:49:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-06-29 15:49:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-06-29 15:49:34 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-06-29 15:49:34 DEBUG PropertyBinder:266 - Building property email
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-06-29 15:49:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-06-29 15:49:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-06-29 15:49:34 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-06-29 15:49:34 DEBUG PropertyBinder:266 - Building property firstName
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-06-29 15:49:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-06-29 15:49:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-06-29 15:49:34 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-06-29 15:49:34 DEBUG PropertyBinder:266 - Building property lastName
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-29 15:49:34 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-06-29 15:49:34 DEBUG PropertyBinder:266 - Building property likePosts
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-06-29 15:49:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-06-29 15:49:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-06-29 15:49:34 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-06-29 15:49:34 DEBUG PropertyBinder:266 - Building property password
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:49:34 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-06-29 15:49:34 DEBUG PropertyBinder:266 - Building property posts
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-06-29 15:49:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-06-29 15:49:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-06-29 15:49:34 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-06-29 15:49:34 DEBUG PropertyBinder:266 - Building property username
2021-06-29 15:49:34 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-06-29 15:49:34 DEBUG QueryBinder:138 - Binding named native query: getUsersThatLiked => select p.users from Post p where p.post_id = :id
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 15:49:34 DEBUG EntityBinder:430 - Import with entity name Post
2021-06-29 15:49:34 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-06-29 15:49:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-06-29 15:49:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-06-29 15:49:34 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-06-29 15:49:34 DEBUG PropertyBinder:266 - Building property postId
2021-06-29 15:49:34 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 15:49:34 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-06-29 15:49:34 DEBUG PropertyBinder:266 - Building property likes
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-06-29 15:49:34 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-06-29 15:49:34 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-06-29 15:49:34 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-06-29 15:49:34 DEBUG PropertyBinder:266 - Building property postContent
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 15:49:34 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-06-29 15:49:34 DEBUG PropertyBinder:266 - Building property user
2021-06-29 15:49:34 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-06-29 15:49:34 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-06-29 15:49:34 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-06-29 15:49:34 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-06-29 15:49:34 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-06-29 15:49:34 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-06-29 15:49:34 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-06-29 15:49:34 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-06-29 15:49:34 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-06-29 15:49:34 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-06-29 15:49:34 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-06-29 15:49:34 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-06-29 15:49:34 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-29 15:49:34 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-29 15:49:34 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-06-29 15:49:34 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-06-29 15:49:34 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-06-29 15:49:34 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-06-29 15:49:34 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-06-29 15:49:34 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-06-29 15:49:34 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-06-29 15:49:34 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-06-29 15:49:34 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-06-29 15:49:34 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-06-29 15:49:34 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:49:34 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-29 15:49:34 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:49:34 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:49:34 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-29 15:49:34 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:49:35 DEBUG SessionFactoryImpl:196 - Building session factory
2021-06-29 15:49:35 DEBUG Settings:70 - SessionFactory name : null
2021-06-29 15:49:35 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-06-29 15:49:35 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-06-29 15:49:35 DEBUG Settings:74 - Statistics: disabled
2021-06-29 15:49:35 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-06-29 15:49:35 DEBUG Settings:77 - Default entity-mode: pojo
2021-06-29 15:49:35 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-06-29 15:49:35 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-06-29 15:49:35 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-06-29 15:49:35 DEBUG Settings:82 - Default batch fetch size: -1
2021-06-29 15:49:35 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-06-29 15:49:35 DEBUG Settings:84 - Default null ordering: NONE
2021-06-29 15:49:35 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-06-29 15:49:35 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-06-29 15:49:35 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-06-29 15:49:35 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-06-29 15:49:35 DEBUG Settings:92 - Query language substitutions: {}
2021-06-29 15:49:35 DEBUG Settings:93 - Named query checking : enabled
2021-06-29 15:49:35 DEBUG Settings:95 - Second-level cache: disabled
2021-06-29 15:49:35 DEBUG Settings:96 - Second-level query cache: disabled
2021-06-29 15:49:35 DEBUG Settings:97 - Second-level query cache factory: null
2021-06-29 15:49:35 DEBUG Settings:98 - Second-level cache region prefix: null
2021-06-29 15:49:35 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-06-29 15:49:35 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-06-29 15:49:35 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-06-29 15:49:35 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-06-29 15:49:35 DEBUG Settings:104 - JDBC batch size: 15
2021-06-29 15:49:35 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-06-29 15:49:35 DEBUG Settings:106 - Scrollable result sets: enabled
2021-06-29 15:49:35 DEBUG Settings:107 - Wrap result sets: disabled
2021-06-29 15:49:35 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-06-29 15:49:35 DEBUG Settings:109 - JDBC result set fetch size: null
2021-06-29 15:49:35 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-06-29 15:49:35 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-06-29 15:49:35 DEBUG Settings:113 - JPA compliance - query : 
2021-06-29 15:49:35 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-06-29 15:49:35 DEBUG Settings:115 - JPA compliance - lists : 
2021-06-29 15:49:35 DEBUG Settings:116 - JPA compliance - transactions : 
2021-06-29 15:49:35 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-06-29 15:49:35 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\Documents\Revtature\SocialHubWeek4\target\classes;C:\Program Files\apache-tomcat-9.0.43\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.43\lib\ecj-4.18.jar;C:\Program Files\apache-tomcat-9.0.43\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.43\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin, sun.java.command=SocialHubDriver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=15.0.1, user.dir=D:\Documents\Revtature\SocialHubWeek4, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7ff35a3f, java.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Java\jdk1.8.0_281;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\WorldPainter;C:\Program Files\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\OpenSSL-Win64\bin\;C:\Program Files\apache-maven-3.6.3\bin;C:\Program Files\nodejs\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Java\jdk1.8.0_281\bin;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\MongoDB;C:\Program Files\apache-maven-3.6.3\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Users\Ethan\AppData\Local\GitHubDesktop\bin;C:\Program Files\sts-4.9.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=59.0}
2021-06-29 15:49:35 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-06-29 15:49:35 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-06-29 15:49:35 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-06-29 15:49:35 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-06-29 15:49:35 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-06-29 15:49:35 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-06-29 15:49:35 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-06-29 15:49:35 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-06-29 15:49:35 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-06-29 15:49:35 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-06-29 15:49:35 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-06-29 15:49:35 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-06-29 15:49:35 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-06-29 15:49:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:49:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:49:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:49:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:49:35 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-06-29 15:49:35 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-06-29 15:49:35 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11de56e6] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@15f35bc3]
2021-06-29 15:49:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:49:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:49:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:49:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:49:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:49:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:49:35 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:49:35 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:49:35 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-06-29 15:49:35 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-06-29 15:49:35 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-06-29 15:49:35 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-06-29 15:49:35 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-06-29 15:49:35 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-06-29 15:49:35 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-06-29 15:49:35 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-06-29 15:49:35 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-06-29 15:49:35 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-06-29 15:49:35 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-06-29 15:49:35 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-06-29 15:49:35 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-06-29 15:49:35 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-06-29 15:49:35 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-06-29 15:49:35 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-06-29 15:49:35 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-06-29 15:49:35 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-06-29 15:49:35 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-06-29 15:49:35 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-06-29 15:49:35 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2519026b]
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d6f6860]
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e900e1a]
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b425577]
2021-06-29 15:49:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:49:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:49:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-29 15:49:35 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5696c927]
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7eeb38b2]
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d54d0f5]
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d6bff89]
2021-06-29 15:49:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:49:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:49:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-29 15:49:35 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-29 15:49:35 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-29 15:49:35 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-29 15:49:35 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-06-29 15:49:35 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-06-29 15:49:35 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-06-29 15:49:35 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 15:49:35 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-06-29 15:49:35 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60e1d87c]
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@87d9a01]
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e5b621b]
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10177794]
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e5c2463]
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:49:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:49:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:49:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-29 15:49:35 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a950a3b]
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@647b9364]
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b6bccb4]
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49edcb30]
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59303963]
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:49:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:49:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:49:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-29 15:49:35 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-29 15:49:35 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 15:49:35 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@798deee8]
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@96897c8]
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32a72c4]
2021-06-29 15:49:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:49:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:49:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-29 15:49:35 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f7a2a5]
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42ed89da]
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e180aaf]
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7015ebef]
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-06-29 15:49:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:49:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:49:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-29 15:49:35 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b415f5f]
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66749eea]
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e590b]
2021-06-29 15:49:35 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42ef042a]
2021-06-29 15:49:35 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:49:35 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:49:35 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:49:35 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-06-29 15:49:35 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-06-29 15:49:35 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7926352f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 15:49:35 DEBUG Table:516 - No alter strings for table : post_likes_junction
2021-06-29 15:49:35 DEBUG Table:516 - No alter strings for table : posts
2021-06-29 15:49:35 DEBUG Table:516 - No alter strings for table : users
2021-06-29 15:49:36 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-06-29 15:49:36 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-06-29 15:49:36 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 15:49:36 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 15:49:36 DEBUG NamedQueryRepository:151 - Checking 1 named HQL queries
2021-06-29 15:49:36 DEBUG NamedQueryRepository:155 - Checking named query: getUsersLikedPosts
2021-06-29 15:49:36 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-06-29 15:49:36 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@79ecc507
2021-06-29 15:49:36 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-29 15:49:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:49:36 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'likePosts'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2021-06-29 15:49:36 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-06-29 15:49:36 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.User (u) -> user0_
2021-06-29 15:49:36 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-29 15:49:36 DEBUG DotNode:689 - getDataType() : likePosts -> org.hibernate.type.SetType(com.example.models.User.likePosts)
2021-06-29 15:49:36 DEBUG FromElementFactory:404 - createManyToMany() : path = u.likePosts role = com.example.models.User.likePosts associatedEntityName = com.example.models.Post
2021-06-29 15:49:36 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.Post (<no alias>) -> post2_
2021-06-29 15:49:36 DEBUG FromClause:287 - addJoinByPathMap() : u.likePosts -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
2021-06-29 15:49:36 DEBUG DotNode:342 - dereferenceCollection() : Created new FROM element for u.likePosts : post_likes_junction post2_
2021-06-29 15:49:36 DEBUG FromReferenceNode:60 - Resolved : u.likePosts -> .
2021-06-29 15:49:36 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-29 15:49:36 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:49:36 DEBUG FromReferenceNode:60 - Resolved : u.id -> user0_.user_id
2021-06-29 15:49:36 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-06-29 15:49:36 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} ( . user0_.user_id likePosts ) ) ( FromClause{level=1} ( users user0_ post_likes_junction post2_ ) ) ( where ( = ( user0_.user_id user0_.user_id id ) ? ) ) )
2021-06-29 15:49:36 DEBUG JoinProcessor:192 - Using FROM fragment [users user0_]
2021-06-29 15:49:36 DEBUG JoinProcessor:192 - Using FROM fragment [inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id]
2021-06-29 15:49:36 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-06-29 15:49:36 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (post_likes_junction,posts,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'post2_.post_id as post_id1_1_' {propertyName=likePosts,dereferenceType=COLLECTION,getPropertyPath=likePosts,path=u.likePosts,tableAlias=post2_,className=com.example.models.Post,classAlias=null}
    |  |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
    |  |  \-[IDENT] IdentNode: 'likePosts' {originalText=likePosts}
    |  \-[SQL_TOKEN] SqlFragment: 'post2_.content as content2_1_, post2_.user_id as user_id3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_, post2_], fromElementsByPath=[u.likePosts], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=com.example.models.User.likePosts,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=com.example.models.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@5b080f3a}

2021-06-29 15:49:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:49:36 DEBUG QueryTranslatorImpl:254 - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-29 15:49:36 DEBUG QueryTranslatorImpl:255 - SQL: select post2_.post_id as post_id1_1_, post2_.content as content2_1_, post2_.user_id as user_id3_1_ from users user0_ inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id where user0_.user_id=?
2021-06-29 15:49:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:49:36 DEBUG NamedQueryRepository:167 - Checking 1 named SQL queries
2021-06-29 15:49:36 DEBUG NamedQueryRepository:171 - Checking named SQL query: getUsersThatLiked
2021-06-29 15:49:36 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@29bbc391
2021-06-29 15:49:36 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 78a26615-5fe2-4d17-9507-86bad2a38a38 (<unnamed>)
2021-06-29 15:49:36 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-06-29 15:49:36 DEBUG SQL:94 - select * from users
2021-06-29 15:49:36 DEBUG Loader:384 - Result set row: 0
2021-06-29 15:49:36 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#1]
2021-06-29 15:49:36 DEBUG Loader:384 - Result set row: 1
2021-06-29 15:49:36 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#2]
2021-06-29 15:49:36 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.models.User#1]
2021-06-29 15:49:36 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.models.User#1]
2021-06-29 15:49:36 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.models.User#2]
2021-06-29 15:49:36 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.models.User#2]
2021-06-29 15:49:36 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 15:50:06 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 15:50:06 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-06-29 15:50:06 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-06-29 15:50:06 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-06-29 15:50:06 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-06-29 15:50:06 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-06-29 15:50:06 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-06-29 15:50:06 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-06-29 15:50:06 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-06-29 15:50:07 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-06-29 15:50:07 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-06-29 15:50:07 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-06-29 15:50:07 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-06-29 15:50:07 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-06-29 15:50:07 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5778826f
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61bcd567
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1252b961
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@28d6290
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@28d6290
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77602954
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77602954
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7adf16aa
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71ae31b0
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@6a66a204
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6a66a204
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@7e3f95fe
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e3f95fe
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@107ed6fc
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@107ed6fc
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@297ea53a
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@297ea53a
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3efe7086
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3efe7086
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7651218e
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7651218e
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7813cb11
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7813cb11
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3faf2e7d
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3faf2e7d
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68759011
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68759011
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@2a1edad4
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2a1edad4
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@757d6814
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@757d6814
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@716a7124
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1a1da881
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@3f2ef586
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3f2ef586
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4e76dac
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e76dac
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d8bbcdc
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d8bbcdc
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@4f936da8
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4f936da8
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a9f80d3
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@4602c2a9
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@29a60c27
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5f3b9c57
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@35fe2125
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@47da3952
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@47da3952
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5fd62371
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@1568159
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1568159
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@303e3593
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@303e3593
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5c48c0c0
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3f23a3a0
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3a4e343
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@7f69d591
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f69d591
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@71c5b236
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2cab9998
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2f7a7219
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@669513d8
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3a1d593e
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a8a60bc
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@361c294e
2021-06-29 15:50:07 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7859e786
2021-06-29 15:50:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-06-29 15:50:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-06-29 15:50:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 15:50:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 15:50:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-06-29 15:50:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-06-29 15:50:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-06-29 15:50:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 15:50:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-06-29 15:50:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-06-29 15:50:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-06-29 15:50:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-06-29 15:50:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 15:50:07 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-06-29 15:50:07 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-06-29 15:50:07 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-29 15:50:07 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, user=social}
2021-06-29 15:50:07 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-06-29 15:50:07 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-06-29 15:50:07 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-06-29 15:50:07 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-06-29 15:50:07 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-06-29 15:50:07 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-06-29 15:50:07 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-06-29 15:50:07 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-06-29 15:50:08 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-06-29 15:50:08 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@77c7ed8e
2021-06-29 15:50:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@77c7ed8e
2021-06-29 15:50:08 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:50:08 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@616b241a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b8e246c]
2021-06-29 15:50:08 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-06-29 15:50:08 DEBUG QueryBinder:80 - Binding named query: getUsersLikedPosts => select u.likePosts from User u where u.id = :id
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 15:50:08 DEBUG EntityBinder:430 - Import with entity name User
2021-06-29 15:50:08 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-06-29 15:50:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-06-29 15:50:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-06-29 15:50:08 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-06-29 15:50:08 DEBUG PropertyBinder:266 - Building property id
2021-06-29 15:50:08 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-06-29 15:50:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-06-29 15:50:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-06-29 15:50:08 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-06-29 15:50:08 DEBUG PropertyBinder:266 - Building property email
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-06-29 15:50:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-06-29 15:50:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-06-29 15:50:08 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-06-29 15:50:08 DEBUG PropertyBinder:266 - Building property firstName
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-06-29 15:50:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-06-29 15:50:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-06-29 15:50:08 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-06-29 15:50:08 DEBUG PropertyBinder:266 - Building property lastName
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-29 15:50:08 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-06-29 15:50:08 DEBUG PropertyBinder:266 - Building property likePosts
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-06-29 15:50:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-06-29 15:50:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-06-29 15:50:08 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-06-29 15:50:08 DEBUG PropertyBinder:266 - Building property password
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:50:08 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-06-29 15:50:08 DEBUG PropertyBinder:266 - Building property posts
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-06-29 15:50:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-06-29 15:50:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-06-29 15:50:08 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-06-29 15:50:08 DEBUG PropertyBinder:266 - Building property username
2021-06-29 15:50:08 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-06-29 15:50:08 DEBUG QueryBinder:138 - Binding named native query: getUsersThatLiked => select p.users from Post p where p.post_id = :id
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 15:50:08 DEBUG EntityBinder:430 - Import with entity name Post
2021-06-29 15:50:08 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-06-29 15:50:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-06-29 15:50:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-06-29 15:50:08 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-06-29 15:50:08 DEBUG PropertyBinder:266 - Building property postId
2021-06-29 15:50:08 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 15:50:08 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-06-29 15:50:08 DEBUG PropertyBinder:266 - Building property likes
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-06-29 15:50:08 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-06-29 15:50:08 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-06-29 15:50:08 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-06-29 15:50:08 DEBUG PropertyBinder:266 - Building property postContent
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 15:50:08 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-06-29 15:50:08 DEBUG PropertyBinder:266 - Building property user
2021-06-29 15:50:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-06-29 15:50:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-06-29 15:50:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-06-29 15:50:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-06-29 15:50:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-06-29 15:50:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-06-29 15:50:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-06-29 15:50:08 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-06-29 15:50:08 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-06-29 15:50:08 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-06-29 15:50:08 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-06-29 15:50:08 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-06-29 15:50:08 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-29 15:50:08 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-29 15:50:08 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-06-29 15:50:08 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-06-29 15:50:08 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-06-29 15:50:08 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-06-29 15:50:08 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-06-29 15:50:08 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-06-29 15:50:08 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-06-29 15:50:08 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-06-29 15:50:08 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-06-29 15:50:08 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-06-29 15:50:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:50:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-29 15:50:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:50:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:50:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-29 15:50:08 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:50:08 DEBUG SessionFactoryImpl:196 - Building session factory
2021-06-29 15:50:08 DEBUG Settings:70 - SessionFactory name : null
2021-06-29 15:50:08 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-06-29 15:50:08 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-06-29 15:50:08 DEBUG Settings:74 - Statistics: disabled
2021-06-29 15:50:08 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-06-29 15:50:08 DEBUG Settings:77 - Default entity-mode: pojo
2021-06-29 15:50:08 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-06-29 15:50:08 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-06-29 15:50:08 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-06-29 15:50:08 DEBUG Settings:82 - Default batch fetch size: -1
2021-06-29 15:50:08 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-06-29 15:50:08 DEBUG Settings:84 - Default null ordering: NONE
2021-06-29 15:50:08 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-06-29 15:50:08 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-06-29 15:50:08 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-06-29 15:50:08 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-06-29 15:50:08 DEBUG Settings:92 - Query language substitutions: {}
2021-06-29 15:50:08 DEBUG Settings:93 - Named query checking : enabled
2021-06-29 15:50:08 DEBUG Settings:95 - Second-level cache: disabled
2021-06-29 15:50:08 DEBUG Settings:96 - Second-level query cache: disabled
2021-06-29 15:50:08 DEBUG Settings:97 - Second-level query cache factory: null
2021-06-29 15:50:08 DEBUG Settings:98 - Second-level cache region prefix: null
2021-06-29 15:50:08 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-06-29 15:50:08 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-06-29 15:50:08 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-06-29 15:50:08 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-06-29 15:50:08 DEBUG Settings:104 - JDBC batch size: 15
2021-06-29 15:50:08 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-06-29 15:50:08 DEBUG Settings:106 - Scrollable result sets: enabled
2021-06-29 15:50:08 DEBUG Settings:107 - Wrap result sets: disabled
2021-06-29 15:50:08 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-06-29 15:50:08 DEBUG Settings:109 - JDBC result set fetch size: null
2021-06-29 15:50:08 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-06-29 15:50:08 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-06-29 15:50:08 DEBUG Settings:113 - JPA compliance - query : 
2021-06-29 15:50:08 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-06-29 15:50:08 DEBUG Settings:115 - JPA compliance - lists : 
2021-06-29 15:50:08 DEBUG Settings:116 - JPA compliance - transactions : 
2021-06-29 15:50:08 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-06-29 15:50:08 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\Documents\Revtature\SocialHubWeek4\target\classes;C:\Program Files\apache-tomcat-9.0.43\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.43\lib\ecj-4.18.jar;C:\Program Files\apache-tomcat-9.0.43\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.43\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin, sun.java.command=SocialHubDriver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=15.0.1, user.dir=D:\Documents\Revtature\SocialHubWeek4, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7ff35a3f, java.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Java\jdk1.8.0_281;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\WorldPainter;C:\Program Files\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\OpenSSL-Win64\bin\;C:\Program Files\apache-maven-3.6.3\bin;C:\Program Files\nodejs\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Java\jdk1.8.0_281\bin;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\MongoDB;C:\Program Files\apache-maven-3.6.3\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Users\Ethan\AppData\Local\GitHubDesktop\bin;C:\Program Files\sts-4.9.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=59.0}
2021-06-29 15:50:08 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-06-29 15:50:08 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-06-29 15:50:08 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-06-29 15:50:08 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-06-29 15:50:08 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-06-29 15:50:08 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-06-29 15:50:08 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-06-29 15:50:08 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-06-29 15:50:08 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-06-29 15:50:08 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-06-29 15:50:08 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-06-29 15:50:08 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-06-29 15:50:08 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-06-29 15:50:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:50:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:50:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:50:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:50:08 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-06-29 15:50:08 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-06-29 15:50:08 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@616b241a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@15f35bc3]
2021-06-29 15:50:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:50:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:50:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:50:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:50:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:50:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:50:08 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:50:08 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:50:08 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-06-29 15:50:08 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-06-29 15:50:08 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-06-29 15:50:08 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-06-29 15:50:08 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-06-29 15:50:08 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-06-29 15:50:08 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-06-29 15:50:08 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-06-29 15:50:08 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-06-29 15:50:08 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-06-29 15:50:08 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-06-29 15:50:08 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-06-29 15:50:08 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-06-29 15:50:08 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-06-29 15:50:08 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-06-29 15:50:08 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-06-29 15:50:08 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-06-29 15:50:08 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-06-29 15:50:08 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-06-29 15:50:08 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-06-29 15:50:08 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-06-29 15:50:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2519026b]
2021-06-29 15:50:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:50:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d6f6860]
2021-06-29 15:50:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e900e1a]
2021-06-29 15:50:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:50:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:50:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b425577]
2021-06-29 15:50:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:50:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:50:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-29 15:50:08 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-29 15:50:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5696c927]
2021-06-29 15:50:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:50:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7eeb38b2]
2021-06-29 15:50:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d54d0f5]
2021-06-29 15:50:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:50:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:50:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d6bff89]
2021-06-29 15:50:08 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:50:08 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:50:08 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-29 15:50:08 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-29 15:50:08 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-29 15:50:08 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-29 15:50:08 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-06-29 15:50:08 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-06-29 15:50:08 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-06-29 15:50:08 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 15:50:08 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-06-29 15:50:08 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-06-29 15:50:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60e1d87c]
2021-06-29 15:50:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:50:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:50:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:50:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:50:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@87d9a01]
2021-06-29 15:50:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e5b621b]
2021-06-29 15:50:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:50:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:50:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10177794]
2021-06-29 15:50:08 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e5c2463]
2021-06-29 15:50:08 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:50:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:50:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:50:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-29 15:50:09 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-29 15:50:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a950a3b]
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:50:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@647b9364]
2021-06-29 15:50:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b6bccb4]
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:50:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49edcb30]
2021-06-29 15:50:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59303963]
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:50:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:50:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:50:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-29 15:50:09 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-29 15:50:09 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 15:50:09 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 15:50:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@798deee8]
2021-06-29 15:50:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@96897c8]
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:50:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32a72c4]
2021-06-29 15:50:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:50:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:50:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-29 15:50:09 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-06-29 15:50:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f7a2a5]
2021-06-29 15:50:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42ed89da]
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:50:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e180aaf]
2021-06-29 15:50:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7015ebef]
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-06-29 15:50:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:50:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:50:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-29 15:50:09 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-06-29 15:50:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b415f5f]
2021-06-29 15:50:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66749eea]
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:50:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e590b]
2021-06-29 15:50:09 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42ef042a]
2021-06-29 15:50:09 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:50:09 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:50:09 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:50:09 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-06-29 15:50:09 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-06-29 15:50:09 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7926352f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 15:50:09 DEBUG Table:516 - No alter strings for table : post_likes_junction
2021-06-29 15:50:09 DEBUG Table:516 - No alter strings for table : posts
2021-06-29 15:50:09 DEBUG Table:516 - No alter strings for table : users
2021-06-29 15:50:09 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-06-29 15:50:09 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-06-29 15:50:09 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 15:50:09 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 15:50:09 DEBUG NamedQueryRepository:151 - Checking 1 named HQL queries
2021-06-29 15:50:09 DEBUG NamedQueryRepository:155 - Checking named query: getUsersLikedPosts
2021-06-29 15:50:09 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-06-29 15:50:09 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@79ecc507
2021-06-29 15:50:09 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-29 15:50:09 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:50:09 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'likePosts'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2021-06-29 15:50:09 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-06-29 15:50:09 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.User (u) -> user0_
2021-06-29 15:50:09 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-29 15:50:09 DEBUG DotNode:689 - getDataType() : likePosts -> org.hibernate.type.SetType(com.example.models.User.likePosts)
2021-06-29 15:50:09 DEBUG FromElementFactory:404 - createManyToMany() : path = u.likePosts role = com.example.models.User.likePosts associatedEntityName = com.example.models.Post
2021-06-29 15:50:09 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.Post (<no alias>) -> post2_
2021-06-29 15:50:09 DEBUG FromClause:287 - addJoinByPathMap() : u.likePosts -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
2021-06-29 15:50:09 DEBUG DotNode:342 - dereferenceCollection() : Created new FROM element for u.likePosts : post_likes_junction post2_
2021-06-29 15:50:09 DEBUG FromReferenceNode:60 - Resolved : u.likePosts -> .
2021-06-29 15:50:09 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-29 15:50:09 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:50:09 DEBUG FromReferenceNode:60 - Resolved : u.id -> user0_.user_id
2021-06-29 15:50:09 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-06-29 15:50:09 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} ( . user0_.user_id likePosts ) ) ( FromClause{level=1} ( users user0_ post_likes_junction post2_ ) ) ( where ( = ( user0_.user_id user0_.user_id id ) ? ) ) )
2021-06-29 15:50:09 DEBUG JoinProcessor:192 - Using FROM fragment [users user0_]
2021-06-29 15:50:09 DEBUG JoinProcessor:192 - Using FROM fragment [inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id]
2021-06-29 15:50:09 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-06-29 15:50:09 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (post_likes_junction,posts,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'post2_.post_id as post_id1_1_' {propertyName=likePosts,dereferenceType=COLLECTION,getPropertyPath=likePosts,path=u.likePosts,tableAlias=post2_,className=com.example.models.Post,classAlias=null}
    |  |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
    |  |  \-[IDENT] IdentNode: 'likePosts' {originalText=likePosts}
    |  \-[SQL_TOKEN] SqlFragment: 'post2_.content as content2_1_, post2_.user_id as user_id3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_, post2_], fromElementsByPath=[u.likePosts], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=com.example.models.User.likePosts,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=com.example.models.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@5b080f3a}

2021-06-29 15:50:09 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:50:09 DEBUG QueryTranslatorImpl:254 - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-29 15:50:09 DEBUG QueryTranslatorImpl:255 - SQL: select post2_.post_id as post_id1_1_, post2_.content as content2_1_, post2_.user_id as user_id3_1_ from users user0_ inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id where user0_.user_id=?
2021-06-29 15:50:09 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:50:09 DEBUG NamedQueryRepository:167 - Checking 1 named SQL queries
2021-06-29 15:50:09 DEBUG NamedQueryRepository:171 - Checking named SQL query: getUsersThatLiked
2021-06-29 15:50:09 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@29bbc391
2021-06-29 15:50:09 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 041ce294-1107-401c-b819-81c29e1f87d4 (<unnamed>)
2021-06-29 15:50:09 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-06-29 15:50:09 DEBUG SQL:94 - select * from users
2021-06-29 15:50:09 DEBUG Loader:384 - Result set row: 0
2021-06-29 15:50:09 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#1]
2021-06-29 15:50:09 DEBUG Loader:384 - Result set row: 1
2021-06-29 15:50:09 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#2]
2021-06-29 15:50:09 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.models.User#1]
2021-06-29 15:50:09 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.models.User#1]
2021-06-29 15:50:09 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.models.User#2]
2021-06-29 15:50:09 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.models.User#2]
2021-06-29 15:50:09 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 15:50:09 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [com.example.models.User.posts#1]
2021-06-29 15:50:09 DEBUG SQL:94 - select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-06-29 15:50:09 DEBUG ResultSetProcessorImpl:161 - Preparing collection intializer : [com.example.models.User.posts#1]
2021-06-29 15:50:09 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: com.example.models.User.posts
2021-06-29 15:50:09 DEBUG CollectionLoadContext:299 - Collection fully initialized: [com.example.models.User.posts#1]
2021-06-29 15:50:09 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: com.example.models.User.posts
2021-06-29 15:50:09 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-06-29 15:50:09 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-06-29 15:50:09 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [com.example.models.User.likePosts#1]
2021-06-29 15:50:09 DEBUG SQL:94 - select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-06-29 15:50:09 DEBUG ResultSetProcessorImpl:161 - Preparing collection intializer : [com.example.models.User.likePosts#1]
2021-06-29 15:50:09 DEBUG ResultSetProcessorImpl:120 - Starting ResultSet row #0
2021-06-29 15:50:09 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [com.example.models.User.likePosts#1]
2021-06-29 15:50:09 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.models.Post#3]
2021-06-29 15:50:09 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.models.Post#3]
2021-06-29 15:50:09 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: com.example.models.User.likePosts
2021-06-29 15:50:09 DEBUG CollectionLoadContext:299 - Collection fully initialized: [com.example.models.User.likePosts#1]
2021-06-29 15:50:09 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: com.example.models.User.likePosts
2021-06-29 15:50:09 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-06-29 15:50:09 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-06-29 15:50:09 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [com.example.models.User.posts#2]
2021-06-29 15:50:09 DEBUG SQL:94 - select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-06-29 15:50:09 DEBUG ResultSetProcessorImpl:161 - Preparing collection intializer : [com.example.models.User.posts#2]
2021-06-29 15:50:09 DEBUG ResultSetProcessorImpl:120 - Starting ResultSet row #0
2021-06-29 15:50:09 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [com.example.models.User.posts#2]
2021-06-29 15:50:09 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: com.example.models.User.posts
2021-06-29 15:50:09 DEBUG CollectionLoadContext:299 - Collection fully initialized: [com.example.models.User.posts#2]
2021-06-29 15:50:09 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: com.example.models.User.posts
2021-06-29 15:50:09 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-06-29 15:50:09 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-06-29 15:50:09 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [com.example.models.Post.likes#3]
2021-06-29 15:50:09 DEBUG SQL:94 - select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-06-29 15:50:09 DEBUG ResultSetProcessorImpl:161 - Preparing collection intializer : [com.example.models.Post.likes#3]
2021-06-29 15:50:09 DEBUG ResultSetProcessorImpl:120 - Starting ResultSet row #0
2021-06-29 15:50:09 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [com.example.models.Post.likes#3]
2021-06-29 15:50:09 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: com.example.models.Post.likes
2021-06-29 15:50:09 DEBUG CollectionLoadContext:299 - Collection fully initialized: [com.example.models.Post.likes#3]
2021-06-29 15:50:09 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: com.example.models.Post.likes
2021-06-29 15:50:09 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-06-29 15:50:09 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-06-29 15:50:09 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [com.example.models.User.likePosts#2]
2021-06-29 15:50:09 DEBUG SQL:94 - select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-06-29 15:50:09 DEBUG ResultSetProcessorImpl:161 - Preparing collection intializer : [com.example.models.User.likePosts#2]
2021-06-29 15:50:09 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: com.example.models.User.likePosts
2021-06-29 15:50:09 DEBUG CollectionLoadContext:299 - Collection fully initialized: [com.example.models.User.likePosts#2]
2021-06-29 15:50:09 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: com.example.models.User.likePosts
2021-06-29 15:50:09 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-06-29 15:50:09 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-06-29 15:50:09 DEBUG SessionFactoryImpl:792 - HHH000031: Closing
2021-06-29 15:50:09 DEBUG TypeConfiguration$Scope:350 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@120df990] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@15f35bc3]
2021-06-29 15:50:09 DEBUG AbstractServiceRegistryImpl:418 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2021-06-29 15:50:09 INFO  pooling:408 - HHH10001008: Cleaning up connection pool [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-29 15:50:09 DEBUG BootstrapServiceRegistryImpl:295 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2021-06-29 15:51:08 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 15:51:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-06-29 15:51:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-06-29 15:51:08 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-06-29 15:51:08 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-06-29 15:51:08 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-06-29 15:51:08 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-06-29 15:51:08 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-06-29 15:51:08 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-06-29 15:51:08 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-06-29 15:51:08 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-06-29 15:51:08 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-06-29 15:51:08 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-06-29 15:51:08 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-06-29 15:51:08 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7c2b6087
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@7c2b6087
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7c2b6087
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1ef3efa8
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7446d8d5
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@37b70343
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@5b43fbf6
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@5b43fbf6
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5b43fbf6
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@6d304f9d
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@6d304f9d
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6d304f9d
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4cc6fa2a
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@4cc6fa2a
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4cc6fa2a
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@61884cb1
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@61884cb1
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@61884cb1
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@192d74fb
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@192d74fb
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@192d74fb
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@5bfa8cc5
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@5bfa8cc5
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5bfa8cc5
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@4a3329b9
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@4a3329b9
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4a3329b9
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3f053c80
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3f053c80
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3b956878
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3b956878
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@388ba540
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@388ba540
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7894f09b
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@242aa8d9
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@45cff11c
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@45cff11c
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@630cb4a4
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@630cb4a4
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@3e34ace1
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3e34ace1
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@5d018107
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@5d018107
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5ed731d0
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5ed731d0
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7e38a7fe
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7e38a7fe
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@73ff4fae
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@73ff4fae
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1433046b
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1433046b
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56f6d40b
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56f6d40b
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@62fad19
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@62fad19
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@773f7880
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@773f7880
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@6b54655f
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6b54655f
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6b54655f
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2756c0a7
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@2364305a
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2364305a
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2364305a
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3f1c5af9
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@1de5f0ef
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1de5f0ef
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@3ce3db41
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3ce3db41
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c56e013
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c56e013
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@34a1d21f
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@34a1d21f
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2cb3d0f7
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2cb3d0f7
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5860f3d7
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@2c7d121c
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@2c7d121c
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@2c7d121c
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@f27ea3
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@f27ea3
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@f27ea3
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@59d2103b
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@46f699d5
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@162be91c
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@162be91c
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@162be91c
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@f74e835
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@f74e835
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@f74e835
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@19fe4644
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@18245eb0
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@3a94964
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3a94964
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@2a3591c5
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@297ea53a
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@297ea53a
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@2ed3b1f5
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2ed3b1f5
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7651218e
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@24faea88
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3faf2e7d
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@423e4cbb
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@423e4cbb
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1536602f
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4ebea12c
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2a1edad4
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6256ac4f
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@44c79f32
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7fcbe147
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@235f4c10
2021-06-29 15:51:09 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@743cb8e0
2021-06-29 15:51:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-06-29 15:51:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-06-29 15:51:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 15:51:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 15:51:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-06-29 15:51:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-06-29 15:51:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-06-29 15:51:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 15:51:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-06-29 15:51:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-06-29 15:51:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-06-29 15:51:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-06-29 15:51:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 15:51:09 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-06-29 15:51:09 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-06-29 15:51:09 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-29 15:51:09 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, user=social}
2021-06-29 15:51:09 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-06-29 15:51:09 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-06-29 15:51:09 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-06-29 15:51:09 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-06-29 15:51:09 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-06-29 15:51:09 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-06-29 15:51:09 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-06-29 15:51:09 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-06-29 15:51:10 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-06-29 15:51:10 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@705f83a7
2021-06-29 15:51:10 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@705f83a7
2021-06-29 15:51:10 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@2cb3d0f7
2021-06-29 15:51:10 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2e34384c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3051e0b2]
2021-06-29 15:51:10 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-06-29 15:51:10 DEBUG QueryBinder:80 - Binding named query: getUsersLikedPosts => select u.likePosts from User u where u.id = :id
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 15:51:10 DEBUG EntityBinder:430 - Import with entity name User
2021-06-29 15:51:10 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-06-29 15:51:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-06-29 15:51:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-06-29 15:51:10 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-06-29 15:51:10 DEBUG PropertyBinder:266 - Building property id
2021-06-29 15:51:10 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-06-29 15:51:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-06-29 15:51:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-06-29 15:51:10 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-06-29 15:51:10 DEBUG PropertyBinder:266 - Building property email
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-06-29 15:51:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-06-29 15:51:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-06-29 15:51:10 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-06-29 15:51:10 DEBUG PropertyBinder:266 - Building property firstName
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-06-29 15:51:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-06-29 15:51:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-06-29 15:51:10 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-06-29 15:51:10 DEBUG PropertyBinder:266 - Building property lastName
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-29 15:51:10 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-06-29 15:51:10 DEBUG PropertyBinder:266 - Building property likePosts
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-06-29 15:51:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-06-29 15:51:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-06-29 15:51:10 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-06-29 15:51:10 DEBUG PropertyBinder:266 - Building property password
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:51:10 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-06-29 15:51:10 DEBUG PropertyBinder:266 - Building property posts
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-06-29 15:51:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-06-29 15:51:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-06-29 15:51:10 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-06-29 15:51:10 DEBUG PropertyBinder:266 - Building property username
2021-06-29 15:51:10 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-06-29 15:51:10 DEBUG QueryBinder:138 - Binding named native query: getUsersThatLiked => select p.users from Post p where p.post_id = :id
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 15:51:10 DEBUG EntityBinder:430 - Import with entity name Post
2021-06-29 15:51:10 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-06-29 15:51:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-06-29 15:51:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-06-29 15:51:10 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-06-29 15:51:10 DEBUG PropertyBinder:266 - Building property postId
2021-06-29 15:51:10 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 15:51:10 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-06-29 15:51:10 DEBUG PropertyBinder:266 - Building property likes
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-06-29 15:51:10 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-06-29 15:51:10 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-06-29 15:51:10 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-06-29 15:51:10 DEBUG PropertyBinder:266 - Building property postContent
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 15:51:10 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-06-29 15:51:10 DEBUG PropertyBinder:266 - Building property user
2021-06-29 15:51:10 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-06-29 15:51:10 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-06-29 15:51:10 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-06-29 15:51:10 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-06-29 15:51:10 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-06-29 15:51:10 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-06-29 15:51:10 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-06-29 15:51:10 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-06-29 15:51:10 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-06-29 15:51:10 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-06-29 15:51:10 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-06-29 15:51:10 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-06-29 15:51:10 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-29 15:51:10 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-29 15:51:10 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-06-29 15:51:10 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-06-29 15:51:10 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-06-29 15:51:10 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-06-29 15:51:10 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-06-29 15:51:10 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-06-29 15:51:10 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-06-29 15:51:10 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-06-29 15:51:10 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-06-29 15:51:10 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-06-29 15:51:10 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:51:10 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-29 15:51:10 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:51:10 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:51:10 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-29 15:51:10 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:51:10 DEBUG SessionFactoryImpl:196 - Building session factory
2021-06-29 15:51:10 DEBUG Settings:70 - SessionFactory name : null
2021-06-29 15:51:10 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-06-29 15:51:10 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-06-29 15:51:10 DEBUG Settings:74 - Statistics: disabled
2021-06-29 15:51:10 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-06-29 15:51:10 DEBUG Settings:77 - Default entity-mode: pojo
2021-06-29 15:51:10 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-06-29 15:51:10 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-06-29 15:51:10 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-06-29 15:51:10 DEBUG Settings:82 - Default batch fetch size: -1
2021-06-29 15:51:10 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-06-29 15:51:10 DEBUG Settings:84 - Default null ordering: NONE
2021-06-29 15:51:10 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-06-29 15:51:10 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-06-29 15:51:10 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-06-29 15:51:10 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-06-29 15:51:10 DEBUG Settings:92 - Query language substitutions: {}
2021-06-29 15:51:10 DEBUG Settings:93 - Named query checking : enabled
2021-06-29 15:51:10 DEBUG Settings:95 - Second-level cache: disabled
2021-06-29 15:51:10 DEBUG Settings:96 - Second-level query cache: disabled
2021-06-29 15:51:10 DEBUG Settings:97 - Second-level query cache factory: null
2021-06-29 15:51:10 DEBUG Settings:98 - Second-level cache region prefix: null
2021-06-29 15:51:10 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-06-29 15:51:10 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-06-29 15:51:10 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-06-29 15:51:10 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-06-29 15:51:10 DEBUG Settings:104 - JDBC batch size: 15
2021-06-29 15:51:10 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-06-29 15:51:10 DEBUG Settings:106 - Scrollable result sets: enabled
2021-06-29 15:51:10 DEBUG Settings:107 - Wrap result sets: disabled
2021-06-29 15:51:10 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-06-29 15:51:10 DEBUG Settings:109 - JDBC result set fetch size: null
2021-06-29 15:51:10 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-06-29 15:51:10 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-06-29 15:51:10 DEBUG Settings:113 - JPA compliance - query : 
2021-06-29 15:51:10 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-06-29 15:51:10 DEBUG Settings:115 - JPA compliance - lists : 
2021-06-29 15:51:10 DEBUG Settings:116 - JPA compliance - transactions : 
2021-06-29 15:51:10 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-06-29 15:51:10 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\Documents\Revtature\SocialHubWeek4\target\classes;C:\Program Files\apache-tomcat-9.0.43\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.43\lib\ecj-4.18.jar;C:\Program Files\apache-tomcat-9.0.43\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.43\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin, sun.java.command=SocialHubDriver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=15.0.1, user.dir=D:\Documents\Revtature\SocialHubWeek4, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4af70944, java.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Java\jdk1.8.0_281;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\WorldPainter;C:\Program Files\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\OpenSSL-Win64\bin\;C:\Program Files\apache-maven-3.6.3\bin;C:\Program Files\nodejs\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Java\jdk1.8.0_281\bin;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\MongoDB;C:\Program Files\apache-maven-3.6.3\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Users\Ethan\AppData\Local\GitHubDesktop\bin;C:\Program Files\sts-4.9.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=59.0}
2021-06-29 15:51:10 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-06-29 15:51:10 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-06-29 15:51:10 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-06-29 15:51:10 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-06-29 15:51:10 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-06-29 15:51:10 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-06-29 15:51:10 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-06-29 15:51:10 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-06-29 15:51:10 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-06-29 15:51:10 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-06-29 15:51:10 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-06-29 15:51:10 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-06-29 15:51:10 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-06-29 15:51:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:51:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:51:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:51:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:51:10 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-06-29 15:51:10 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-06-29 15:51:10 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2e34384c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@73809e7]
2021-06-29 15:51:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:51:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:51:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:51:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:51:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:51:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:51:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:51:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:51:10 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-06-29 15:51:10 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-06-29 15:51:10 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-06-29 15:51:10 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-06-29 15:51:10 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-06-29 15:51:10 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-06-29 15:51:10 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-06-29 15:51:10 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-06-29 15:51:10 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-06-29 15:51:10 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-06-29 15:51:10 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-06-29 15:51:10 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-06-29 15:51:10 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-06-29 15:51:10 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-06-29 15:51:10 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-06-29 15:51:10 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-06-29 15:51:10 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-06-29 15:51:10 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-06-29 15:51:10 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-06-29 15:51:10 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-06-29 15:51:10 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c61eda5]
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ad99cf3]
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@729c8063]
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e739bf]
2021-06-29 15:51:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:51:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:51:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-29 15:51:10 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27dc627a]
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@37a9b687]
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@525b1b70]
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16d07cf3]
2021-06-29 15:51:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:51:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:51:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-29 15:51:10 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-29 15:51:10 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-29 15:51:10 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-29 15:51:10 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-06-29 15:51:10 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-06-29 15:51:10 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-06-29 15:51:10 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 15:51:10 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-06-29 15:51:10 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f9ab79d]
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10a18e3e]
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69364b2d]
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53aa2fc9]
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4792f119]
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:51:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:51:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:51:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-29 15:51:10 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bde57ab]
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23ca36d]
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52f6900a]
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7bbcf6f0]
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b80e5a9]
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:51:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:51:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:51:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-29 15:51:10 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-29 15:51:10 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 15:51:10 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4ef4f627]
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ea56bdb]
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@477021ee]
2021-06-29 15:51:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:51:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:51:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-29 15:51:10 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e80a001]
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@624b523]
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@577bf0aa]
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7455dacb]
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-06-29 15:51:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:51:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:51:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-29 15:51:10 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4fba8eec]
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52bd9a27]
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@73ca34e7]
2021-06-29 15:51:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d98e41b]
2021-06-29 15:51:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:51:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:51:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:51:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-06-29 15:51:10 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-06-29 15:51:11 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4b55ff0a] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 15:51:11 DEBUG Table:516 - No alter strings for table : post_likes_junction
2021-06-29 15:51:11 DEBUG Table:516 - No alter strings for table : posts
2021-06-29 15:51:11 DEBUG Table:516 - No alter strings for table : users
2021-06-29 15:51:11 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-06-29 15:51:11 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-06-29 15:51:11 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 15:51:11 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 15:51:11 DEBUG NamedQueryRepository:151 - Checking 1 named HQL queries
2021-06-29 15:51:11 DEBUG NamedQueryRepository:155 - Checking named query: getUsersLikedPosts
2021-06-29 15:51:11 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-06-29 15:51:11 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@113f9078
2021-06-29 15:51:11 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-29 15:51:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:51:11 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'likePosts'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2021-06-29 15:51:11 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-06-29 15:51:11 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.User (u) -> user0_
2021-06-29 15:51:11 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-29 15:51:11 DEBUG DotNode:689 - getDataType() : likePosts -> org.hibernate.type.SetType(com.example.models.User.likePosts)
2021-06-29 15:51:11 DEBUG FromElementFactory:404 - createManyToMany() : path = u.likePosts role = com.example.models.User.likePosts associatedEntityName = com.example.models.Post
2021-06-29 15:51:11 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.Post (<no alias>) -> post2_
2021-06-29 15:51:11 DEBUG FromClause:287 - addJoinByPathMap() : u.likePosts -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
2021-06-29 15:51:11 DEBUG DotNode:342 - dereferenceCollection() : Created new FROM element for u.likePosts : post_likes_junction post2_
2021-06-29 15:51:11 DEBUG FromReferenceNode:60 - Resolved : u.likePosts -> .
2021-06-29 15:51:11 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-29 15:51:11 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@61884cb1
2021-06-29 15:51:11 DEBUG FromReferenceNode:60 - Resolved : u.id -> user0_.user_id
2021-06-29 15:51:11 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-06-29 15:51:11 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} ( . user0_.user_id likePosts ) ) ( FromClause{level=1} ( users user0_ post_likes_junction post2_ ) ) ( where ( = ( user0_.user_id user0_.user_id id ) ? ) ) )
2021-06-29 15:51:11 DEBUG JoinProcessor:192 - Using FROM fragment [users user0_]
2021-06-29 15:51:11 DEBUG JoinProcessor:192 - Using FROM fragment [inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id]
2021-06-29 15:51:11 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-06-29 15:51:11 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (post_likes_junction,posts,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'post2_.post_id as post_id1_1_' {propertyName=likePosts,dereferenceType=COLLECTION,getPropertyPath=likePosts,path=u.likePosts,tableAlias=post2_,className=com.example.models.Post,classAlias=null}
    |  |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
    |  |  \-[IDENT] IdentNode: 'likePosts' {originalText=likePosts}
    |  \-[SQL_TOKEN] SqlFragment: 'post2_.content as content2_1_, post2_.user_id as user_id3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_, post2_], fromElementsByPath=[u.likePosts], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=com.example.models.User.likePosts,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=com.example.models.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@61884cb1}

2021-06-29 15:51:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:51:11 DEBUG QueryTranslatorImpl:254 - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-29 15:51:11 DEBUG QueryTranslatorImpl:255 - SQL: select post2_.post_id as post_id1_1_, post2_.content as content2_1_, post2_.user_id as user_id3_1_ from users user0_ inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id where user0_.user_id=?
2021-06-29 15:51:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:51:11 DEBUG NamedQueryRepository:167 - Checking 1 named SQL queries
2021-06-29 15:51:11 DEBUG NamedQueryRepository:171 - Checking named SQL query: getUsersThatLiked
2021-06-29 15:51:11 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6de7778f
2021-06-29 15:51:11 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 516bb871-1a2b-45f2-87a5-4bdf62b57023 (<unnamed>)
2021-06-29 15:51:11 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-06-29 15:51:11 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.models.User where username=mortysmith4074
2021-06-29 15:51:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:51:11 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[IDENT] Node: 'mortysmith4074'

2021-06-29 15:51:11 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-06-29 15:51:11 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.User (<no alias>) -> user0_
2021-06-29 15:51:11 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-06-29 15:51:11 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@388ba540
2021-06-29 15:51:11 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> user0_.username
2021-06-29 15:51:11 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-06-29 15:51:11 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username {synthetic-alias} username ) mortysmith4074 ) ) )
2021-06-29 15:51:11 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-06-29 15:51:11 DEBUG JoinProcessor:192 - Using FROM fragment [users user0_]
2021-06-29 15:51:11 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-06-29 15:51:11 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.example.models.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[IDENT] IdentNode: 'mortysmith4074' {originalText=mortysmith4074}

2021-06-29 15:51:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:51:11 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.models.User where username=mortysmith4074
2021-06-29 15:51:11 DEBUG QueryTranslatorImpl:255 - SQL: select user0_.user_id as user_id1_2_, user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_ from users user0_ where user0_.username=mortysmith4074
2021-06-29 15:51:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:51:11 DEBUG SQL:94 - select user0_.user_id as user_id1_2_, user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_ from users user0_ where user0_.username=mortysmith4074
2021-06-29 15:51:11 DEBUG SqlExceptionHelper:126 - could not extract ResultSet [n/a]
org.postgresql.util.PSQLException: ERROR: column "mortysmith4074" does not exist
  Position: 240
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2552)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2284)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:322)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:114)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2173)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1936)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1898)
	at org.hibernate.loader.Loader.doQuery(Loader.java:937)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:340)
	at org.hibernate.loader.Loader.doList(Loader.java:2695)
	at org.hibernate.loader.Loader.doList(Loader.java:2678)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2512)
	at org.hibernate.loader.Loader.list(Loader.java:2507)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:504)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:396)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:224)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1561)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1529)
	at org.hibernate.query.internal.AbstractProducedQuery.uniqueResult(AbstractProducedQuery.java:1571)
	at com.example.dao.UserDaoHibernate.getUserByUserName(UserDaoHibernate.java:31)
	at com.example.services.UserService.signIn(UserService.java:39)
	at SocialHubDriver.main(SocialHubDriver.java:86)
2021-06-29 15:51:11 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42703
2021-06-29 15:51:11 ERROR SqlExceptionHelper:142 - ERROR: column "mortysmith4074" does not exist
  Position: 240
2021-06-29 15:51:11 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 15:51:11 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-06-29 15:52:33 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 15:52:33 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-06-29 15:52:33 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-06-29 15:52:33 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-06-29 15:52:34 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-06-29 15:52:34 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-06-29 15:52:34 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-06-29 15:52:34 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-06-29 15:52:34 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-06-29 15:52:34 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-06-29 15:52:34 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-06-29 15:52:34 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-06-29 15:52:34 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-06-29 15:52:34 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-06-29 15:52:34 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5778826f
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61bcd567
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1252b961
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@28d6290
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@28d6290
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77602954
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77602954
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7adf16aa
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71ae31b0
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@6a66a204
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6a66a204
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@7e3f95fe
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e3f95fe
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@107ed6fc
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@107ed6fc
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@297ea53a
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@297ea53a
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3efe7086
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3efe7086
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7651218e
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7651218e
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7813cb11
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7813cb11
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3faf2e7d
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3faf2e7d
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68759011
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68759011
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@2a1edad4
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2a1edad4
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@757d6814
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@757d6814
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@716a7124
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1a1da881
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@3f2ef586
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3f2ef586
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4e76dac
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e76dac
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d8bbcdc
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d8bbcdc
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@4f936da8
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4f936da8
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a9f80d3
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@4602c2a9
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@29a60c27
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5f3b9c57
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@35fe2125
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@47da3952
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@47da3952
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5fd62371
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@1568159
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1568159
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@303e3593
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@303e3593
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5c48c0c0
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3f23a3a0
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3a4e343
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@7f69d591
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f69d591
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@71c5b236
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2cab9998
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2f7a7219
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@669513d8
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3a1d593e
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a8a60bc
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@361c294e
2021-06-29 15:52:34 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7859e786
2021-06-29 15:52:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-06-29 15:52:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-06-29 15:52:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 15:52:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 15:52:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-06-29 15:52:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-06-29 15:52:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-06-29 15:52:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 15:52:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-06-29 15:52:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-06-29 15:52:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-06-29 15:52:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-06-29 15:52:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 15:52:34 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-06-29 15:52:34 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-06-29 15:52:34 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-29 15:52:34 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, user=social}
2021-06-29 15:52:34 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-06-29 15:52:34 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-06-29 15:52:34 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-06-29 15:52:35 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-06-29 15:52:35 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-06-29 15:52:35 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-06-29 15:52:35 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-06-29 15:52:35 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-06-29 15:52:35 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-06-29 15:52:35 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@77c7ed8e
2021-06-29 15:52:35 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@77c7ed8e
2021-06-29 15:52:35 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:52:35 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@616b241a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b8e246c]
2021-06-29 15:52:35 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-06-29 15:52:35 DEBUG QueryBinder:80 - Binding named query: getUsersLikedPosts => select u.likePosts from User u where u.id = :id
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 15:52:35 DEBUG EntityBinder:430 - Import with entity name User
2021-06-29 15:52:35 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-06-29 15:52:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-06-29 15:52:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-06-29 15:52:35 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-06-29 15:52:35 DEBUG PropertyBinder:266 - Building property id
2021-06-29 15:52:35 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-06-29 15:52:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-06-29 15:52:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-06-29 15:52:35 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-06-29 15:52:35 DEBUG PropertyBinder:266 - Building property email
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-06-29 15:52:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-06-29 15:52:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-06-29 15:52:35 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-06-29 15:52:35 DEBUG PropertyBinder:266 - Building property firstName
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-06-29 15:52:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-06-29 15:52:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-06-29 15:52:35 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-06-29 15:52:35 DEBUG PropertyBinder:266 - Building property lastName
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-29 15:52:35 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-06-29 15:52:35 DEBUG PropertyBinder:266 - Building property likePosts
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-06-29 15:52:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-06-29 15:52:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-06-29 15:52:35 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-06-29 15:52:35 DEBUG PropertyBinder:266 - Building property password
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:52:35 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-06-29 15:52:35 DEBUG PropertyBinder:266 - Building property posts
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-06-29 15:52:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-06-29 15:52:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-06-29 15:52:35 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-06-29 15:52:35 DEBUG PropertyBinder:266 - Building property username
2021-06-29 15:52:35 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-06-29 15:52:35 DEBUG QueryBinder:138 - Binding named native query: getUsersThatLiked => select p.users from Post p where p.post_id = :id
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 15:52:35 DEBUG EntityBinder:430 - Import with entity name Post
2021-06-29 15:52:35 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-06-29 15:52:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-06-29 15:52:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-06-29 15:52:35 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-06-29 15:52:35 DEBUG PropertyBinder:266 - Building property postId
2021-06-29 15:52:35 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 15:52:35 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-06-29 15:52:35 DEBUG PropertyBinder:266 - Building property likes
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-06-29 15:52:35 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-06-29 15:52:35 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-06-29 15:52:35 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-06-29 15:52:35 DEBUG PropertyBinder:266 - Building property postContent
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 15:52:35 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-06-29 15:52:35 DEBUG PropertyBinder:266 - Building property user
2021-06-29 15:52:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-06-29 15:52:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-06-29 15:52:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-06-29 15:52:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-06-29 15:52:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-06-29 15:52:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-06-29 15:52:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-06-29 15:52:35 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-06-29 15:52:35 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-06-29 15:52:35 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-06-29 15:52:35 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-06-29 15:52:35 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-06-29 15:52:35 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-29 15:52:35 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-29 15:52:35 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-06-29 15:52:35 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-06-29 15:52:35 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-06-29 15:52:35 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-06-29 15:52:35 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-06-29 15:52:35 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-06-29 15:52:35 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-06-29 15:52:35 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-06-29 15:52:35 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-06-29 15:52:35 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-06-29 15:52:35 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:52:35 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-29 15:52:35 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:52:35 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:52:35 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-29 15:52:35 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:52:35 DEBUG SessionFactoryImpl:196 - Building session factory
2021-06-29 15:52:35 DEBUG Settings:70 - SessionFactory name : null
2021-06-29 15:52:35 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-06-29 15:52:35 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-06-29 15:52:35 DEBUG Settings:74 - Statistics: disabled
2021-06-29 15:52:35 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-06-29 15:52:35 DEBUG Settings:77 - Default entity-mode: pojo
2021-06-29 15:52:35 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-06-29 15:52:35 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-06-29 15:52:35 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-06-29 15:52:35 DEBUG Settings:82 - Default batch fetch size: -1
2021-06-29 15:52:35 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-06-29 15:52:35 DEBUG Settings:84 - Default null ordering: NONE
2021-06-29 15:52:35 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-06-29 15:52:35 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-06-29 15:52:35 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-06-29 15:52:35 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-06-29 15:52:35 DEBUG Settings:92 - Query language substitutions: {}
2021-06-29 15:52:35 DEBUG Settings:93 - Named query checking : enabled
2021-06-29 15:52:35 DEBUG Settings:95 - Second-level cache: disabled
2021-06-29 15:52:35 DEBUG Settings:96 - Second-level query cache: disabled
2021-06-29 15:52:35 DEBUG Settings:97 - Second-level query cache factory: null
2021-06-29 15:52:35 DEBUG Settings:98 - Second-level cache region prefix: null
2021-06-29 15:52:35 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-06-29 15:52:35 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-06-29 15:52:35 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-06-29 15:52:35 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-06-29 15:52:35 DEBUG Settings:104 - JDBC batch size: 15
2021-06-29 15:52:35 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-06-29 15:52:35 DEBUG Settings:106 - Scrollable result sets: enabled
2021-06-29 15:52:35 DEBUG Settings:107 - Wrap result sets: disabled
2021-06-29 15:52:35 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-06-29 15:52:35 DEBUG Settings:109 - JDBC result set fetch size: null
2021-06-29 15:52:35 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-06-29 15:52:35 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-06-29 15:52:35 DEBUG Settings:113 - JPA compliance - query : 
2021-06-29 15:52:35 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-06-29 15:52:35 DEBUG Settings:115 - JPA compliance - lists : 
2021-06-29 15:52:35 DEBUG Settings:116 - JPA compliance - transactions : 
2021-06-29 15:52:35 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-06-29 15:52:35 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\Documents\Revtature\SocialHubWeek4\target\classes;C:\Program Files\apache-tomcat-9.0.43\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.43\lib\ecj-4.18.jar;C:\Program Files\apache-tomcat-9.0.43\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.43\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin, sun.java.command=SocialHubDriver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=15.0.1, user.dir=D:\Documents\Revtature\SocialHubWeek4, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7ff35a3f, java.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Java\jdk1.8.0_281;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\WorldPainter;C:\Program Files\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\OpenSSL-Win64\bin\;C:\Program Files\apache-maven-3.6.3\bin;C:\Program Files\nodejs\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Java\jdk1.8.0_281\bin;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\MongoDB;C:\Program Files\apache-maven-3.6.3\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Users\Ethan\AppData\Local\GitHubDesktop\bin;C:\Program Files\sts-4.9.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=59.0}
2021-06-29 15:52:35 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-06-29 15:52:35 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-06-29 15:52:35 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-06-29 15:52:35 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-06-29 15:52:35 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-06-29 15:52:35 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-06-29 15:52:35 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-06-29 15:52:36 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-06-29 15:52:36 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-06-29 15:52:36 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-06-29 15:52:36 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-06-29 15:52:36 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-06-29 15:52:36 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-06-29 15:52:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:52:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:52:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:52:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:52:36 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-06-29 15:52:36 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-06-29 15:52:36 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@616b241a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@15f35bc3]
2021-06-29 15:52:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:52:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:52:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:52:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:52:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:52:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:52:36 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:52:36 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:52:36 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-06-29 15:52:36 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-06-29 15:52:36 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-06-29 15:52:36 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-06-29 15:52:36 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-06-29 15:52:36 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-06-29 15:52:36 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-06-29 15:52:36 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-06-29 15:52:36 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-06-29 15:52:36 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-06-29 15:52:36 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-06-29 15:52:36 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-06-29 15:52:36 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-06-29 15:52:36 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-06-29 15:52:36 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-06-29 15:52:36 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-06-29 15:52:36 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-06-29 15:52:36 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-06-29 15:52:36 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-06-29 15:52:36 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-06-29 15:52:36 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2519026b]
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d6f6860]
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e900e1a]
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b425577]
2021-06-29 15:52:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:52:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:52:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-29 15:52:36 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5696c927]
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7eeb38b2]
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d54d0f5]
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d6bff89]
2021-06-29 15:52:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:52:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:52:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-29 15:52:36 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-29 15:52:36 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-29 15:52:36 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-29 15:52:36 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-06-29 15:52:36 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-06-29 15:52:36 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-06-29 15:52:36 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 15:52:36 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-06-29 15:52:36 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60e1d87c]
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@87d9a01]
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e5b621b]
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10177794]
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e5c2463]
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:52:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:52:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:52:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-29 15:52:36 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a950a3b]
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@647b9364]
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b6bccb4]
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49edcb30]
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59303963]
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:52:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:52:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:52:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-29 15:52:36 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-29 15:52:36 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 15:52:36 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@798deee8]
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@96897c8]
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32a72c4]
2021-06-29 15:52:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:52:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:52:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-29 15:52:36 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f7a2a5]
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42ed89da]
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e180aaf]
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7015ebef]
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-06-29 15:52:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:52:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:52:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-29 15:52:36 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b415f5f]
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66749eea]
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e590b]
2021-06-29 15:52:36 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42ef042a]
2021-06-29 15:52:36 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:52:36 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:52:36 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:52:36 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-06-29 15:52:36 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-06-29 15:52:36 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7926352f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 15:52:36 DEBUG Table:516 - No alter strings for table : post_likes_junction
2021-06-29 15:52:36 DEBUG Table:516 - No alter strings for table : posts
2021-06-29 15:52:36 DEBUG Table:516 - No alter strings for table : users
2021-06-29 15:52:36 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-06-29 15:52:36 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-06-29 15:52:36 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 15:52:36 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 15:52:36 DEBUG NamedQueryRepository:151 - Checking 1 named HQL queries
2021-06-29 15:52:36 DEBUG NamedQueryRepository:155 - Checking named query: getUsersLikedPosts
2021-06-29 15:52:36 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-06-29 15:52:36 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@79ecc507
2021-06-29 15:52:36 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-29 15:52:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:52:36 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'likePosts'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2021-06-29 15:52:36 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-06-29 15:52:36 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.User (u) -> user0_
2021-06-29 15:52:36 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-29 15:52:36 DEBUG DotNode:689 - getDataType() : likePosts -> org.hibernate.type.SetType(com.example.models.User.likePosts)
2021-06-29 15:52:36 DEBUG FromElementFactory:404 - createManyToMany() : path = u.likePosts role = com.example.models.User.likePosts associatedEntityName = com.example.models.Post
2021-06-29 15:52:36 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.Post (<no alias>) -> post2_
2021-06-29 15:52:36 DEBUG FromClause:287 - addJoinByPathMap() : u.likePosts -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
2021-06-29 15:52:36 DEBUG DotNode:342 - dereferenceCollection() : Created new FROM element for u.likePosts : post_likes_junction post2_
2021-06-29 15:52:36 DEBUG FromReferenceNode:60 - Resolved : u.likePosts -> .
2021-06-29 15:52:36 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-29 15:52:36 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:52:36 DEBUG FromReferenceNode:60 - Resolved : u.id -> user0_.user_id
2021-06-29 15:52:36 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-06-29 15:52:36 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} ( . user0_.user_id likePosts ) ) ( FromClause{level=1} ( users user0_ post_likes_junction post2_ ) ) ( where ( = ( user0_.user_id user0_.user_id id ) ? ) ) )
2021-06-29 15:52:36 DEBUG JoinProcessor:192 - Using FROM fragment [users user0_]
2021-06-29 15:52:36 DEBUG JoinProcessor:192 - Using FROM fragment [inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id]
2021-06-29 15:52:36 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-06-29 15:52:36 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (post_likes_junction,posts,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'post2_.post_id as post_id1_1_' {propertyName=likePosts,dereferenceType=COLLECTION,getPropertyPath=likePosts,path=u.likePosts,tableAlias=post2_,className=com.example.models.Post,classAlias=null}
    |  |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
    |  |  \-[IDENT] IdentNode: 'likePosts' {originalText=likePosts}
    |  \-[SQL_TOKEN] SqlFragment: 'post2_.content as content2_1_, post2_.user_id as user_id3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_, post2_], fromElementsByPath=[u.likePosts], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=com.example.models.User.likePosts,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=com.example.models.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@5b080f3a}

2021-06-29 15:52:36 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:52:37 DEBUG QueryTranslatorImpl:254 - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-29 15:52:37 DEBUG QueryTranslatorImpl:255 - SQL: select post2_.post_id as post_id1_1_, post2_.content as content2_1_, post2_.user_id as user_id3_1_ from users user0_ inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id where user0_.user_id=?
2021-06-29 15:52:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:52:37 DEBUG NamedQueryRepository:167 - Checking 1 named SQL queries
2021-06-29 15:52:37 DEBUG NamedQueryRepository:171 - Checking named SQL query: getUsersThatLiked
2021-06-29 15:52:37 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@29bbc391
2021-06-29 15:52:37 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 1b71a98c-736b-493c-b81b-51798790f5ab (<unnamed>)
2021-06-29 15:52:37 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-06-29 15:52:37 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.models.User where username=MortySmith4074
2021-06-29 15:52:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:52:37 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[IDENT] Node: 'MortySmith4074'

2021-06-29 15:52:37 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-06-29 15:52:37 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.User (<no alias>) -> user0_
2021-06-29 15:52:37 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-06-29 15:52:37 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:52:37 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> user0_.username
2021-06-29 15:52:37 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-06-29 15:52:37 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username {synthetic-alias} username ) MortySmith4074 ) ) )
2021-06-29 15:52:37 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-06-29 15:52:37 DEBUG JoinProcessor:192 - Using FROM fragment [users user0_]
2021-06-29 15:52:37 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-06-29 15:52:37 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.example.models.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[IDENT] IdentNode: 'MortySmith4074' {originalText=MortySmith4074}

2021-06-29 15:52:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:52:37 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.models.User where username=MortySmith4074
2021-06-29 15:52:37 DEBUG QueryTranslatorImpl:255 - SQL: select user0_.user_id as user_id1_2_, user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_ from users user0_ where user0_.username=MortySmith4074
2021-06-29 15:52:37 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:52:37 DEBUG SQL:94 - select user0_.user_id as user_id1_2_, user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_ from users user0_ where user0_.username=MortySmith4074
2021-06-29 15:52:37 DEBUG SqlExceptionHelper:126 - could not extract ResultSet [n/a]
org.postgresql.util.PSQLException: ERROR: column "mortysmith4074" does not exist
  Position: 240
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2552)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2284)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:322)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:114)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2173)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1936)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1898)
	at org.hibernate.loader.Loader.doQuery(Loader.java:937)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:340)
	at org.hibernate.loader.Loader.doList(Loader.java:2695)
	at org.hibernate.loader.Loader.doList(Loader.java:2678)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2512)
	at org.hibernate.loader.Loader.list(Loader.java:2507)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:504)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:396)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:224)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1561)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1529)
	at org.hibernate.query.internal.AbstractProducedQuery.uniqueResult(AbstractProducedQuery.java:1571)
	at com.example.dao.UserDaoHibernate.getUserByUserName(UserDaoHibernate.java:31)
	at com.example.services.UserService.signIn(UserService.java:39)
	at SocialHubDriver.main(SocialHubDriver.java:86)
2021-06-29 15:52:37 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42703
2021-06-29 15:52:37 ERROR SqlExceptionHelper:142 - ERROR: column "mortysmith4074" does not exist
  Position: 240
2021-06-29 15:52:37 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 15:52:37 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-06-29 15:53:07 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 15:53:07 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-06-29 15:53:07 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-06-29 15:53:07 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-06-29 15:53:08 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-06-29 15:53:08 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-06-29 15:53:08 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-06-29 15:53:08 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-06-29 15:53:08 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-06-29 15:53:08 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-06-29 15:53:08 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-06-29 15:53:08 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-06-29 15:53:08 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-06-29 15:53:08 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-06-29 15:53:08 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5778826f
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61bcd567
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1252b961
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@28d6290
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@28d6290
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77602954
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77602954
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7adf16aa
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71ae31b0
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@6a66a204
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6a66a204
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@7e3f95fe
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e3f95fe
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@107ed6fc
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@107ed6fc
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@297ea53a
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@297ea53a
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3efe7086
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3efe7086
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7651218e
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7651218e
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7813cb11
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7813cb11
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3faf2e7d
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3faf2e7d
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68759011
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68759011
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@2a1edad4
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2a1edad4
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@757d6814
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@757d6814
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@716a7124
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1a1da881
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@3f2ef586
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3f2ef586
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4e76dac
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e76dac
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d8bbcdc
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d8bbcdc
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@4f936da8
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4f936da8
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a9f80d3
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@4602c2a9
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@29a60c27
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5f3b9c57
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@35fe2125
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@47da3952
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@47da3952
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5fd62371
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@1568159
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1568159
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@303e3593
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@303e3593
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5c48c0c0
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3f23a3a0
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3a4e343
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@7f69d591
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f69d591
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@71c5b236
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2cab9998
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2f7a7219
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@669513d8
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3a1d593e
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a8a60bc
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@361c294e
2021-06-29 15:53:08 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7859e786
2021-06-29 15:53:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-06-29 15:53:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-06-29 15:53:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 15:53:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 15:53:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-06-29 15:53:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-06-29 15:53:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-06-29 15:53:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 15:53:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-06-29 15:53:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-06-29 15:53:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-06-29 15:53:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-06-29 15:53:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 15:53:08 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-06-29 15:53:08 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-06-29 15:53:08 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-29 15:53:08 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, user=social}
2021-06-29 15:53:08 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-06-29 15:53:08 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-06-29 15:53:08 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-06-29 15:53:09 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-06-29 15:53:09 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-06-29 15:53:09 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-06-29 15:53:09 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-06-29 15:53:09 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-06-29 15:53:09 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-06-29 15:53:09 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@77c7ed8e
2021-06-29 15:53:09 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@77c7ed8e
2021-06-29 15:53:09 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:53:09 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@616b241a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b8e246c]
2021-06-29 15:53:09 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-06-29 15:53:09 DEBUG QueryBinder:80 - Binding named query: getUsersLikedPosts => select u.likePosts from User u where u.id = :id
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 15:53:09 DEBUG EntityBinder:430 - Import with entity name User
2021-06-29 15:53:09 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-06-29 15:53:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-06-29 15:53:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-06-29 15:53:09 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-06-29 15:53:09 DEBUG PropertyBinder:266 - Building property id
2021-06-29 15:53:09 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-06-29 15:53:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-06-29 15:53:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-06-29 15:53:09 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-06-29 15:53:09 DEBUG PropertyBinder:266 - Building property email
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-06-29 15:53:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-06-29 15:53:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-06-29 15:53:09 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-06-29 15:53:09 DEBUG PropertyBinder:266 - Building property firstName
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-06-29 15:53:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-06-29 15:53:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-06-29 15:53:09 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-06-29 15:53:09 DEBUG PropertyBinder:266 - Building property lastName
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-29 15:53:09 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-06-29 15:53:09 DEBUG PropertyBinder:266 - Building property likePosts
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-06-29 15:53:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-06-29 15:53:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-06-29 15:53:09 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-06-29 15:53:09 DEBUG PropertyBinder:266 - Building property password
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:53:09 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-06-29 15:53:09 DEBUG PropertyBinder:266 - Building property posts
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-06-29 15:53:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-06-29 15:53:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-06-29 15:53:09 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-06-29 15:53:09 DEBUG PropertyBinder:266 - Building property username
2021-06-29 15:53:09 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-06-29 15:53:09 DEBUG QueryBinder:138 - Binding named native query: getUsersThatLiked => select p.users from Post p where p.post_id = :id
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 15:53:09 DEBUG EntityBinder:430 - Import with entity name Post
2021-06-29 15:53:09 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-06-29 15:53:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-06-29 15:53:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-06-29 15:53:09 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-06-29 15:53:09 DEBUG PropertyBinder:266 - Building property postId
2021-06-29 15:53:09 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 15:53:09 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-06-29 15:53:09 DEBUG PropertyBinder:266 - Building property likes
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-06-29 15:53:09 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-06-29 15:53:09 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-06-29 15:53:09 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-06-29 15:53:09 DEBUG PropertyBinder:266 - Building property postContent
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 15:53:09 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-06-29 15:53:09 DEBUG PropertyBinder:266 - Building property user
2021-06-29 15:53:09 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-06-29 15:53:09 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-06-29 15:53:09 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-06-29 15:53:09 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-06-29 15:53:09 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-06-29 15:53:09 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-06-29 15:53:09 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-06-29 15:53:09 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-06-29 15:53:09 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-06-29 15:53:09 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-06-29 15:53:09 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-06-29 15:53:09 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-06-29 15:53:09 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-29 15:53:09 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-29 15:53:09 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-06-29 15:53:09 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-06-29 15:53:09 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-06-29 15:53:09 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-06-29 15:53:09 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-06-29 15:53:09 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-06-29 15:53:09 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-06-29 15:53:09 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-06-29 15:53:09 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-06-29 15:53:09 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-06-29 15:53:09 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:53:09 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-29 15:53:09 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:53:09 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:53:09 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-29 15:53:09 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:53:09 DEBUG SessionFactoryImpl:196 - Building session factory
2021-06-29 15:53:09 DEBUG Settings:70 - SessionFactory name : null
2021-06-29 15:53:09 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-06-29 15:53:09 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-06-29 15:53:09 DEBUG Settings:74 - Statistics: disabled
2021-06-29 15:53:09 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-06-29 15:53:09 DEBUG Settings:77 - Default entity-mode: pojo
2021-06-29 15:53:09 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-06-29 15:53:09 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-06-29 15:53:09 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-06-29 15:53:09 DEBUG Settings:82 - Default batch fetch size: -1
2021-06-29 15:53:09 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-06-29 15:53:09 DEBUG Settings:84 - Default null ordering: NONE
2021-06-29 15:53:09 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-06-29 15:53:09 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-06-29 15:53:09 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-06-29 15:53:09 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-06-29 15:53:09 DEBUG Settings:92 - Query language substitutions: {}
2021-06-29 15:53:09 DEBUG Settings:93 - Named query checking : enabled
2021-06-29 15:53:09 DEBUG Settings:95 - Second-level cache: disabled
2021-06-29 15:53:09 DEBUG Settings:96 - Second-level query cache: disabled
2021-06-29 15:53:09 DEBUG Settings:97 - Second-level query cache factory: null
2021-06-29 15:53:09 DEBUG Settings:98 - Second-level cache region prefix: null
2021-06-29 15:53:09 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-06-29 15:53:09 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-06-29 15:53:09 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-06-29 15:53:09 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-06-29 15:53:09 DEBUG Settings:104 - JDBC batch size: 15
2021-06-29 15:53:09 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-06-29 15:53:09 DEBUG Settings:106 - Scrollable result sets: enabled
2021-06-29 15:53:09 DEBUG Settings:107 - Wrap result sets: disabled
2021-06-29 15:53:09 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-06-29 15:53:09 DEBUG Settings:109 - JDBC result set fetch size: null
2021-06-29 15:53:09 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-06-29 15:53:09 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-06-29 15:53:09 DEBUG Settings:113 - JPA compliance - query : 
2021-06-29 15:53:09 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-06-29 15:53:09 DEBUG Settings:115 - JPA compliance - lists : 
2021-06-29 15:53:09 DEBUG Settings:116 - JPA compliance - transactions : 
2021-06-29 15:53:09 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-06-29 15:53:09 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\Documents\Revtature\SocialHubWeek4\target\classes;C:\Program Files\apache-tomcat-9.0.43\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.43\lib\ecj-4.18.jar;C:\Program Files\apache-tomcat-9.0.43\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.43\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin, sun.java.command=SocialHubDriver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=15.0.1, user.dir=D:\Documents\Revtature\SocialHubWeek4, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@7ff35a3f, java.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Java\jdk1.8.0_281;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\WorldPainter;C:\Program Files\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\OpenSSL-Win64\bin\;C:\Program Files\apache-maven-3.6.3\bin;C:\Program Files\nodejs\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Java\jdk1.8.0_281\bin;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\MongoDB;C:\Program Files\apache-maven-3.6.3\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Users\Ethan\AppData\Local\GitHubDesktop\bin;C:\Program Files\sts-4.9.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=59.0}
2021-06-29 15:53:09 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-06-29 15:53:09 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-06-29 15:53:09 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-06-29 15:53:09 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-06-29 15:53:09 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-06-29 15:53:09 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-06-29 15:53:09 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-06-29 15:53:10 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-06-29 15:53:10 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-06-29 15:53:10 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-06-29 15:53:10 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-06-29 15:53:10 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-06-29 15:53:10 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-06-29 15:53:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:53:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:53:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:53:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:53:10 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-06-29 15:53:10 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-06-29 15:53:10 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@616b241a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@15f35bc3]
2021-06-29 15:53:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:53:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:53:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:53:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:53:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:53:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:53:10 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:53:10 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:53:10 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-06-29 15:53:10 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-06-29 15:53:10 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-06-29 15:53:10 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-06-29 15:53:10 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-06-29 15:53:10 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-06-29 15:53:10 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-06-29 15:53:10 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-06-29 15:53:10 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-06-29 15:53:10 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-06-29 15:53:10 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-06-29 15:53:10 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-06-29 15:53:10 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-06-29 15:53:10 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-06-29 15:53:10 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-06-29 15:53:10 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-06-29 15:53:10 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-06-29 15:53:10 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-06-29 15:53:10 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-06-29 15:53:10 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-06-29 15:53:10 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2519026b]
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d6f6860]
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e900e1a]
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b425577]
2021-06-29 15:53:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:53:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:53:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-29 15:53:10 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5696c927]
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7eeb38b2]
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d54d0f5]
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d6bff89]
2021-06-29 15:53:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:53:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:53:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-29 15:53:10 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-29 15:53:10 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-29 15:53:10 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-29 15:53:10 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-06-29 15:53:10 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-06-29 15:53:10 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-06-29 15:53:10 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 15:53:10 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-06-29 15:53:10 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60e1d87c]
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@87d9a01]
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e5b621b]
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@10177794]
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e5c2463]
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:53:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:53:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:53:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-29 15:53:10 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6a950a3b]
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@647b9364]
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b6bccb4]
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@49edcb30]
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@59303963]
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:53:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:53:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:53:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-29 15:53:10 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-29 15:53:10 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 15:53:10 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@798deee8]
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@96897c8]
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32a72c4]
2021-06-29 15:53:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:53:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:53:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-29 15:53:10 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f7a2a5]
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42ed89da]
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5e180aaf]
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7015ebef]
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-06-29 15:53:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:53:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:53:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-29 15:53:10 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b415f5f]
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66749eea]
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e590b]
2021-06-29 15:53:10 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42ef042a]
2021-06-29 15:53:10 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:53:10 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:53:10 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:53:10 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-06-29 15:53:10 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-06-29 15:53:10 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7926352f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 15:53:10 DEBUG Table:516 - No alter strings for table : post_likes_junction
2021-06-29 15:53:10 DEBUG Table:516 - No alter strings for table : posts
2021-06-29 15:53:10 DEBUG Table:516 - No alter strings for table : users
2021-06-29 15:53:10 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-06-29 15:53:10 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-06-29 15:53:10 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 15:53:10 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 15:53:10 DEBUG NamedQueryRepository:151 - Checking 1 named HQL queries
2021-06-29 15:53:10 DEBUG NamedQueryRepository:155 - Checking named query: getUsersLikedPosts
2021-06-29 15:53:10 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-06-29 15:53:10 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@79ecc507
2021-06-29 15:53:10 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-29 15:53:10 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:53:10 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'likePosts'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2021-06-29 15:53:10 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-06-29 15:53:10 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.User (u) -> user0_
2021-06-29 15:53:10 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-29 15:53:10 DEBUG DotNode:689 - getDataType() : likePosts -> org.hibernate.type.SetType(com.example.models.User.likePosts)
2021-06-29 15:53:10 DEBUG FromElementFactory:404 - createManyToMany() : path = u.likePosts role = com.example.models.User.likePosts associatedEntityName = com.example.models.Post
2021-06-29 15:53:10 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.Post (<no alias>) -> post2_
2021-06-29 15:53:10 DEBUG FromClause:287 - addJoinByPathMap() : u.likePosts -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
2021-06-29 15:53:10 DEBUG DotNode:342 - dereferenceCollection() : Created new FROM element for u.likePosts : post_likes_junction post2_
2021-06-29 15:53:10 DEBUG FromReferenceNode:60 - Resolved : u.likePosts -> .
2021-06-29 15:53:10 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-29 15:53:10 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:53:10 DEBUG FromReferenceNode:60 - Resolved : u.id -> user0_.user_id
2021-06-29 15:53:10 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-06-29 15:53:10 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} ( . user0_.user_id likePosts ) ) ( FromClause{level=1} ( users user0_ post_likes_junction post2_ ) ) ( where ( = ( user0_.user_id user0_.user_id id ) ? ) ) )
2021-06-29 15:53:10 DEBUG JoinProcessor:192 - Using FROM fragment [users user0_]
2021-06-29 15:53:10 DEBUG JoinProcessor:192 - Using FROM fragment [inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id]
2021-06-29 15:53:10 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-06-29 15:53:10 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (post_likes_junction,posts,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'post2_.post_id as post_id1_1_' {propertyName=likePosts,dereferenceType=COLLECTION,getPropertyPath=likePosts,path=u.likePosts,tableAlias=post2_,className=com.example.models.Post,classAlias=null}
    |  |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
    |  |  \-[IDENT] IdentNode: 'likePosts' {originalText=likePosts}
    |  \-[SQL_TOKEN] SqlFragment: 'post2_.content as content2_1_, post2_.user_id as user_id3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_, post2_], fromElementsByPath=[u.likePosts], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=com.example.models.User.likePosts,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=com.example.models.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@5b080f3a}

2021-06-29 15:53:10 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:53:10 DEBUG QueryTranslatorImpl:254 - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-29 15:53:10 DEBUG QueryTranslatorImpl:255 - SQL: select post2_.post_id as post_id1_1_, post2_.content as content2_1_, post2_.user_id as user_id3_1_ from users user0_ inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id where user0_.user_id=?
2021-06-29 15:53:10 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:53:10 DEBUG NamedQueryRepository:167 - Checking 1 named SQL queries
2021-06-29 15:53:10 DEBUG NamedQueryRepository:171 - Checking named SQL query: getUsersThatLiked
2021-06-29 15:53:10 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@29bbc391
2021-06-29 15:53:10 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 7508d885-6364-47b3-a5fc-527b59b39d6f (<unnamed>)
2021-06-29 15:53:10 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-06-29 15:53:11 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.models.User where username=RickSanchez2772
2021-06-29 15:53:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:53:11 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[IDENT] Node: 'RickSanchez2772'

2021-06-29 15:53:11 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-06-29 15:53:11 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.User (<no alias>) -> user0_
2021-06-29 15:53:11 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-06-29 15:53:11 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:53:11 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> user0_.username
2021-06-29 15:53:11 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-06-29 15:53:11 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username {synthetic-alias} username ) RickSanchez2772 ) ) )
2021-06-29 15:53:11 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-06-29 15:53:11 DEBUG JoinProcessor:192 - Using FROM fragment [users user0_]
2021-06-29 15:53:11 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-06-29 15:53:11 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.example.models.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[IDENT] IdentNode: 'RickSanchez2772' {originalText=RickSanchez2772}

2021-06-29 15:53:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:53:11 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.models.User where username=RickSanchez2772
2021-06-29 15:53:11 DEBUG QueryTranslatorImpl:255 - SQL: select user0_.user_id as user_id1_2_, user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_ from users user0_ where user0_.username=RickSanchez2772
2021-06-29 15:53:11 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:53:11 DEBUG SQL:94 - select user0_.user_id as user_id1_2_, user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_ from users user0_ where user0_.username=RickSanchez2772
2021-06-29 15:53:11 DEBUG SqlExceptionHelper:126 - could not extract ResultSet [n/a]
org.postgresql.util.PSQLException: ERROR: column "ricksanchez2772" does not exist
  Position: 240
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2552)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2284)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:322)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:481)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:401)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:164)
	at org.postgresql.jdbc.PgPreparedStatement.executeQuery(PgPreparedStatement.java:114)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60)
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2173)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1936)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1898)
	at org.hibernate.loader.Loader.doQuery(Loader.java:937)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:340)
	at org.hibernate.loader.Loader.doList(Loader.java:2695)
	at org.hibernate.loader.Loader.doList(Loader.java:2678)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2512)
	at org.hibernate.loader.Loader.list(Loader.java:2507)
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:504)
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:396)
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:224)
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1538)
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1561)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1529)
	at org.hibernate.query.internal.AbstractProducedQuery.uniqueResult(AbstractProducedQuery.java:1571)
	at com.example.dao.UserDaoHibernate.getUserByUserName(UserDaoHibernate.java:31)
	at com.example.services.UserService.signIn(UserService.java:39)
	at SocialHubDriver.main(SocialHubDriver.java:86)
2021-06-29 15:53:11 WARN  SqlExceptionHelper:137 - SQL Error: 0, SQLState: 42703
2021-06-29 15:53:11 ERROR SqlExceptionHelper:142 - ERROR: column "ricksanchez2772" does not exist
  Position: 240
2021-06-29 15:53:11 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 15:53:11 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-06-29 15:55:13 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-29 15:55:13 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-06-29 15:55:13 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-06-29 15:55:13 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-06-29 15:55:13 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-06-29 15:55:13 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-06-29 15:55:13 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-06-29 15:55:13 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-06-29 15:55:13 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-06-29 15:55:13 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-06-29 15:55:13 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-06-29 15:55:13 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-06-29 15:55:13 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-06-29 15:55:13 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-06-29 15:55:13 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4b3c354a
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5778826f
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@61bcd567
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@1252b961
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2dbf4cbd
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@62fad19
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@65a4798f
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@350ec41e
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2364305a
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5ddabb18
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@28d6290
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@28d6290
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77602954
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77602954
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7adf16aa
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@71ae31b0
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@6a66a204
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6a66a204
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@7e3f95fe
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e3f95fe
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@107ed6fc
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@107ed6fc
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@297ea53a
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@297ea53a
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3efe7086
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3efe7086
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7651218e
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7651218e
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7813cb11
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7813cb11
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3faf2e7d
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3faf2e7d
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68759011
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@68759011
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@2a1edad4
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2a1edad4
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@757d6814
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@757d6814
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4fad94a7
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@716a7124
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5dbe30be
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1a1da881
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@3f2ef586
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3f2ef586
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@4e76dac
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4e76dac
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3d8bbcdc
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3d8bbcdc
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@4f936da8
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4f936da8
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4a9f80d3
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@53ab0286
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2ce86164
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@4602c2a9
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@29a60c27
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@89ff02e
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2b58f754
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@5f3b9c57
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@35fe2125
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@47da3952
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@47da3952
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5fd62371
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@1568159
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1568159
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@303e3593
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@303e3593
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5c48c0c0
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@3f23a3a0
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@3a4e343
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@7f69d591
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7f69d591
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@71c5b236
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2cab9998
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2f7a7219
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@669513d8
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3a1d593e
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a8a60bc
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@361c294e
2021-06-29 15:55:13 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7859e786
2021-06-29 15:55:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-06-29 15:55:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-06-29 15:55:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 15:55:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-29 15:55:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-06-29 15:55:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-06-29 15:55:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-06-29 15:55:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 15:55:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-06-29 15:55:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-06-29 15:55:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-06-29 15:55:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-06-29 15:55:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-29 15:55:13 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-06-29 15:55:13 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-06-29 15:55:13 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-29 15:55:13 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, user=social}
2021-06-29 15:55:13 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-06-29 15:55:13 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-06-29 15:55:13 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-06-29 15:55:14 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-06-29 15:55:14 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-06-29 15:55:14 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-06-29 15:55:14 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-06-29 15:55:14 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-06-29 15:55:15 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-06-29 15:55:15 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@191a709b
2021-06-29 15:55:15 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@191a709b
2021-06-29 15:55:15 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@6ffab045
2021-06-29 15:55:15 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11de56e6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@616b241a]
2021-06-29 15:55:15 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-06-29 15:55:15 DEBUG QueryBinder:80 - Binding named query: getUsersLikedPosts => select u.likePosts from User u where u.id = :id
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 15:55:15 DEBUG EntityBinder:430 - Import with entity name User
2021-06-29 15:55:15 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-06-29 15:55:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-06-29 15:55:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-06-29 15:55:15 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-06-29 15:55:15 DEBUG PropertyBinder:266 - Building property id
2021-06-29 15:55:15 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-06-29 15:55:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-06-29 15:55:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-06-29 15:55:15 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-06-29 15:55:15 DEBUG PropertyBinder:266 - Building property email
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-06-29 15:55:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-06-29 15:55:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-06-29 15:55:15 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-06-29 15:55:15 DEBUG PropertyBinder:266 - Building property firstName
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-06-29 15:55:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-06-29 15:55:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-06-29 15:55:15 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-06-29 15:55:15 DEBUG PropertyBinder:266 - Building property lastName
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-29 15:55:15 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-06-29 15:55:15 DEBUG PropertyBinder:266 - Building property likePosts
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-06-29 15:55:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-06-29 15:55:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-06-29 15:55:15 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-06-29 15:55:15 DEBUG PropertyBinder:266 - Building property password
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-29 15:55:15 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-06-29 15:55:15 DEBUG PropertyBinder:266 - Building property posts
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-06-29 15:55:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-06-29 15:55:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-06-29 15:55:15 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-06-29 15:55:15 DEBUG PropertyBinder:266 - Building property username
2021-06-29 15:55:15 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-06-29 15:55:15 DEBUG QueryBinder:138 - Binding named native query: getUsersThatLiked => select p.users from Post p where p.post_id = :id
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-29 15:55:15 DEBUG EntityBinder:430 - Import with entity name Post
2021-06-29 15:55:15 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-06-29 15:55:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-06-29 15:55:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-06-29 15:55:15 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-06-29 15:55:15 DEBUG PropertyBinder:266 - Building property postId
2021-06-29 15:55:15 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 15:55:15 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-06-29 15:55:15 DEBUG PropertyBinder:266 - Building property likes
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-06-29 15:55:15 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-06-29 15:55:15 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-06-29 15:55:15 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-06-29 15:55:15 DEBUG PropertyBinder:266 - Building property postContent
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-29 15:55:15 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-06-29 15:55:15 DEBUG PropertyBinder:266 - Building property user
2021-06-29 15:55:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-06-29 15:55:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-06-29 15:55:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-06-29 15:55:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-06-29 15:55:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-06-29 15:55:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-06-29 15:55:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-06-29 15:55:15 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-06-29 15:55:15 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-06-29 15:55:15 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-06-29 15:55:15 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-06-29 15:55:15 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-06-29 15:55:15 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-29 15:55:15 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-29 15:55:15 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-06-29 15:55:15 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-06-29 15:55:15 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-06-29 15:55:15 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-06-29 15:55:15 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-06-29 15:55:15 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-06-29 15:55:15 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-06-29 15:55:15 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-06-29 15:55:15 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-06-29 15:55:15 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-06-29 15:55:15 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:55:15 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-29 15:55:15 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:55:15 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:55:15 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-29 15:55:15 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-29 15:55:15 DEBUG SessionFactoryImpl:196 - Building session factory
2021-06-29 15:55:15 DEBUG Settings:70 - SessionFactory name : null
2021-06-29 15:55:15 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-06-29 15:55:15 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-06-29 15:55:15 DEBUG Settings:74 - Statistics: disabled
2021-06-29 15:55:15 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-06-29 15:55:15 DEBUG Settings:77 - Default entity-mode: pojo
2021-06-29 15:55:15 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-06-29 15:55:15 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-06-29 15:55:15 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-06-29 15:55:15 DEBUG Settings:82 - Default batch fetch size: -1
2021-06-29 15:55:15 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-06-29 15:55:15 DEBUG Settings:84 - Default null ordering: NONE
2021-06-29 15:55:15 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-06-29 15:55:15 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-06-29 15:55:15 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-06-29 15:55:15 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-06-29 15:55:15 DEBUG Settings:92 - Query language substitutions: {}
2021-06-29 15:55:15 DEBUG Settings:93 - Named query checking : enabled
2021-06-29 15:55:15 DEBUG Settings:95 - Second-level cache: disabled
2021-06-29 15:55:15 DEBUG Settings:96 - Second-level query cache: disabled
2021-06-29 15:55:15 DEBUG Settings:97 - Second-level query cache factory: null
2021-06-29 15:55:15 DEBUG Settings:98 - Second-level cache region prefix: null
2021-06-29 15:55:15 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-06-29 15:55:15 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-06-29 15:55:15 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-06-29 15:55:15 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-06-29 15:55:15 DEBUG Settings:104 - JDBC batch size: 15
2021-06-29 15:55:15 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-06-29 15:55:15 DEBUG Settings:106 - Scrollable result sets: enabled
2021-06-29 15:55:15 DEBUG Settings:107 - Wrap result sets: disabled
2021-06-29 15:55:15 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-06-29 15:55:15 DEBUG Settings:109 - JDBC result set fetch size: null
2021-06-29 15:55:15 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-06-29 15:55:15 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-06-29 15:55:15 DEBUG Settings:113 - JPA compliance - query : 
2021-06-29 15:55:15 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-06-29 15:55:15 DEBUG Settings:115 - JPA compliance - lists : 
2021-06-29 15:55:15 DEBUG Settings:116 - JPA compliance - transactions : 
2021-06-29 15:55:15 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-06-29 15:55:15 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\Documents\Revtature\SocialHubWeek4\target\classes;C:\Program Files\apache-tomcat-9.0.43\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.43\lib\ecj-4.18.jar;C:\Program Files\apache-tomcat-9.0.43\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.43\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin, sun.java.command=SocialHubDriver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=15.0.1, user.dir=D:\Documents\Revtature\SocialHubWeek4, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@102ecc22, java.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Java\jdk1.8.0_281;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\WorldPainter;C:\Program Files\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\OpenSSL-Win64\bin\;C:\Program Files\apache-maven-3.6.3\bin;C:\Program Files\nodejs\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Java\jdk1.8.0_281\bin;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\MongoDB;C:\Program Files\apache-maven-3.6.3\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Users\Ethan\AppData\Local\GitHubDesktop\bin;C:\Program Files\sts-4.9.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=59.0}
2021-06-29 15:55:15 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-06-29 15:55:15 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-06-29 15:55:15 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-06-29 15:55:15 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-06-29 15:55:15 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-06-29 15:55:15 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-06-29 15:55:15 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-06-29 15:55:15 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-06-29 15:55:15 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-06-29 15:55:15 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-06-29 15:55:15 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-06-29 15:55:15 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-06-29 15:55:15 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-06-29 15:55:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:55:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:55:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:55:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:55:15 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-06-29 15:55:15 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-06-29 15:55:15 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11de56e6] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@76a805b7]
2021-06-29 15:55:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:55:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:55:15 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-29 15:55:15 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-29 15:55:16 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:55:16 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:55:16 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-29 15:55:16 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-29 15:55:16 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-06-29 15:55:16 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-06-29 15:55:16 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-06-29 15:55:16 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-06-29 15:55:16 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-06-29 15:55:16 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-06-29 15:55:16 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-06-29 15:55:16 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-06-29 15:55:16 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-06-29 15:55:16 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-06-29 15:55:16 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-06-29 15:55:16 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-06-29 15:55:16 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-06-29 15:55:16 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-06-29 15:55:16 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-06-29 15:55:16 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-06-29 15:55:16 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-06-29 15:55:16 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-06-29 15:55:16 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-06-29 15:55:16 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-06-29 15:55:16 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64e7d698]
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2401856]
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b44d6d0]
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a9c661]
2021-06-29 15:55:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:55:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:55:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-29 15:55:16 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ed5b321]
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7459a21e]
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7eeb38b2]
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d54d0f5]
2021-06-29 15:55:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:55:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:55:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-29 15:55:16 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-29 15:55:16 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-29 15:55:16 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-29 15:55:16 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-06-29 15:55:16 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-06-29 15:55:16 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-06-29 15:55:16 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-29 15:55:16 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-06-29 15:55:16 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c19592c]
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2eb60c71]
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@87d9a01]
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e5b621b]
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10177794]
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:55:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:55:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:55:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-29 15:55:16 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e5c2463]
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4f7be6c8]
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@647b9364]
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b6bccb4]
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49edcb30]
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:55:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:55:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:55:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-29 15:55:16 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-29 15:55:16 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 15:55:16 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@383cb5ce]
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@798deee8]
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69aabcb0]
2021-06-29 15:55:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:55:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:55:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-29 15:55:16 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a566922]
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f7a2a5]
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65c17e38]
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e180aaf]
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-06-29 15:55:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:55:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:55:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-29 15:55:16 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@34d480b9]
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b415f5f]
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@617449dd]
2021-06-29 15:55:16 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e590b]
2021-06-29 15:55:16 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-29 15:55:16 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-29 15:55:16 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-29 15:55:16 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-06-29 15:55:16 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-06-29 15:55:16 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@37af24cb] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-29 15:55:16 DEBUG Table:516 - No alter strings for table : post_likes_junction
2021-06-29 15:55:16 DEBUG Table:516 - No alter strings for table : posts
2021-06-29 15:55:16 DEBUG Table:516 - No alter strings for table : users
2021-06-29 15:55:16 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-06-29 15:55:16 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-06-29 15:55:16 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 15:55:16 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-29 15:55:16 DEBUG NamedQueryRepository:151 - Checking 1 named HQL queries
2021-06-29 15:55:16 DEBUG NamedQueryRepository:155 - Checking named query: getUsersLikedPosts
2021-06-29 15:55:16 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-06-29 15:55:16 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@3709748f
2021-06-29 15:55:16 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-29 15:55:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:55:16 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'likePosts'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2021-06-29 15:55:16 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-06-29 15:55:16 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.User (u) -> user0_
2021-06-29 15:55:16 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-29 15:55:16 DEBUG DotNode:689 - getDataType() : likePosts -> org.hibernate.type.SetType(com.example.models.User.likePosts)
2021-06-29 15:55:16 DEBUG FromElementFactory:404 - createManyToMany() : path = u.likePosts role = com.example.models.User.likePosts associatedEntityName = com.example.models.Post
2021-06-29 15:55:16 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.Post (<no alias>) -> post2_
2021-06-29 15:55:16 DEBUG FromClause:287 - addJoinByPathMap() : u.likePosts -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
2021-06-29 15:55:16 DEBUG DotNode:342 - dereferenceCollection() : Created new FROM element for u.likePosts : post_likes_junction post2_
2021-06-29 15:55:16 DEBUG FromReferenceNode:60 - Resolved : u.likePosts -> .
2021-06-29 15:55:16 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-29 15:55:16 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@5b080f3a
2021-06-29 15:55:16 DEBUG FromReferenceNode:60 - Resolved : u.id -> user0_.user_id
2021-06-29 15:55:16 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-06-29 15:55:16 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} ( . user0_.user_id likePosts ) ) ( FromClause{level=1} ( users user0_ post_likes_junction post2_ ) ) ( where ( = ( user0_.user_id user0_.user_id id ) ? ) ) )
2021-06-29 15:55:16 DEBUG JoinProcessor:192 - Using FROM fragment [users user0_]
2021-06-29 15:55:16 DEBUG JoinProcessor:192 - Using FROM fragment [inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id]
2021-06-29 15:55:16 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-06-29 15:55:16 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (post_likes_junction,posts,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'post2_.post_id as post_id1_1_' {propertyName=likePosts,dereferenceType=COLLECTION,getPropertyPath=likePosts,path=u.likePosts,tableAlias=post2_,className=com.example.models.Post,classAlias=null}
    |  |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
    |  |  \-[IDENT] IdentNode: 'likePosts' {originalText=likePosts}
    |  \-[SQL_TOKEN] SqlFragment: 'post2_.content as content2_1_, post2_.user_id as user_id3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_, post2_], fromElementsByPath=[u.likePosts], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=com.example.models.User.likePosts,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=com.example.models.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@5b080f3a}

2021-06-29 15:55:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:55:16 DEBUG QueryTranslatorImpl:254 - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-29 15:55:16 DEBUG QueryTranslatorImpl:255 - SQL: select post2_.post_id as post_id1_1_, post2_.content as content2_1_, post2_.user_id as user_id3_1_ from users user0_ inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id where user0_.user_id=?
2021-06-29 15:55:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:55:16 DEBUG NamedQueryRepository:167 - Checking 1 named SQL queries
2021-06-29 15:55:16 DEBUG NamedQueryRepository:171 - Checking named SQL query: getUsersThatLiked
2021-06-29 15:55:16 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@31ab1e67
2021-06-29 15:55:16 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 81cb9910-03b6-473b-8666-5f518d1bba4c (<unnamed>)
2021-06-29 15:55:16 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-06-29 15:55:16 DEBUG QueryTranslatorImpl:288 - parse() - HQL: from com.example.models.User where username=:username
2021-06-29 15:55:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:55:16 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[IDENT] Node: 'com'
    |           |  |  \-[IDENT] Node: 'example'
    |           |  \-[IDENT] Node: 'models'
    |           \-[IDENT] Node: 'User'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

2021-06-29 15:55:16 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-06-29 15:55:16 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.User (<no alias>) -> user0_
2021-06-29 15:55:16 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias} -> {synthetic-alias}
2021-06-29 15:55:16 DEBUG DotNode:689 - getDataType() : username -> org.hibernate.type.StringType@40258c2f
2021-06-29 15:55:16 DEBUG FromReferenceNode:60 - Resolved : {synthetic-alias}.username -> user0_.username
2021-06-29 15:55:16 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-06-29 15:55:16 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( FromClause{level=1} users user0_ ) ( where ( = ( user0_.username {synthetic-alias} username ) ? ) ) )
2021-06-29 15:55:16 DEBUG HqlSqlWalker:1028 - Derived SELECT clause created.
2021-06-29 15:55:16 DEBUG JoinProcessor:192 - Using FROM fragment [users user0_]
2021-06-29 15:55:16 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-06-29 15:55:16 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (users)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'user0_.user_id as user_id1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path={synthetic-alias}.username,tableAlias=user0_,className=com.example.models.User,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@40258c2f}

2021-06-29 15:55:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:55:16 DEBUG QueryTranslatorImpl:254 - HQL: from com.example.models.User where username=:username
2021-06-29 15:55:16 DEBUG QueryTranslatorImpl:255 - SQL: select user0_.user_id as user_id1_2_, user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_ from users user0_ where user0_.username=?
2021-06-29 15:55:16 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-29 15:55:16 DEBUG SQL:94 - select user0_.user_id as user_id1_2_, user0_.email as email2_2_, user0_.first_name as first_na3_2_, user0_.last_name as last_nam4_2_, user0_.password as password5_2_, user0_.username as username6_2_ from users user0_ where user0_.username=?
2021-06-29 15:55:16 DEBUG Loader:384 - Result set row: 0
2021-06-29 15:55:16 DEBUG Loader:1538 - Result row: EntityKey[com.example.models.User#1]
2021-06-29 15:55:16 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.models.User#1]
2021-06-29 15:55:16 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.models.User#1]
2021-06-29 15:55:16 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-29 15:55:17 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [com.example.models.User.posts#1]
2021-06-29 15:55:17 DEBUG SQL:94 - select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-06-29 15:55:17 DEBUG ResultSetProcessorImpl:161 - Preparing collection intializer : [com.example.models.User.posts#1]
2021-06-29 15:55:17 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: com.example.models.User.posts
2021-06-29 15:55:17 DEBUG CollectionLoadContext:299 - Collection fully initialized: [com.example.models.User.posts#1]
2021-06-29 15:55:17 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: com.example.models.User.posts
2021-06-29 15:55:17 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-06-29 15:55:17 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-06-29 15:55:17 DEBUG AbstractLoadPlanBasedCollectionInitializer:73 - Loading collection: [com.example.models.User.likePosts#1]
2021-06-29 15:55:17 DEBUG SQL:94 - select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-06-29 15:55:17 DEBUG ResultSetProcessorImpl:161 - Preparing collection intializer : [com.example.models.User.likePosts#1]
2021-06-29 15:55:17 DEBUG ResultSetProcessorImpl:120 - Starting ResultSet row #0
2021-06-29 15:55:17 DEBUG CollectionReferenceInitializerImpl:59 - Found row of collection: [com.example.models.User.likePosts#1]
2021-06-29 15:55:17 DEBUG TwoPhaseLoad:145 - Resolving associations for [com.example.models.Post#3]
2021-06-29 15:55:17 DEBUG TwoPhaseLoad:288 - Done materializing entity [com.example.models.Post#3]
2021-06-29 15:55:17 DEBUG CollectionLoadContext:394 - 1 collections were found in result set for role: com.example.models.User.likePosts
2021-06-29 15:55:17 DEBUG CollectionLoadContext:299 - Collection fully initialized: [com.example.models.User.likePosts#1]
2021-06-29 15:55:17 DEBUG CollectionLoadContext:394 - 1 collections initialized for role: com.example.models.User.likePosts
2021-06-29 15:55:17 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-06-29 15:55:17 DEBUG AbstractLoadPlanBasedCollectionInitializer:105 - Done loading collection
2021-06-29 15:55:17 INFO  Logging:50 - User was logged in
2021-06-29 15:55:17 DEBUG SessionFactoryImpl:792 - HHH000031: Closing
2021-06-29 15:55:17 DEBUG TypeConfiguration$Scope:350 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@27c53c32] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@76a805b7]
2021-06-29 15:55:17 DEBUG AbstractServiceRegistryImpl:418 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2021-06-29 15:55:17 INFO  pooling:408 - HHH10001008: Cleaning up connection pool [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-29 15:55:17 DEBUG BootstrapServiceRegistryImpl:295 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2021-06-30 10:08:01 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-30 10:08:01 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-06-30 10:08:01 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-06-30 10:08:01 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-06-30 10:08:01 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-06-30 10:08:01 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-06-30 10:08:01 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-06-30 10:08:01 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-06-30 10:08:01 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-06-30 10:08:01 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-06-30 10:08:01 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-06-30 10:08:01 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-06-30 10:08:01 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-06-30 10:08:01 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-06-30 10:08:01 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@78fb9a67
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@78fb9a67
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78fb9a67
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5b64c4b7
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1c80e49b
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@9ed238c
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@20b5f2ac
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@20b5f2ac
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@20b5f2ac
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@47dbb1e2
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@47dbb1e2
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47dbb1e2
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@773f7880
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@773f7880
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@773f7880
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@773cbf4f
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@773cbf4f
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@773cbf4f
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@69637b10
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@69637b10
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@69637b10
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@470a696f
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@470a696f
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@470a696f
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@3e8f7922
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@3e8f7922
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3e8f7922
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6ca0256d
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6ca0256d
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@e260766
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@e260766
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@2cac4385
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2cac4385
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@34a1d21f
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ba534b0
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@5860f3d7
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5860f3d7
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@34625ccd
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@34625ccd
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@1643d68f
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1643d68f
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@acb0951
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@acb0951
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@675d8c96
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@675d8c96
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3185fa6b
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3185fa6b
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@bcec031
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@bcec031
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4648ce9
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4648ce9
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e242b4d
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e242b4d
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@6256ac4f
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6256ac4f
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@649725e3
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@649725e3
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@475835b1
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@475835b1
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@475835b1
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@77192705
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@4fe89c24
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4fe89c24
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4fe89c24
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b970f7
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@751d3241
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@751d3241
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@611df6e3
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@611df6e3
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@52500920
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@52500920
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@4215838f
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4215838f
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@26fb628
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@26fb628
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@35beb15e
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@63c5efee
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@63c5efee
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@63c5efee
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5e8f9e2d
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5e8f9e2d
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5e8f9e2d
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@60fa3495
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@1849db1a
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6865c751
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6865c751
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6865c751
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ebff828
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ebff828
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ebff828
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@1e044120
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@94f6bfb
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@51e4ccb3
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@51e4ccb3
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@28a0fd6c
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@4fcee388
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4fcee388
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@4ef27d66
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ef27d66
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10c8f62
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5ab14cb9
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@6a1d204a
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@61078690
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@61078690
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2cab9998
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2f7a7219
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@669513d8
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3a1d593e
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a8a60bc
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@361c294e
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7859e786
2021-06-30 10:08:01 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@285d851a
2021-06-30 10:08:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-06-30 10:08:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-06-30 10:08:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-30 10:08:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-30 10:08:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-06-30 10:08:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-06-30 10:08:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-06-30 10:08:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-30 10:08:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-06-30 10:08:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-06-30 10:08:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-06-30 10:08:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-06-30 10:08:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-30 10:08:01 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-06-30 10:08:01 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-06-30 10:08:01 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-30 10:08:01 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, user=social}
2021-06-30 10:08:01 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-06-30 10:08:01 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-06-30 10:08:01 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-06-30 10:08:02 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-06-30 10:08:02 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-06-30 10:08:02 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-06-30 10:08:02 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-06-30 10:08:02 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-06-30 10:08:02 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-06-30 10:08:02 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@77c7ed8e
2021-06-30 10:08:02 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@77c7ed8e
2021-06-30 10:08:02 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@26fb628
2021-06-30 10:08:02 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@616b241a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b8e246c]
2021-06-30 10:08:02 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-06-30 10:08:02 DEBUG QueryBinder:80 - Binding named query: getUsersLikedPosts => select u.likePosts from User u where u.id = :id
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-30 10:08:02 DEBUG EntityBinder:430 - Import with entity name User
2021-06-30 10:08:02 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-06-30 10:08:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-06-30 10:08:02 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-06-30 10:08:02 DEBUG PropertyBinder:266 - Building property id
2021-06-30 10:08:02 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-06-30 10:08:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-06-30 10:08:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-06-30 10:08:02 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-06-30 10:08:02 DEBUG PropertyBinder:266 - Building property email
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-06-30 10:08:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-06-30 10:08:02 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-06-30 10:08:02 DEBUG PropertyBinder:266 - Building property firstName
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-06-30 10:08:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-06-30 10:08:02 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-06-30 10:08:02 DEBUG PropertyBinder:266 - Building property lastName
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-30 10:08:02 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-06-30 10:08:02 DEBUG PropertyBinder:266 - Building property likePosts
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-06-30 10:08:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-06-30 10:08:02 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-06-30 10:08:02 DEBUG PropertyBinder:266 - Building property password
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-30 10:08:02 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-06-30 10:08:02 DEBUG PropertyBinder:266 - Building property posts
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-06-30 10:08:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-06-30 10:08:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-06-30 10:08:02 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-06-30 10:08:02 DEBUG PropertyBinder:266 - Building property username
2021-06-30 10:08:02 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-06-30 10:08:02 DEBUG QueryBinder:138 - Binding named native query: getUsersThatLiked => select p.users from Post p where p.post_id = :id
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-30 10:08:02 DEBUG EntityBinder:430 - Import with entity name Post
2021-06-30 10:08:02 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-06-30 10:08:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-06-30 10:08:02 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-06-30 10:08:02 DEBUG PropertyBinder:266 - Building property postId
2021-06-30 10:08:02 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-30 10:08:02 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-06-30 10:08:02 DEBUG PropertyBinder:266 - Building property likes
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:02 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-06-30 10:08:02 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-06-30 10:08:02 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-06-30 10:08:02 DEBUG PropertyBinder:266 - Building property postContent
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-30 10:08:02 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:02 DEBUG PropertyBinder:266 - Building property user
2021-06-30 10:08:02 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-06-30 10:08:02 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-06-30 10:08:02 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-06-30 10:08:02 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-06-30 10:08:02 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-06-30 10:08:02 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-06-30 10:08:02 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-06-30 10:08:02 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-06-30 10:08:02 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-06-30 10:08:02 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-06-30 10:08:02 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-06-30 10:08:02 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-06-30 10:08:02 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-30 10:08:02 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-30 10:08:02 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-06-30 10:08:02 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-06-30 10:08:02 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-06-30 10:08:02 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-06-30 10:08:02 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-06-30 10:08:02 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-06-30 10:08:02 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-06-30 10:08:02 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-06-30 10:08:02 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-06-30 10:08:02 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-06-30 10:08:02 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-30 10:08:02 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-30 10:08:02 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-30 10:08:02 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-30 10:08:02 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-30 10:08:02 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-30 10:08:02 DEBUG SessionFactoryImpl:196 - Building session factory
2021-06-30 10:08:02 DEBUG Settings:70 - SessionFactory name : null
2021-06-30 10:08:02 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-06-30 10:08:02 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-06-30 10:08:02 DEBUG Settings:74 - Statistics: disabled
2021-06-30 10:08:02 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-06-30 10:08:02 DEBUG Settings:77 - Default entity-mode: pojo
2021-06-30 10:08:02 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-06-30 10:08:02 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-06-30 10:08:02 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-06-30 10:08:02 DEBUG Settings:82 - Default batch fetch size: -1
2021-06-30 10:08:02 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-06-30 10:08:02 DEBUG Settings:84 - Default null ordering: NONE
2021-06-30 10:08:02 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-06-30 10:08:02 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-06-30 10:08:02 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-06-30 10:08:02 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-06-30 10:08:02 DEBUG Settings:92 - Query language substitutions: {}
2021-06-30 10:08:02 DEBUG Settings:93 - Named query checking : enabled
2021-06-30 10:08:02 DEBUG Settings:95 - Second-level cache: disabled
2021-06-30 10:08:02 DEBUG Settings:96 - Second-level query cache: disabled
2021-06-30 10:08:02 DEBUG Settings:97 - Second-level query cache factory: null
2021-06-30 10:08:02 DEBUG Settings:98 - Second-level cache region prefix: null
2021-06-30 10:08:02 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-06-30 10:08:02 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-06-30 10:08:02 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-06-30 10:08:02 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-06-30 10:08:02 DEBUG Settings:104 - JDBC batch size: 15
2021-06-30 10:08:02 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-06-30 10:08:02 DEBUG Settings:106 - Scrollable result sets: enabled
2021-06-30 10:08:02 DEBUG Settings:107 - Wrap result sets: disabled
2021-06-30 10:08:02 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-06-30 10:08:02 DEBUG Settings:109 - JDBC result set fetch size: null
2021-06-30 10:08:02 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-06-30 10:08:02 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-06-30 10:08:02 DEBUG Settings:113 - JPA compliance - query : 
2021-06-30 10:08:02 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-06-30 10:08:02 DEBUG Settings:115 - JPA compliance - lists : 
2021-06-30 10:08:02 DEBUG Settings:116 - JPA compliance - transactions : 
2021-06-30 10:08:02 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-06-30 10:08:02 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\Documents\Revtature\SocialHubWeek4\target\classes;C:\Program Files\apache-tomcat-9.0.43\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.43\lib\ecj-4.18.jar;C:\Program Files\apache-tomcat-9.0.43\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.43\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin, sun.java.command=SocialHubDriver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=15.0.1, user.dir=D:\Documents\Revtature\SocialHubWeek4, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@26f46fa6, java.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Java\jdk1.8.0_281;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\WorldPainter;C:\Program Files\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\OpenSSL-Win64\bin\;C:\Program Files\apache-maven-3.6.3\bin;C:\Program Files\nodejs\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Java\jdk1.8.0_281\bin;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\MongoDB;C:\Program Files\apache-maven-3.6.3\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Users\Ethan\AppData\Local\GitHubDesktop\bin;C:\Program Files\sts-4.9.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=59.0}
2021-06-30 10:08:03 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-06-30 10:08:03 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-06-30 10:08:03 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-06-30 10:08:03 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-06-30 10:08:03 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-06-30 10:08:03 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-06-30 10:08:03 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-06-30 10:08:03 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-06-30 10:08:03 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-06-30 10:08:03 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-06-30 10:08:03 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-06-30 10:08:03 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-06-30 10:08:03 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-06-30 10:08:03 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-30 10:08:03 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-30 10:08:03 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-30 10:08:03 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-30 10:08:03 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-06-30 10:08:03 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-06-30 10:08:03 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@616b241a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4fe533ff]
2021-06-30 10:08:03 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-30 10:08:03 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-30 10:08:03 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-30 10:08:03 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-30 10:08:03 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-30 10:08:03 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-30 10:08:03 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-30 10:08:03 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-30 10:08:03 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-06-30 10:08:03 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-06-30 10:08:03 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-06-30 10:08:03 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-06-30 10:08:03 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-06-30 10:08:03 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-06-30 10:08:03 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-06-30 10:08:03 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-06-30 10:08:03 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-06-30 10:08:03 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-06-30 10:08:03 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-06-30 10:08:03 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-06-30 10:08:03 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-06-30 10:08:03 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-06-30 10:08:03 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-06-30 10:08:03 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-06-30 10:08:03 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-06-30 10:08:03 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-06-30 10:08:03 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-06-30 10:08:03 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-06-30 10:08:03 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@733fb462]
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23cd5d42]
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a1ccaaf]
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@198536f6]
2021-06-30 10:08:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-30 10:08:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-30 10:08:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-30 10:08:03 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f025000]
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@739e8b96]
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19b07407]
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54ffa561]
2021-06-30 10:08:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-30 10:08:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-30 10:08:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-30 10:08:03 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-30 10:08:03 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-30 10:08:03 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-30 10:08:03 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-06-30 10:08:03 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-06-30 10:08:03 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-06-30 10:08:03 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-30 10:08:03 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-06-30 10:08:03 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34330f77]
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b033eac]
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69c532af]
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45a1d057]
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51a16adf]
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-30 10:08:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-30 10:08:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-30 10:08:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-30 10:08:03 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@385d819]
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8fd91d1]
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52d0f583]
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7fb8bad0]
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12d40609]
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-30 10:08:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-30 10:08:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-30 10:08:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-30 10:08:03 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-30 10:08:03 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-30 10:08:03 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f3fc42f]
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a1a012]
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e424582]
2021-06-30 10:08:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-30 10:08:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-30 10:08:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-30 10:08:03 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e590b]
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42ef042a]
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c18a3ea]
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@166c2c17]
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-06-30 10:08:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-30 10:08:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-30 10:08:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-30 10:08:03 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c96c85]
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b0f2d91]
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5927f904]
2021-06-30 10:08:03 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bb62414]
2021-06-30 10:08:03 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-30 10:08:03 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-30 10:08:03 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-30 10:08:03 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-06-30 10:08:03 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-06-30 10:08:03 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@619c93ca] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-30 10:08:03 DEBUG Table:516 - No alter strings for table : post_likes_junction
2021-06-30 10:08:03 DEBUG Table:516 - No alter strings for table : posts
2021-06-30 10:08:03 DEBUG Table:516 - No alter strings for table : users
2021-06-30 10:08:03 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-06-30 10:08:03 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-06-30 10:08:03 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-30 10:08:03 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-30 10:08:03 DEBUG NamedQueryRepository:151 - Checking 1 named HQL queries
2021-06-30 10:08:03 DEBUG NamedQueryRepository:155 - Checking named query: getUsersLikedPosts
2021-06-30 10:08:04 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-06-30 10:08:04 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@25791d40
2021-06-30 10:08:04 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-30 10:08:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-30 10:08:04 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'likePosts'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2021-06-30 10:08:04 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-06-30 10:08:04 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.User (u) -> user0_
2021-06-30 10:08:04 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-30 10:08:04 DEBUG DotNode:689 - getDataType() : likePosts -> org.hibernate.type.SetType(com.example.models.User.likePosts)
2021-06-30 10:08:04 DEBUG FromElementFactory:404 - createManyToMany() : path = u.likePosts role = com.example.models.User.likePosts associatedEntityName = com.example.models.Post
2021-06-30 10:08:04 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.Post (<no alias>) -> post2_
2021-06-30 10:08:04 DEBUG FromClause:287 - addJoinByPathMap() : u.likePosts -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
2021-06-30 10:08:04 DEBUG DotNode:342 - dereferenceCollection() : Created new FROM element for u.likePosts : post_likes_junction post2_
2021-06-30 10:08:04 DEBUG FromReferenceNode:60 - Resolved : u.likePosts -> .
2021-06-30 10:08:04 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-30 10:08:04 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@773cbf4f
2021-06-30 10:08:04 DEBUG FromReferenceNode:60 - Resolved : u.id -> user0_.user_id
2021-06-30 10:08:04 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-06-30 10:08:04 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} ( . user0_.user_id likePosts ) ) ( FromClause{level=1} ( users user0_ post_likes_junction post2_ ) ) ( where ( = ( user0_.user_id user0_.user_id id ) ? ) ) )
2021-06-30 10:08:04 DEBUG JoinProcessor:192 - Using FROM fragment [users user0_]
2021-06-30 10:08:04 DEBUG JoinProcessor:192 - Using FROM fragment [inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id]
2021-06-30 10:08:04 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-06-30 10:08:04 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (post_likes_junction,posts,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'post2_.post_id as post_id1_1_' {propertyName=likePosts,dereferenceType=COLLECTION,getPropertyPath=likePosts,path=u.likePosts,tableAlias=post2_,className=com.example.models.Post,classAlias=null}
    |  |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
    |  |  \-[IDENT] IdentNode: 'likePosts' {originalText=likePosts}
    |  \-[SQL_TOKEN] SqlFragment: 'post2_.content as content2_1_, post2_.user_id as user_id3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_, post2_], fromElementsByPath=[u.likePosts], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=com.example.models.User.likePosts,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=com.example.models.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@773cbf4f}

2021-06-30 10:08:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-30 10:08:04 DEBUG QueryTranslatorImpl:254 - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-30 10:08:04 DEBUG QueryTranslatorImpl:255 - SQL: select post2_.post_id as post_id1_1_, post2_.content as content2_1_, post2_.user_id as user_id3_1_ from users user0_ inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id where user0_.user_id=?
2021-06-30 10:08:04 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-30 10:08:04 DEBUG NamedQueryRepository:167 - Checking 1 named SQL queries
2021-06-30 10:08:04 DEBUG NamedQueryRepository:171 - Checking named SQL query: getUsersThatLiked
2021-06-30 10:08:04 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4fd74223
2021-06-30 10:08:04 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: 6f694125-1f64-415c-9e18-7f12a6ace676 (<unnamed>)
2021-06-30 10:08:04 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-06-30 10:08:04 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-06-30 10:08:04 DEBUG TransactionImpl:84 - begin
2021-06-30 10:08:04 DEBUG SQL:94 - select nextval ('hibernate_sequence')
2021-06-30 10:08:04 DEBUG SequenceStructure:101 - Sequence value obtained: 10
2021-06-30 10:08:04 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-06-30 10:08:04 DEBUG AbstractSaveEventListener:132 - Generated identifier: 10, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2021-06-30 10:08:04 DEBUG TransactionImpl:101 - committing
2021-06-30 10:08:04 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-06-30 10:08:04 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-06-30 10:08:04 DEBUG Collections:190 - Collection found: [com.example.models.User.likePosts#10], was: [<unreferenced>] (initialized)
2021-06-30 10:08:04 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#10], was: [<unreferenced>] (initialized)
2021-06-30 10:08:04 DEBUG AbstractFlushingEventListener:115 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2021-06-30 10:08:04 DEBUG AbstractFlushingEventListener:122 - Flushed: 2 (re)creations, 0 updates, 0 removals to 2 collections
2021-06-30 10:08:04 DEBUG EntityPrinter:110 - Listing entities:
2021-06-30 10:08:04 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Summer, lastName=Smith, password=password, likePosts=[], id=10, posts=[], email=summer@email.com, username=SummerSmith3506}
2021-06-30 10:08:04 DEBUG SQL:94 - insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-30 10:08:04 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-30 10:08:04 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-30 10:08:04 DEBUG SessionFactoryImpl:792 - HHH000031: Closing
2021-06-30 10:08:04 DEBUG TypeConfiguration$Scope:350 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4c7d7430] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4fe533ff]
2021-06-30 10:08:04 DEBUG AbstractServiceRegistryImpl:418 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2021-06-30 10:08:04 INFO  pooling:408 - HHH10001008: Cleaning up connection pool [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-30 10:08:04 DEBUG BootstrapServiceRegistryImpl:295 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2021-06-30 10:08:26 DEBUG logging:28 - Logging Provider: org.jboss.logging.Log4jLoggerProvider
2021-06-30 10:08:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2021-06-30 10:08:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2021-06-30 10:08:26 DEBUG IntegratorServiceImpl:46 - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2021-06-30 10:08:26 INFO  Version:46 - HHH000412: Hibernate Core {5.4.2.Final}
2021-06-30 10:08:26 DEBUG Environment:199 - HHH000206: hibernate.properties not found
2021-06-30 10:08:26 DEBUG LocalXmlResourceResolver:57 - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
2021-06-30 10:08:26 DEBUG LocalXmlResourceResolver:85 - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
2021-06-30 10:08:26 DEBUG JaxbCfgProcessor:116 - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
2021-06-30 10:08:26 DEBUG Configuration:722 - Building session factory using internal StandardServiceRegistryBuilder
2021-06-30 10:08:26 DEBUG ServiceBinding:68 - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2021-06-30 10:08:26 DEBUG Configuration:652 - Building session factory using provided StandardServiceRegistry
2021-06-30 10:08:26 DEBUG RegionFactoryInitiator:118 - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2021-06-30 10:08:26 DEBUG RegionFactoryInitiator:49 - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2021-06-30 10:08:26 INFO  Version:49 - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@78fb9a67
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration boolean -> org.hibernate.type.BooleanType@78fb9a67
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@78fb9a67
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5b64c4b7
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1c80e49b
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration yes_no -> org.hibernate.type.YesNoType@9ed238c
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@20b5f2ac
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration byte -> org.hibernate.type.ByteType@20b5f2ac
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@20b5f2ac
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration character -> org.hibernate.type.CharacterType@47dbb1e2
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration char -> org.hibernate.type.CharacterType@47dbb1e2
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47dbb1e2
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@773f7880
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration short -> org.hibernate.type.ShortType@773f7880
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@773f7880
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration integer -> org.hibernate.type.IntegerType@773cbf4f
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration int -> org.hibernate.type.IntegerType@773cbf4f
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@773cbf4f
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@69637b10
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration long -> org.hibernate.type.LongType@69637b10
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Long -> org.hibernate.type.LongType@69637b10
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@470a696f
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration float -> org.hibernate.type.FloatType@470a696f
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@470a696f
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@3e8f7922
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration double -> org.hibernate.type.DoubleType@3e8f7922
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3e8f7922
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6ca0256d
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6ca0256d
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@e260766
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@e260766
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration string -> org.hibernate.type.StringType@2cac4385
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.String -> org.hibernate.type.StringType@2cac4385
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@34a1d21f
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ba534b0
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration url -> org.hibernate.type.UrlType@5860f3d7
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5860f3d7
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration Duration -> org.hibernate.type.DurationType@34625ccd
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@34625ccd
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration Instant -> org.hibernate.type.InstantType@1643d68f
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1643d68f
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@acb0951
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@acb0951
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@675d8c96
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@675d8c96
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3185fa6b
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3185fa6b
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@bcec031
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@bcec031
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4648ce9
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4648ce9
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e242b4d
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@7e242b4d
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration date -> org.hibernate.type.DateType@6256ac4f
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6256ac4f
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration time -> org.hibernate.type.TimeType@649725e3
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@649725e3
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration timestamp -> org.hibernate.type.TimestampType@475835b1
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@475835b1
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@475835b1
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@77192705
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration calendar -> org.hibernate.type.CalendarType@4fe89c24
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4fe89c24
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4fe89c24
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5b970f7
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration locale -> org.hibernate.type.LocaleType@751d3241
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@751d3241
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration currency -> org.hibernate.type.CurrencyType@611df6e3
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@611df6e3
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration timezone -> org.hibernate.type.TimeZoneType@52500920
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@52500920
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration class -> org.hibernate.type.ClassType@4215838f
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4215838f
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@26fb628
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@26fb628
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@35beb15e
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration binary -> org.hibernate.type.BinaryType@63c5efee
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration byte[] -> org.hibernate.type.BinaryType@63c5efee
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration [B -> org.hibernate.type.BinaryType@63c5efee
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5e8f9e2d
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5e8f9e2d
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5e8f9e2d
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration row_version -> org.hibernate.type.RowVersionType@60fa3495
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration image -> org.hibernate.type.ImageType@1849db1a
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration characters -> org.hibernate.type.CharArrayType@6865c751
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration char[] -> org.hibernate.type.CharArrayType@6865c751
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration [C -> org.hibernate.type.CharArrayType@6865c751
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3ebff828
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3ebff828
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3ebff828
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration text -> org.hibernate.type.TextType@1e044120
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration ntext -> org.hibernate.type.NTextType@94f6bfb
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration blob -> org.hibernate.type.BlobType@51e4ccb3
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@51e4ccb3
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@28a0fd6c
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration clob -> org.hibernate.type.ClobType@4fcee388
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4fcee388
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration nclob -> org.hibernate.type.NClobType@4ef27d66
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ef27d66
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10c8f62
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5ab14cb9
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration serializable -> org.hibernate.type.SerializableType@6a1d204a
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration object -> org.hibernate.type.ObjectType@61078690
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@61078690
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2cab9998
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2f7a7219
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@669513d8
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3a1d593e
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a8a60bc
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@361c294e
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7859e786
2021-06-30 10:08:26 DEBUG BasicTypeRegistry:156 - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@285d851a
2021-06-30 10:08:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2021-06-30 10:08:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2021-06-30 10:08:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-30 10:08:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2021-06-30 10:08:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2021-06-30 10:08:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2021-06-30 10:08:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2021-06-30 10:08:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-30 10:08:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2021-06-30 10:08:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2021-06-30 10:08:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2021-06-30 10:08:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2021-06-30 10:08:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2021-06-30 10:08:26 DEBUG DefaultIdentifierGeneratorFactory:81 - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2021-06-30 10:08:26 WARN  pooling:72 - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2021-06-30 10:08:26 INFO  pooling:115 - HHH10001005: using driver [org.postgresql.Driver] at URL [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-30 10:08:26 INFO  pooling:121 - HHH10001001: Connection properties: {password=password, dialect=org.hibernate.dialect.PostgreSQLDialect, user=social}
2021-06-30 10:08:26 INFO  pooling:129 - HHH10001003: Autocommit mode: false
2021-06-30 10:08:26 DEBUG DriverManagerConnectionProviderImpl:384 - Initializing Connection pool with 1 Connections
2021-06-30 10:08:26 INFO  DriverManagerConnectionProviderImpl:239 - HHH000115: Hibernate connection pool size: 10 (min=1)
2021-06-30 10:08:27 DEBUG JdbcEnvironmentInitiator:72 - Database ->
       name : PostgreSQL
    version : 12.5
      major : 12
      minor : 5
2021-06-30 10:08:27 DEBUG JdbcEnvironmentInitiator:83 - Driver ->
       name : PostgreSQL JDBC Driver
    version : 42.2.22
      major : 42
      minor : 2
2021-06-30 10:08:27 DEBUG JdbcEnvironmentInitiator:389 - JDBC version : 4.2
2021-06-30 10:08:27 INFO  Dialect:158 - HHH000400: Using dialect: org.hibernate.dialect.PostgreSQL10Dialect
2021-06-30 10:08:27 DEBUG IdentifierHelperBuilder:112 - JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2021-06-30 10:08:27 DEBUG Namespace:51 - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2021-06-30 10:08:27 DEBUG BasicTypeRegistry:156 - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@77c7ed8e
2021-06-30 10:08:27 DEBUG BasicTypeRegistry:156 - Adding type registration java.util.UUID -> org.hibernate.type.PostgresUUIDType@77c7ed8e
2021-06-30 10:08:27 DEBUG BasicTypeRegistry:159 - HHH000270: Type registration [java.util.UUID] overrides previous : org.hibernate.type.UUIDBinaryType@26fb628
2021-06-30 10:08:27 DEBUG TypeConfiguration$Scope:152 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@616b241a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@b8e246c]
2021-06-30 10:08:27 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.User
2021-06-30 10:08:27 DEBUG QueryBinder:80 - Binding named query: getUsersLikedPosts => select u.likePosts from User u where u.id = :id
2021-06-30 10:08:27 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-30 10:08:27 DEBUG EntityBinder:430 - Import with entity name User
2021-06-30 10:08:27 DEBUG EntityBinder:873 - Bind entity com.example.models.User on table users
2021-06-30 10:08:27 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:27 DEBUG PropertyBinder:175 - MetadataSourceProcessor property id with lazy=false
2021-06-30 10:08:27 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:id]
2021-06-30 10:08:27 DEBUG SimpleValueBinder:411 - building SimpleValue for id
2021-06-30 10:08:27 DEBUG PropertyBinder:266 - Building property id
2021-06-30 10:08:28 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=email, insertable=true, updatable=true, unique=true}
2021-06-30 10:08:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property email with lazy=false
2021-06-30 10:08:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:email]
2021-06-30 10:08:28 DEBUG SimpleValueBinder:411 - building SimpleValue for email
2021-06-30 10:08:28 DEBUG PropertyBinder:266 - Building property email
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property firstName with lazy=false
2021-06-30 10:08:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:firstName]
2021-06-30 10:08:28 DEBUG SimpleValueBinder:411 - building SimpleValue for firstName
2021-06-30 10:08:28 DEBUG PropertyBinder:266 - Building property firstName
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property lastName with lazy=false
2021-06-30 10:08:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:lastName]
2021-06-30 10:08:28 DEBUG SimpleValueBinder:411 - building SimpleValue for lastName
2021-06-30 10:08:28 DEBUG PropertyBinder:266 - Building property lastName
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=likePosts_KEY, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likePosts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='likes'}
2021-06-30 10:08:28 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.likePosts
2021-06-30 10:08:28 DEBUG PropertyBinder:266 - Building property likePosts
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=password, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property password with lazy=false
2021-06-30 10:08:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:password]
2021-06-30 10:08:28 DEBUG SimpleValueBinder:411 - building SimpleValue for password
2021-06-30 10:08:28 DEBUG PropertyBinder:266 - Building property password
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=posts_KEY, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='posts_KEY', referencedColumn='null', mappedBy='null'}
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2021-06-30 10:08:28 DEBUG CollectionBinder:449 - Collection role: com.example.models.User.posts
2021-06-30 10:08:28 DEBUG PropertyBinder:266 - Building property posts
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(users), mappingColumn=username, insertable=true, updatable=true, unique=true}
2021-06-30 10:08:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property username with lazy=false
2021-06-30 10:08:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.User:username]
2021-06-30 10:08:28 DEBUG SimpleValueBinder:411 - building SimpleValue for username
2021-06-30 10:08:28 DEBUG PropertyBinder:266 - Building property username
2021-06-30 10:08:28 DEBUG AnnotationBinder:557 - Binding entity from annotated class: com.example.models.Post
2021-06-30 10:08:28 DEBUG QueryBinder:138 - Binding named native query: getUsersThatLiked => select p.users from Post p where p.post_id = :id
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2021-06-30 10:08:28 DEBUG EntityBinder:430 - Import with entity name Post
2021-06-30 10:08:28 DEBUG EntityBinder:873 - Bind entity com.example.models.Post on table posts
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=post_id, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postId with lazy=false
2021-06-30 10:08:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postId]
2021-06-30 10:08:28 DEBUG SimpleValueBinder:411 - building SimpleValue for postId
2021-06-30 10:08:28 DEBUG PropertyBinder:266 - Building property postId
2021-06-30 10:08:28 DEBUG BinderHelper:644 - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(post_id)]), postId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=null, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=element, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=likes_KEY, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='likes_KEY', referencedColumn='null', mappedBy='null'}
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='post_id', referencedColumn='', mappedBy=''}
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-30 10:08:28 DEBUG CollectionBinder:449 - Collection role: com.example.models.Post.likes
2021-06-30 10:08:28 DEBUG PropertyBinder:266 - Building property likes
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=content, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:28 DEBUG PropertyBinder:175 - MetadataSourceProcessor property postContent with lazy=false
2021-06-30 10:08:28 DEBUG AbstractPropertyHolder:94 - Attempting to locate auto-apply AttributeConverter for property [com.example.models.Post:postContent]
2021-06-30 10:08:28 DEBUG SimpleValueBinder:411 - building SimpleValue for postContent
2021-06-30 10:08:28 DEBUG PropertyBinder:266 - Building property postContent
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2021-06-30 10:08:28 DEBUG Ejb3Column:213 - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(posts), mappingColumn=user, insertable=true, updatable=true, unique=false}
2021-06-30 10:08:28 DEBUG PropertyBinder:266 - Building property user
2021-06-30 10:08:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for id
2021-06-30 10:08:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for email
2021-06-30 10:08:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for firstName
2021-06-30 10:08:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for lastName
2021-06-30 10:08:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for password
2021-06-30 10:08:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for username
2021-06-30 10:08:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postId
2021-06-30 10:08:28 DEBUG SimpleValueBinder:456 - Starting fillSimpleValue for postContent
2021-06-30 10:08:28 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [users]
2021-06-30 10:08:28 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [posts]
2021-06-30 10:08:28 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.Post.likes
2021-06-30 10:08:28 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.Post.likes
2021-06-30 10:08:28 DEBUG PrimaryKey:35 - Forcing column [post_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-30 10:08:28 DEBUG PrimaryKey:35 - Forcing column [user_id] to be non-null as it is part of the primary key for table [post_likes_junction]
2021-06-30 10:08:28 DEBUG CollectionSecondPass:68 - Mapped collection key: post_id, element: user_id
2021-06-30 10:08:28 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.likePosts
2021-06-30 10:08:28 DEBUG CollectionBinder:1318 - Binding as ManyToMany: com.example.models.User.likePosts
2021-06-30 10:08:28 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.likes
2021-06-30 10:08:28 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, element: post_id
2021-06-30 10:08:28 DEBUG CollectionSecondPass:51 - Second pass for collection: com.example.models.User.posts
2021-06-30 10:08:28 DEBUG CollectionBinder:898 - Binding a OneToMany: com.example.models.User.posts through a foreign key
2021-06-30 10:08:28 DEBUG CollectionBinder:936 - Mapping collection: com.example.models.User.posts -> posts
2021-06-30 10:08:28 DEBUG TableBinder:565 - Retrieving property com.example.models.Post.user
2021-06-30 10:08:28 DEBUG CollectionSecondPass:68 - Mapped collection key: user_id, one-to-many: com.example.models.Post
2021-06-30 10:08:28 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-30 10:08:28 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-30 10:08:28 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-30 10:08:28 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-30 10:08:28 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.Post
2021-06-30 10:08:28 DEBUG InFlightMetadataCollectorImpl:1861 - Resolving reference to class: com.example.models.User
2021-06-30 10:08:28 DEBUG SessionFactoryImpl:196 - Building session factory
2021-06-30 10:08:28 DEBUG Settings:70 - SessionFactory name : null
2021-06-30 10:08:28 DEBUG Settings:71 - Automatic flush during beforeCompletion(): enabled
2021-06-30 10:08:28 DEBUG Settings:72 - Automatic session close at end of transaction: disabled
2021-06-30 10:08:28 DEBUG Settings:74 - Statistics: disabled
2021-06-30 10:08:28 DEBUG Settings:76 - Deleted entity synthetic identifier rollback: disabled
2021-06-30 10:08:28 DEBUG Settings:77 - Default entity-mode: pojo
2021-06-30 10:08:28 DEBUG Settings:78 - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2021-06-30 10:08:28 DEBUG Settings:79 - Allow initialization of lazy state outside session : disabled
2021-06-30 10:08:28 DEBUG Settings:81 - Using BatchFetchStyle : LEGACY
2021-06-30 10:08:28 DEBUG Settings:82 - Default batch fetch size: -1
2021-06-30 10:08:28 DEBUG Settings:83 - Maximum outer join fetch depth: null
2021-06-30 10:08:28 DEBUG Settings:84 - Default null ordering: NONE
2021-06-30 10:08:28 DEBUG Settings:85 - Order SQL updates by primary key: disabled
2021-06-30 10:08:28 DEBUG Settings:86 - Order SQL inserts for batching: disabled
2021-06-30 10:08:28 DEBUG Settings:88 - multi-tenancy strategy : NONE
2021-06-30 10:08:28 DEBUG Settings:90 - JTA Track by Thread: enabled
2021-06-30 10:08:28 DEBUG Settings:92 - Query language substitutions: {}
2021-06-30 10:08:28 DEBUG Settings:93 - Named query checking : enabled
2021-06-30 10:08:28 DEBUG Settings:95 - Second-level cache: disabled
2021-06-30 10:08:28 DEBUG Settings:96 - Second-level query cache: disabled
2021-06-30 10:08:28 DEBUG Settings:97 - Second-level query cache factory: null
2021-06-30 10:08:28 DEBUG Settings:98 - Second-level cache region prefix: null
2021-06-30 10:08:28 DEBUG Settings:99 - Optimize second-level cache for minimal puts: disabled
2021-06-30 10:08:28 DEBUG Settings:100 - Structured second-level cache entries: disabled
2021-06-30 10:08:28 DEBUG Settings:101 - Second-level cache direct-reference entries: disabled
2021-06-30 10:08:28 DEBUG Settings:102 - Automatic eviction of collection cache: disabled
2021-06-30 10:08:28 DEBUG Settings:104 - JDBC batch size: 15
2021-06-30 10:08:28 DEBUG Settings:105 - JDBC batch updates for versioned data: enabled
2021-06-30 10:08:28 DEBUG Settings:106 - Scrollable result sets: enabled
2021-06-30 10:08:28 DEBUG Settings:107 - Wrap result sets: disabled
2021-06-30 10:08:28 DEBUG Settings:108 - JDBC3 getGeneratedKeys(): enabled
2021-06-30 10:08:28 DEBUG Settings:109 - JDBC result set fetch size: null
2021-06-30 10:08:28 DEBUG Settings:110 - Connection release mode: AFTER_TRANSACTION
2021-06-30 10:08:28 DEBUG Settings:111 - Generate SQL with comments: disabled
2021-06-30 10:08:28 DEBUG Settings:113 - JPA compliance - query : 
2021-06-30 10:08:28 DEBUG Settings:114 - JPA compliance - closed-handling : 
2021-06-30 10:08:28 DEBUG Settings:115 - JPA compliance - lists : 
2021-06-30 10:08:28 DEBUG Settings:116 - JPA compliance - transactions : 
2021-06-30 10:08:28 DEBUG SessionFactoryImpl:251 - Session factory constructed with filter configurations : {}
2021-06-30 10:08:28 DEBUG SessionFactoryImpl:252 - Instantiating session factory with properties: {hibernate.format_sql=false, java.specification.version=15, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, java.class.path=D:\Documents\Revtature\SocialHubWeek4\target\classes;C:\Program Files\apache-tomcat-9.0.43\lib\annotations-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ant.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ha.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-ssi.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-storeconfig.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina-tribes.jar;C:\Program Files\apache-tomcat-9.0.43\lib\catalina.jar;C:\Program Files\apache-tomcat-9.0.43\lib\ecj-4.18.jar;C:\Program Files\apache-tomcat-9.0.43\lib\el-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper-el.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jasper.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jaspic-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\jsp-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\servlet-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-api.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-coyote.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-dbcp.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-cs.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-de.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-es.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-fr.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ja.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ko.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-pt-BR.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-ru.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-i18n-zh-CN.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jdbc.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-jni.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util-scan.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-util.jar;C:\Program Files\apache-tomcat-9.0.43\lib\tomcat-websocket.jar;C:\Program Files\apache-tomcat-9.0.43\lib\websocket-api.jar;C:\Users\Ethan\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Ethan\.m2\repository\org\postgresql\postgresql\42.2.22\postgresql-42.2.22.jar;C:\Users\Ethan\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.9.9\jackson-databind-2.9.9.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.9.0\jackson-annotations-2.9.0.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.9.9\jackson-core-2.9.9.jar;C:\Users\Ethan\.m2\repository\javax\servlet\javax.servlet-api\3.0.1\javax.servlet-api-3.0.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\hibernate-core\5.4.2.Final\hibernate-core-5.4.2.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Ethan\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Ethan\.m2\repository\org\javassist\javassist\3.24.0-GA\javassist-3.24.0-GA.jar;C:\Users\Ethan\.m2\repository\net\bytebuddy\byte-buddy\1.9.10\byte-buddy-1.9.10.jar;C:\Users\Ethan\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Ethan\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Ethan\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Ethan\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Ethan\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Ethan\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Ethan\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.0.Final\hibernate-commons-annotations-5.1.0.Final.jar;C:\Users\Ethan\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Ethan\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Ethan\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Ethan\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Ethan\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Ethan\.m2\repository\org\hibernate\validator\hibernate-validator\6.0.17.Final\hibernate-validator-6.0.17.Final.jar;C:\Users\Ethan\.m2\repository\javax\validation\validation-api\2.0.1.Final\validation-api-2.0.1.Final.jar, hibernate.connection.dialect=org.hibernate.dialect.PostgreSQLDialect, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/Chicago, java.vm.specification.version=15, os.name=Windows 10, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin, sun.java.command=SocialHubDriver, jdk.debug=release, sun.cpu.endian=little, user.home=C:\Users\Ethan, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2020-10-20, java.home=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre, file.separator=\, java.vm.compressedOopsMode=Zero based, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=15.0.1+9-18, user.name=Ethan, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb, file.encoding=Cp1252, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=org.postgresql.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\Ethan\AppData\Local\Temp\, java.version=15.0.1, user.dir=D:\Documents\Revtature\SocialHubWeek4, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@26f46fa6, java.library.path=C:\Program Files\sts-4.9.0.RELEASE\plugins\org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin/server;C:/Program Files/sts-4.9.0.RELEASE//plugins/org.eclipse.justj.openjdk.hotspot.jre.full.win32.x86_64_15.0.1.v20201027-0507/jre/bin;C:\Program Files\Java\jdk1.8.0_281;C:\Program Files (x86)\Razer Chroma SDK\bin;C:\Program Files\Razer Chroma SDK\bin;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Program Files (x86)\Razer\ChromaBroadcast\bin;C:\Program Files\Razer\ChromaBroadcast\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\WorldPainter;C:\Program Files\Git\cmd;C:\Windows\system32\config\systemprofile\AppData\Local\Microsoft\WindowsApps;C:\Program Files\PuTTY\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\GtkSharp\2.12\bin;C:\Program Files\OpenSSL-Win64\bin\;C:\Program Files\apache-maven-3.6.3\bin;C:\Program Files\nodejs\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Program Files\Java\jdk1.8.0_281\bin;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\Scripts\;C:\Users\Ethan\AppData\Local\Programs\Python\Python38\;C:\Users\Ethan\AppData\Local\Microsoft\WindowsApps;C:\Users\Ethan\AppData\Local\Programs\Microsoft VS Code\bin;C:\Program Files\MongoDB;C:\Program Files\apache-maven-3.6.3\bin;C:\Users\Ethan\AppData\Roaming\npm;C:\Users\Ethan\AppData\Local\GitHubDesktop\bin;C:\Program Files\sts-4.9.0.RELEASE;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=15.0.1+9-18, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.pool_size=10, java.class.version=59.0}
2021-06-30 10:08:28 INFO  Version:21 - HV000001: Hibernate Validator 6.0.17.Final
2021-06-30 10:08:28 DEBUG TraversableResolvers:93 - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2021-06-30 10:08:28 DEBUG TraversableResolvers:103 - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2021-06-30 10:08:28 DEBUG ValidationXmlParser:120 - Trying to load META-INF/validation.xml for XML based Validator configuration.
2021-06-30 10:08:28 DEBUG ResourceLoaderHelper:60 - Trying to load META-INF/validation.xml via TCCL
2021-06-30 10:08:28 DEBUG ResourceLoaderHelper:66 - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2021-06-30 10:08:28 DEBUG ValidationXmlParser:127 - No META-INF/validation.xml found. Using annotation based configuration only.
2021-06-30 10:08:28 DEBUG ResourceBundleMessageInterpolator:89 - Loaded expression factory via original TCCL
2021-06-30 10:08:28 DEBUG ValidatorFactoryImpl:578 - HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2021-06-30 10:08:28 DEBUG ValidatorFactoryImpl:579 - HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2021-06-30 10:08:28 DEBUG ValidatorFactoryImpl:580 - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2021-06-30 10:08:28 DEBUG ValidatorFactoryImpl:581 - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2021-06-30 10:08:28 DEBUG ValidatorFactoryImpl:582 - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2021-06-30 10:08:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-30 10:08:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-30 10:08:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-30 10:08:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-30 10:08:28 DEBUG JaccIntegrator:80 - Skipping JACC integration as it was not enabled
2021-06-30 10:08:28 DEBUG SessionFactoryImpl:291 - Instantiated session factory
2021-06-30 10:08:28 DEBUG TypeConfiguration$Scope:157 - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@616b241a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4fe533ff]
2021-06-30 10:08:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-30 10:08:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-30 10:08:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.Post] is safe
2021-06-30 10:08:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.Post
2021-06-30 10:08:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-30 10:08:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-30 10:08:28 DEBUG ClassLoaderAccessImpl:60 - Not known whether passed class name [com.example.models.User] is safe
2021-06-30 10:08:28 DEBUG ClassLoaderAccessImpl:62 - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.example.models.User
2021-06-30 10:08:28 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.likePosts
2021-06-30 10:08:28 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (user_id, post_id) values (?, ?)
2021-06-30 10:08:28 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set post_id=? where user_id=? and post_id=?
2021-06-30 10:08:28 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where user_id=? and post_id=?
2021-06-30 10:08:28 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where user_id=?
2021-06-30 10:08:28 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.User.posts
2021-06-30 10:08:28 DEBUG AbstractCollectionPersister:690 -  Row insert: update posts set user_id=? where post_id=?
2021-06-30 10:08:28 DEBUG AbstractCollectionPersister:693 -  Row update: update posts set  where post_id=?
2021-06-30 10:08:28 DEBUG AbstractCollectionPersister:696 -  Row delete: update posts set user_id=null where user_id=? and post_id=?
2021-06-30 10:08:28 DEBUG AbstractCollectionPersister:699 -  One-shot delete: update posts set user_id=null where user_id=?
2021-06-30 10:08:28 DEBUG AbstractCollectionPersister:688 - Static SQL for collection: com.example.models.Post.likes
2021-06-30 10:08:28 DEBUG AbstractCollectionPersister:690 -  Row insert: insert into post_likes_junction (post_id, user_id) values (?, ?)
2021-06-30 10:08:28 DEBUG AbstractCollectionPersister:693 -  Row update: update post_likes_junction set user_id=? where post_id=? and user_id=?
2021-06-30 10:08:28 DEBUG AbstractCollectionPersister:696 -  Row delete: delete from post_likes_junction where post_id=? and user_id=?
2021-06-30 10:08:28 DEBUG AbstractCollectionPersister:699 -  One-shot delete: delete from post_likes_junction where post_id=?
2021-06-30 10:08:28 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.Post
2021-06-30 10:08:28 DEBUG AbstractEntityPersister:3796 -  Version select: select post_id from posts where post_id =?
2021-06-30 10:08:28 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select post_.post_id, post_.content as content2_1_, post_.user_id as user_id3_1_ from posts post_ where post_.post_id=?
2021-06-30 10:08:28 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into posts (content, user_id, post_id) values (?, ?, ?)
2021-06-30 10:08:28 DEBUG AbstractEntityPersister:394 -  Update 0: update posts set content=?, user_id=? where post_id=?
2021-06-30 10:08:28 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from posts where post_id=?
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@733fb462]
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@23cd5d42]
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a1ccaaf]
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@198536f6]
2021-06-30 10:08:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-30 10:08:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-30 10:08:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-30 10:08:28 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [NONE]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f025000]
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@739e8b96]
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19b07407]
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54ffa561]
2021-06-30 10:08:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-30 10:08:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-30 10:08:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.Post)
    - Returns
       - EntityReturnImpl(entity=com.example.models.Post, querySpaceUid=<gen:0>, path=com.example.models.Post)
          - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:1>, path=com.example.models.Post.likes)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:2>, path=com.example.models.Post.likes.<elements>)
          - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:3>, path=com.example.models.Post.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.Post)
          - SQL table alias mapping - post0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_1_0_}

2021-06-30 10:08:28 DEBUG EntityLoader:137 - Static select for entity com.example.models.Post [READ]: select post0_.post_id as post_id1_1_0_, post0_.content as content2_1_0_, post0_.user_id as user_id3_1_0_ from posts post0_ where post0_.post_id=?
2021-06-30 10:08:28 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-30 10:08:28 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.Post: select post0_.post_id as post_id1_1_2_, post0_.content as content2_1_2_, post0_.user_id as user_id3_1_2_, likes1_.post_id as post_id1_0_4_, user2_.user_id as user_id2_0_4_, user2_.user_id as user_id1_2_0_, user2_.email as email2_2_0_, user2_.first_name as first_na3_2_0_, user2_.last_name as last_nam4_2_0_, user2_.password as password5_2_0_, user2_.username as username6_2_0_, user3_.user_id as user_id1_2_1_, user3_.email as email2_2_1_, user3_.first_name as first_na3_2_1_, user3_.last_name as last_nam4_2_1_, user3_.password as password5_2_1_, user3_.username as username6_2_1_ from posts post0_ left outer join post_likes_junction likes1_ on post0_.post_id=likes1_.post_id left outer join users user2_ on likes1_.user_id=user2_.user_id left outer join users user3_ on post0_.user_id=user3_.user_id where post0_.post_id=?
2021-06-30 10:08:28 DEBUG AbstractEntityPersister:3791 - Static SQL for entity: com.example.models.User
2021-06-30 10:08:28 DEBUG AbstractEntityPersister:3796 -  Version select: select user_id from users where user_id =?
2021-06-30 10:08:28 DEBUG AbstractEntityPersister:3799 -  Snapshot select: select user_.user_id, user_.email as email2_2_, user_.first_name as first_na3_2_, user_.last_name as last_nam4_2_, user_.password as password5_2_, user_.username as username6_2_ from users user_ where user_.user_id=?
2021-06-30 10:08:28 DEBUG AbstractEntityPersister:394 -  Insert 0: insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-30 10:08:28 DEBUG AbstractEntityPersister:394 -  Update 0: update users set email=?, first_name=?, last_name=?, password=?, username=? where user_id=?
2021-06-30 10:08:28 DEBUG AbstractEntityPersister:394 -  Delete 0: delete from users where user_id=?
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34330f77]
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b033eac]
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69c532af]
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45a1d057]
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51a16adf]
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-30 10:08:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-30 10:08:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-30 10:08:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-30 10:08:28 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@385d819]
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@8fd91d1]
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52d0f583]
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7fb8bad0]
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12d40609]
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-30 10:08:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-30 10:08:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-30 10:08:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(entity=com.example.models.User)
    - Returns
       - EntityReturnImpl(entity=com.example.models.User, querySpaceUid=<gen:0>, path=com.example.models.User)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:1>, path=com.example.models.User.likePosts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:2>, path=com.example.models.User.likePosts.<elements>)
          - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:3>, path=com.example.models.User.posts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:4>, path=com.example.models.User.posts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.example.models.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}

2021-06-30 10:08:28 DEBUG EntityLoader:137 - Static select for entity com.example.models.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.email as email2_2_0_, user0_.first_name as first_na3_2_0_, user0_.last_name as last_nam4_2_0_, user0_.password as password5_2_0_, user0_.username as username6_2_0_ from users user0_ where user0_.user_id=?
2021-06-30 10:08:28 DEBUG Loader:38 - Static select for action ACTION_MERGE on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-30 10:08:28 DEBUG Loader:38 - Static select for action ACTION_REFRESH on entity com.example.models.User: select user0_.user_id as user_id1_2_1_, user0_.email as email2_2_1_, user0_.first_name as first_na3_2_1_, user0_.last_name as last_nam4_2_1_, user0_.password as password5_2_1_, user0_.username as username6_2_1_, posts1_.user_id as user_id3_1_3_, posts1_.post_id as post_id1_1_3_, posts1_.post_id as post_id1_1_0_, posts1_.content as content2_1_0_, posts1_.user_id as user_id3_1_0_ from users user0_ left outer join posts posts1_ on user0_.user_id=posts1_.user_id where user0_.user_id=?
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7f3fc42f]
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a1a012]
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likes
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e424582]
2021-06-30 10:08:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-30 10:08:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-30 10:08:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.likePosts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.likePosts, querySpaceUid=<gen:0>, path=[com.example.models.User.likePosts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.likePosts].<elements>)
             - EntityAttributeFetchImpl(entity=com.example.models.User, querySpaceUid=<gen:2>, path=[com.example.models.User.likePosts].<elements>.user)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.likePosts)
          - SQL table alias mapping - likeposts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - post1_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-30 10:08:28 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.likePosts: select likeposts0_.user_id as user_id2_0_0_, likeposts0_.post_id as post_id1_0_0_, post1_.post_id as post_id1_1_1_, post1_.content as content2_1_1_, post1_.user_id as user_id3_1_1_ from post_likes_junction likeposts0_ inner join posts post1_ on likeposts0_.post_id=post1_.post_id where likeposts0_.user_id=?
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2e590b]
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42ef042a]
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likes
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2c18a3ea]
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@166c2c17]
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : postContent
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : user
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : user
2021-06-30 10:08:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-30 10:08:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-30 10:08:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.User.posts)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:0>, path=[com.example.models.User.posts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:1>, path=[com.example.models.User.posts].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:2>, path=[com.example.models.User.posts].<elements>.likes)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:3>, path=[com.example.models.User.posts].<elements>.likes.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.User.posts)
          - SQL table alias mapping - posts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - post_id1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.Post)
                - SQL table alias mapping - posts0_
                - alias suffix - 1_
                - suffixed key columns - {post_id1_1_1_}

2021-06-30 10:08:28 DEBUG CollectionLoader:83 - Static select for collection com.example.models.User.posts: select posts0_.user_id as user_id3_1_0_, posts0_.post_id as post_id1_1_0_, posts0_.post_id as post_id1_1_1_, posts0_.content as content2_1_1_, posts0_.user_id as user_id3_1_1_ from posts posts0_ where posts0_.user_id=?
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c96c85]
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b0f2d91]
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : email
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : firstName
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : lastName
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : likePosts
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:154 - Property path deemed to be circular : likePosts
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : password
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : posts
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5927f904]
2021-06-30 10:08:28 DEBUG QuerySpacesImpl:174 - Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bb62414]
2021-06-30 10:08:28 DEBUG MetamodelGraphWalker:146 - Visiting attribute path : username
2021-06-30 10:08:28 DEBUG FetchStyleLoadPlanBuildingAssociationVisitationStrategy:150 - Building LoadPlan...
2021-06-30 10:08:28 DEBUG LoadQueryJoinAndFetchProcessor:102 - processing queryspace <gen:0>
2021-06-30 10:08:28 DEBUG LoadPlanTreePrinter:55 - LoadPlan(collection=com.example.models.Post.likes)
    - Returns
       - CollectionReturnImpl(collection=com.example.models.Post.likes, querySpaceUid=<gen:0>, path=[com.example.models.Post.likes])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.User, querySpaceUid=<gen:1>, path=[com.example.models.Post.likes].<elements>)
             - CollectionAttributeFetchImpl(collection=com.example.models.User.posts, querySpaceUid=<gen:2>, path=[com.example.models.Post.likes].<elements>.posts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.example.models.Post, querySpaceUid=<gen:3>, path=[com.example.models.Post.likes].<elements>.posts.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.example.models.Post.likes)
          - SQL table alias mapping - likes0_
          - alias suffix - 0_
          - suffixed key columns - {post_id1_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - user_id1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.example.models.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

2021-06-30 10:08:28 DEBUG CollectionLoader:83 - Static select for collection com.example.models.Post.likes: select likes0_.post_id as post_id1_0_0_, likes0_.user_id as user_id2_0_0_, user1_.user_id as user_id1_2_1_, user1_.email as email2_2_1_, user1_.first_name as first_na3_2_1_, user1_.last_name as last_nam4_2_1_, user1_.password as password5_2_1_, user1_.username as username6_2_1_ from post_likes_junction likes0_ inner join users user1_ on likes0_.user_id=user1_.user_id where likes0_.post_id=?
2021-06-30 10:08:28 INFO  access:47 - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@619c93ca] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2021-06-30 10:08:28 DEBUG Table:516 - No alter strings for table : post_likes_junction
2021-06-30 10:08:28 DEBUG Table:516 - No alter strings for table : posts
2021-06-30 10:08:28 DEBUG Table:516 - No alter strings for table : users
2021-06-30 10:08:29 DEBUG JtaPlatformInitiator:43 - No JtaPlatform was specified, checking resolver
2021-06-30 10:08:29 DEBUG JtaPlatformResolverInitiator:33 - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2021-06-30 10:08:29 DEBUG StandardJtaPlatformResolver:137 - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-30 10:08:29 INFO  JtaPlatformInitiator:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2021-06-30 10:08:29 DEBUG NamedQueryRepository:151 - Checking 1 named HQL queries
2021-06-30 10:08:29 DEBUG NamedQueryRepository:155 - Checking named query: getUsersLikedPosts
2021-06-30 10:08:29 DEBUG StatisticsInitiator:101 - Statistics initialized [enabled=false]
2021-06-30 10:08:29 DEBUG QueryTranslatorFactoryInitiator:45 - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@25791d40
2021-06-30 10:08:29 DEBUG QueryTranslatorImpl:288 - parse() - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-30 10:08:29 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-30 10:08:29 DEBUG QueryTranslatorImpl:309 - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  \-[IDENT] Node: 'example'
    |  |     |  |  \-[IDENT] Node: 'models'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'u'
    |        \-[IDENT] Node: 'likePosts'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'id'

2021-06-30 10:08:29 DEBUG HqlSqlBaseWalker:124 - select << begin [level=1, statement=select]
2021-06-30 10:08:29 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.User (u) -> user0_
2021-06-30 10:08:29 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-30 10:08:29 DEBUG DotNode:689 - getDataType() : likePosts -> org.hibernate.type.SetType(com.example.models.User.likePosts)
2021-06-30 10:08:29 DEBUG FromElementFactory:404 - createManyToMany() : path = u.likePosts role = com.example.models.User.likePosts associatedEntityName = com.example.models.Post
2021-06-30 10:08:29 DEBUG FromElement:146 - FromClause{level=1} : com.example.models.Post (<no alias>) -> post2_
2021-06-30 10:08:29 DEBUG FromClause:287 - addJoinByPathMap() : u.likePosts -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
2021-06-30 10:08:29 DEBUG DotNode:342 - dereferenceCollection() : Created new FROM element for u.likePosts : post_likes_junction post2_
2021-06-30 10:08:29 DEBUG FromReferenceNode:60 - Resolved : u.likePosts -> .
2021-06-30 10:08:29 DEBUG FromReferenceNode:60 - Resolved : u -> user0_.user_id
2021-06-30 10:08:29 DEBUG DotNode:689 - getDataType() : id -> org.hibernate.type.IntegerType@773cbf4f
2021-06-30 10:08:29 DEBUG FromReferenceNode:60 - Resolved : u.id -> user0_.user_id
2021-06-30 10:08:29 DEBUG HqlSqlBaseWalker:128 - select : finishing up [level=1, statement=select]
2021-06-30 10:08:29 DEBUG HqlSqlWalker:752 - processQuery() :  ( SELECT ( {select clause} ( . user0_.user_id likePosts ) ) ( FromClause{level=1} ( users user0_ post_likes_junction post2_ ) ) ( where ( = ( user0_.user_id user0_.user_id id ) ? ) ) )
2021-06-30 10:08:29 DEBUG JoinProcessor:192 - Using FROM fragment [users user0_]
2021-06-30 10:08:29 DEBUG JoinProcessor:192 - Using FROM fragment [inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id]
2021-06-30 10:08:29 DEBUG HqlSqlBaseWalker:132 - select >> end [level=1, statement=select]
2021-06-30 10:08:29 DEBUG QueryTranslatorImpl:275 - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (post_likes_junction,posts,users)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'post2_.post_id as post_id1_1_' {propertyName=likePosts,dereferenceType=COLLECTION,getPropertyPath=likePosts,path=u.likePosts,tableAlias=post2_,className=com.example.models.Post,classAlias=null}
    |  |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
    |  |  \-[IDENT] IdentNode: 'likePosts' {originalText=likePosts}
    |  \-[SQL_TOKEN] SqlFragment: 'post2_.content as content2_1_, post2_.user_id as user_id3_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_, post2_], fromElementsByPath=[u.likePosts], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'users user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=users,tableAlias=user0_,origin=null,columns={,className=com.example.models.User}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=com.example.models.User.likePosts,tableName=posts,tableAlias=post2_,origin=users user0_,columns={user0_.user_id ,className=com.example.models.Post}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.user_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=u.id,tableAlias=user0_,className=com.example.models.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.user_id' {alias=u, className=com.example.models.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=id, expectedType=org.hibernate.type.IntegerType@773cbf4f}

2021-06-30 10:08:29 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-30 10:08:29 DEBUG QueryTranslatorImpl:254 - HQL: select u.likePosts from com.example.models.User u where u.id = :id
2021-06-30 10:08:29 DEBUG QueryTranslatorImpl:255 - SQL: select post2_.post_id as post_id1_1_, post2_.content as content2_1_, post2_.user_id as user_id3_1_ from users user0_ inner join post_likes_junction likeposts1_ on user0_.user_id=likeposts1_.user_id inner join posts post2_ on likeposts1_.post_id=post2_.post_id where user0_.user_id=?
2021-06-30 10:08:29 DEBUG ErrorTracker:97 - throwQueryException() : no errors
2021-06-30 10:08:29 DEBUG NamedQueryRepository:167 - Checking 1 named SQL queries
2021-06-30 10:08:29 DEBUG NamedQueryRepository:171 - Checking named SQL query: getUsersThatLiked
2021-06-30 10:08:29 DEBUG SessionFactoryRegistry:52 - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@4fd74223
2021-06-30 10:08:29 DEBUG SessionFactoryRegistry:74 - Registering SessionFactory: a1f76e76-c993-4554-ab7f-c990dc693dcf (<unnamed>)
2021-06-30 10:08:29 DEBUG SessionFactoryRegistry:81 - Not binding SessionFactory to JNDI, no JNDI name configured
2021-06-30 10:08:29 DEBUG TransactionImpl:56 - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2021-06-30 10:08:29 DEBUG TransactionImpl:84 - begin
2021-06-30 10:08:29 DEBUG SQL:94 - select nextval ('hibernate_sequence')
2021-06-30 10:08:29 DEBUG SequenceStructure:101 - Sequence value obtained: 11
2021-06-30 10:08:29 DEBUG ResourceRegistryStandardImpl:87 - HHH000387: ResultSet's statement was not registered
2021-06-30 10:08:29 DEBUG AbstractSaveEventListener:132 - Generated identifier: 11, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
2021-06-30 10:08:29 DEBUG TransactionImpl:101 - committing
2021-06-30 10:08:29 DEBUG AbstractFlushingEventListener:141 - Processing flush-time cascades
2021-06-30 10:08:29 DEBUG AbstractFlushingEventListener:193 - Dirty checking collections
2021-06-30 10:08:29 DEBUG Collections:190 - Collection found: [com.example.models.User.likePosts#11], was: [<unreferenced>] (initialized)
2021-06-30 10:08:29 DEBUG Collections:190 - Collection found: [com.example.models.User.posts#11], was: [<unreferenced>] (initialized)
2021-06-30 10:08:29 DEBUG AbstractFlushingEventListener:115 - Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
2021-06-30 10:08:29 DEBUG AbstractFlushingEventListener:122 - Flushed: 2 (re)creations, 0 updates, 0 removals to 2 collections
2021-06-30 10:08:29 DEBUG EntityPrinter:110 - Listing entities:
2021-06-30 10:08:29 DEBUG EntityPrinter:117 - com.example.models.User{firstName=Beth, lastName=Smith, password=password, likePosts=[], id=11, posts=[], email=beth@email.com, username=BethSmith5770}
2021-06-30 10:08:29 DEBUG SQL:94 - insert into users (email, first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?, ?)
2021-06-30 10:08:29 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-30 10:08:29 DEBUG LogicalConnectionManagedImpl:161 - Initiating JDBC connection release from afterTransaction
2021-06-30 10:08:29 DEBUG SessionFactoryImpl:792 - HHH000031: Closing
2021-06-30 10:08:29 DEBUG TypeConfiguration$Scope:350 - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4c7d7430] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@4fe533ff]
2021-06-30 10:08:29 DEBUG AbstractServiceRegistryImpl:418 - Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2021-06-30 10:08:29 INFO  pooling:408 - HHH10001008: Cleaning up connection pool [jdbc:postgresql://database-1.cjryxnsvzgov.us-east-2.rds.amazonaws.com:5432/socialhubdb]
2021-06-30 10:08:29 DEBUG BootstrapServiceRegistryImpl:295 - Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
